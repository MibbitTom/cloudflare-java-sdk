/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ZeroTrustGatewayAction;
import org.openapitools.client.model.ZeroTrustGatewayRuleSettings;
import org.openapitools.client.model.ZeroTrustGatewaySchedule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private ZeroTrustGatewayAction action;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DEVICE_POSTURE = "device_posture";
  @SerializedName(SERIALIZED_NAME_DEVICE_POSTURE)
  private String devicePosture;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  /**
   * The protocol or layer to use.
   */
  @JsonAdapter(FiltersEnum.Adapter.class)
  public enum FiltersEnum {
    HTTP("http"),
    
    DNS("dns"),
    
    L4("l4"),
    
    EGRESS("egress");

    private String value;

    FiltersEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FiltersEnum fromValue(String value) {
      for (FiltersEnum b : FiltersEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FiltersEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FiltersEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FiltersEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FiltersEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FiltersEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<FiltersEnum> filters = new ArrayList<>();

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private String identity;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRECEDENCE = "precedence";
  @SerializedName(SERIALIZED_NAME_PRECEDENCE)
  private Integer precedence;

  public static final String SERIALIZED_NAME_RULE_SETTINGS = "rule_settings";
  @SerializedName(SERIALIZED_NAME_RULE_SETTINGS)
  private ZeroTrustGatewayRuleSettings ruleSettings;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private ZeroTrustGatewaySchedule schedule;

  public static final String SERIALIZED_NAME_TRAFFIC = "traffic";
  @SerializedName(SERIALIZED_NAME_TRAFFIC)
  private String traffic;

  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest() {
  }

  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest action(ZeroTrustGatewayAction action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @javax.annotation.Nonnull
  public ZeroTrustGatewayAction getAction() {
    return action;
  }

  public void setAction(ZeroTrustGatewayAction action) {
    this.action = action;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the rule.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest devicePosture(String devicePosture) {
    this.devicePosture = devicePosture;
    return this;
  }

   /**
   * The wirefilter expression used for device posture check matching.
   * @return devicePosture
  **/
  @javax.annotation.Nullable
  public String getDevicePosture() {
    return devicePosture;
  }

  public void setDevicePosture(String devicePosture) {
    this.devicePosture = devicePosture;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * True if the rule is enabled.
   * @return enabled
  **/
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest filters(List<FiltersEnum> filters) {
    this.filters = filters;
    return this;
  }

  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest addFiltersItem(FiltersEnum filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * The protocol or layer to evaluate the traffic, identity, and device posture expressions.
   * @return filters
  **/
  @javax.annotation.Nullable
  public List<FiltersEnum> getFilters() {
    return filters;
  }

  public void setFilters(List<FiltersEnum> filters) {
    this.filters = filters;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest identity(String identity) {
    this.identity = identity;
    return this;
  }

   /**
   * The wirefilter expression used for identity matching.
   * @return identity
  **/
  @javax.annotation.Nullable
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the rule.
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest precedence(Integer precedence) {
    this.precedence = precedence;
    return this;
  }

   /**
   * Precedence sets the order of your rules. Lower values indicate higher precedence. At each processing phase, applicable rules are evaluated in ascending order of this value.
   * @return precedence
  **/
  @javax.annotation.Nullable
  public Integer getPrecedence() {
    return precedence;
  }

  public void setPrecedence(Integer precedence) {
    this.precedence = precedence;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest ruleSettings(ZeroTrustGatewayRuleSettings ruleSettings) {
    this.ruleSettings = ruleSettings;
    return this;
  }

   /**
   * Get ruleSettings
   * @return ruleSettings
  **/
  @javax.annotation.Nullable
  public ZeroTrustGatewayRuleSettings getRuleSettings() {
    return ruleSettings;
  }

  public void setRuleSettings(ZeroTrustGatewayRuleSettings ruleSettings) {
    this.ruleSettings = ruleSettings;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest schedule(ZeroTrustGatewaySchedule schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  public ZeroTrustGatewaySchedule getSchedule() {
    return schedule;
  }

  public void setSchedule(ZeroTrustGatewaySchedule schedule) {
    this.schedule = schedule;
  }


  public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest traffic(String traffic) {
    this.traffic = traffic;
    return this;
  }

   /**
   * The wirefilter expression used for traffic matching.
   * @return traffic
  **/
  @javax.annotation.Nullable
  public String getTraffic() {
    return traffic;
  }

  public void setTraffic(String traffic) {
    this.traffic = traffic;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest = (ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest) o;
    return Objects.equals(this.action, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.action) &&
        Objects.equals(this.description, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.description) &&
        Objects.equals(this.devicePosture, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.devicePosture) &&
        Objects.equals(this.enabled, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.enabled) &&
        Objects.equals(this.filters, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.filters) &&
        Objects.equals(this.identity, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.identity) &&
        Objects.equals(this.name, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.name) &&
        Objects.equals(this.precedence, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.precedence) &&
        Objects.equals(this.ruleSettings, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.ruleSettings) &&
        Objects.equals(this.schedule, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.schedule) &&
        Objects.equals(this.traffic, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.traffic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, description, devicePosture, enabled, filters, identity, name, precedence, ruleSettings, schedule, traffic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    devicePosture: ").append(toIndentedString(devicePosture)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    precedence: ").append(toIndentedString(precedence)).append("\n");
    sb.append("    ruleSettings: ").append(toIndentedString(ruleSettings)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    traffic: ").append(toIndentedString(traffic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("description");
    openapiFields.add("device_posture");
    openapiFields.add("enabled");
    openapiFields.add("filters");
    openapiFields.add("identity");
    openapiFields.add("name");
    openapiFields.add("precedence");
    openapiFields.add("rule_settings");
    openapiFields.add("schedule");
    openapiFields.add("traffic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("action");
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest is not found in the empty JSON string", ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `action`
      ZeroTrustGatewayAction.validateJsonElement(jsonObj.get("action"));
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("device_posture") != null && !jsonObj.get("device_posture").isJsonNull()) && !jsonObj.get("device_posture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `device_posture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("device_posture").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("filters") != null && !jsonObj.get("filters").isJsonNull() && !jsonObj.get("filters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `filters` to be an array in the JSON string but got `%s`", jsonObj.get("filters").toString()));
      }
      if ((jsonObj.get("identity") != null && !jsonObj.get("identity").isJsonNull()) && !jsonObj.get("identity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `rule_settings`
      if (jsonObj.get("rule_settings") != null && !jsonObj.get("rule_settings").isJsonNull()) {
        ZeroTrustGatewayRuleSettings.validateJsonElement(jsonObj.get("rule_settings"));
      }
      // validate the optional field `schedule`
      if (jsonObj.get("schedule") != null && !jsonObj.get("schedule").isJsonNull()) {
        ZeroTrustGatewaySchedule.validateJsonElement(jsonObj.get("schedule"));
      }
      if ((jsonObj.get("traffic") != null && !jsonObj.get("traffic").isJsonNull()) && !jsonObj.get("traffic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `traffic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("traffic").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest>() {
           @Override
           public void write(JsonWriter out, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest
  * @throws IOException if the JSON string is invalid with respect to ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest
  */
  public static ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest.class);
  }

 /**
  * Convert an instance of ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

