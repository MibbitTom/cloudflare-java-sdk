/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PagesDeploymentConfigsValuesAiBindings;
import org.openapitools.client.model.PagesDeploymentConfigsValuesAnalyticsEngineDatasets;
import org.openapitools.client.model.PagesDeploymentConfigsValuesBrowsers;
import org.openapitools.client.model.PagesDeploymentConfigsValuesD1Databases;
import org.openapitools.client.model.PagesDeploymentConfigsValuesDurableObjectNamespaces;
import org.openapitools.client.model.PagesDeploymentConfigsValuesEnvVars;
import org.openapitools.client.model.PagesDeploymentConfigsValuesHyperdriveBindings;
import org.openapitools.client.model.PagesDeploymentConfigsValuesKvNamespaces;
import org.openapitools.client.model.PagesDeploymentConfigsValuesMtlsCertificates;
import org.openapitools.client.model.PagesDeploymentConfigsValuesPlacement;
import org.openapitools.client.model.PagesDeploymentConfigsValuesQueueProducers;
import org.openapitools.client.model.PagesDeploymentConfigsValuesR2Buckets;
import org.openapitools.client.model.PagesDeploymentConfigsValuesServices;
import org.openapitools.client.model.PagesDeploymentConfigsValuesVectorizeBindings;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import invalidPackageName.JSON;

/**
 * PagesDeploymentConfigsValues
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:29:23.936635354+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class PagesDeploymentConfigsValues {
  public static final String SERIALIZED_NAME_AI_BINDINGS = "ai_bindings";
  @SerializedName(SERIALIZED_NAME_AI_BINDINGS)
  private PagesDeploymentConfigsValuesAiBindings aiBindings;

  public static final String SERIALIZED_NAME_ANALYTICS_ENGINE_DATASETS = "analytics_engine_datasets";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_ENGINE_DATASETS)
  private PagesDeploymentConfigsValuesAnalyticsEngineDatasets analyticsEngineDatasets;

  public static final String SERIALIZED_NAME_BROWSERS = "browsers";
  @SerializedName(SERIALIZED_NAME_BROWSERS)
  private PagesDeploymentConfigsValuesBrowsers browsers;

  public static final String SERIALIZED_NAME_COMPATIBILITY_DATE = "compatibility_date";
  @SerializedName(SERIALIZED_NAME_COMPATIBILITY_DATE)
  private String compatibilityDate;

  public static final String SERIALIZED_NAME_COMPATIBILITY_FLAGS = "compatibility_flags";
  @SerializedName(SERIALIZED_NAME_COMPATIBILITY_FLAGS)
  private List<Object> compatibilityFlags = new ArrayList<>();

  public static final String SERIALIZED_NAME_D1_DATABASES = "d1_databases";
  @SerializedName(SERIALIZED_NAME_D1_DATABASES)
  private PagesDeploymentConfigsValuesD1Databases d1Databases;

  public static final String SERIALIZED_NAME_DURABLE_OBJECT_NAMESPACES = "durable_object_namespaces";
  @SerializedName(SERIALIZED_NAME_DURABLE_OBJECT_NAMESPACES)
  private PagesDeploymentConfigsValuesDurableObjectNamespaces durableObjectNamespaces;

  public static final String SERIALIZED_NAME_ENV_VARS = "env_vars";
  @SerializedName(SERIALIZED_NAME_ENV_VARS)
  private PagesDeploymentConfigsValuesEnvVars envVars;

  public static final String SERIALIZED_NAME_HYPERDRIVE_BINDINGS = "hyperdrive_bindings";
  @SerializedName(SERIALIZED_NAME_HYPERDRIVE_BINDINGS)
  private PagesDeploymentConfigsValuesHyperdriveBindings hyperdriveBindings;

  public static final String SERIALIZED_NAME_KV_NAMESPACES = "kv_namespaces";
  @SerializedName(SERIALIZED_NAME_KV_NAMESPACES)
  private PagesDeploymentConfigsValuesKvNamespaces kvNamespaces;

  public static final String SERIALIZED_NAME_MTLS_CERTIFICATES = "mtls_certificates";
  @SerializedName(SERIALIZED_NAME_MTLS_CERTIFICATES)
  private PagesDeploymentConfigsValuesMtlsCertificates mtlsCertificates;

  public static final String SERIALIZED_NAME_PLACEMENT = "placement";
  @SerializedName(SERIALIZED_NAME_PLACEMENT)
  private PagesDeploymentConfigsValuesPlacement placement;

  public static final String SERIALIZED_NAME_QUEUE_PRODUCERS = "queue_producers";
  @SerializedName(SERIALIZED_NAME_QUEUE_PRODUCERS)
  private PagesDeploymentConfigsValuesQueueProducers queueProducers;

  public static final String SERIALIZED_NAME_R2_BUCKETS = "r2_buckets";
  @SerializedName(SERIALIZED_NAME_R2_BUCKETS)
  private PagesDeploymentConfigsValuesR2Buckets r2Buckets;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private PagesDeploymentConfigsValuesServices services;

  public static final String SERIALIZED_NAME_VECTORIZE_BINDINGS = "vectorize_bindings";
  @SerializedName(SERIALIZED_NAME_VECTORIZE_BINDINGS)
  private PagesDeploymentConfigsValuesVectorizeBindings vectorizeBindings;

  public PagesDeploymentConfigsValues() {
  }

  public PagesDeploymentConfigsValues aiBindings(PagesDeploymentConfigsValuesAiBindings aiBindings) {
    this.aiBindings = aiBindings;
    return this;
  }

   /**
   * Get aiBindings
   * @return aiBindings
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesAiBindings getAiBindings() {
    return aiBindings;
  }

  public void setAiBindings(PagesDeploymentConfigsValuesAiBindings aiBindings) {
    this.aiBindings = aiBindings;
  }


  public PagesDeploymentConfigsValues analyticsEngineDatasets(PagesDeploymentConfigsValuesAnalyticsEngineDatasets analyticsEngineDatasets) {
    this.analyticsEngineDatasets = analyticsEngineDatasets;
    return this;
  }

   /**
   * Get analyticsEngineDatasets
   * @return analyticsEngineDatasets
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesAnalyticsEngineDatasets getAnalyticsEngineDatasets() {
    return analyticsEngineDatasets;
  }

  public void setAnalyticsEngineDatasets(PagesDeploymentConfigsValuesAnalyticsEngineDatasets analyticsEngineDatasets) {
    this.analyticsEngineDatasets = analyticsEngineDatasets;
  }


  public PagesDeploymentConfigsValues browsers(PagesDeploymentConfigsValuesBrowsers browsers) {
    this.browsers = browsers;
    return this;
  }

   /**
   * Get browsers
   * @return browsers
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesBrowsers getBrowsers() {
    return browsers;
  }

  public void setBrowsers(PagesDeploymentConfigsValuesBrowsers browsers) {
    this.browsers = browsers;
  }


  public PagesDeploymentConfigsValues compatibilityDate(String compatibilityDate) {
    this.compatibilityDate = compatibilityDate;
    return this;
  }

   /**
   * Compatibility date used for Pages Functions.
   * @return compatibilityDate
  **/
  @javax.annotation.Nullable
  public String getCompatibilityDate() {
    return compatibilityDate;
  }

  public void setCompatibilityDate(String compatibilityDate) {
    this.compatibilityDate = compatibilityDate;
  }


  public PagesDeploymentConfigsValues compatibilityFlags(List<Object> compatibilityFlags) {
    this.compatibilityFlags = compatibilityFlags;
    return this;
  }

  public PagesDeploymentConfigsValues addCompatibilityFlagsItem(Object compatibilityFlagsItem) {
    if (this.compatibilityFlags == null) {
      this.compatibilityFlags = new ArrayList<>();
    }
    this.compatibilityFlags.add(compatibilityFlagsItem);
    return this;
  }

   /**
   * Compatibility flags used for Pages Functions.
   * @return compatibilityFlags
  **/
  @javax.annotation.Nullable
  public List<Object> getCompatibilityFlags() {
    return compatibilityFlags;
  }

  public void setCompatibilityFlags(List<Object> compatibilityFlags) {
    this.compatibilityFlags = compatibilityFlags;
  }


  public PagesDeploymentConfigsValues d1Databases(PagesDeploymentConfigsValuesD1Databases d1Databases) {
    this.d1Databases = d1Databases;
    return this;
  }

   /**
   * Get d1Databases
   * @return d1Databases
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesD1Databases getD1Databases() {
    return d1Databases;
  }

  public void setD1Databases(PagesDeploymentConfigsValuesD1Databases d1Databases) {
    this.d1Databases = d1Databases;
  }


  public PagesDeploymentConfigsValues durableObjectNamespaces(PagesDeploymentConfigsValuesDurableObjectNamespaces durableObjectNamespaces) {
    this.durableObjectNamespaces = durableObjectNamespaces;
    return this;
  }

   /**
   * Get durableObjectNamespaces
   * @return durableObjectNamespaces
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesDurableObjectNamespaces getDurableObjectNamespaces() {
    return durableObjectNamespaces;
  }

  public void setDurableObjectNamespaces(PagesDeploymentConfigsValuesDurableObjectNamespaces durableObjectNamespaces) {
    this.durableObjectNamespaces = durableObjectNamespaces;
  }


  public PagesDeploymentConfigsValues envVars(PagesDeploymentConfigsValuesEnvVars envVars) {
    this.envVars = envVars;
    return this;
  }

   /**
   * Get envVars
   * @return envVars
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesEnvVars getEnvVars() {
    return envVars;
  }

  public void setEnvVars(PagesDeploymentConfigsValuesEnvVars envVars) {
    this.envVars = envVars;
  }


  public PagesDeploymentConfigsValues hyperdriveBindings(PagesDeploymentConfigsValuesHyperdriveBindings hyperdriveBindings) {
    this.hyperdriveBindings = hyperdriveBindings;
    return this;
  }

   /**
   * Get hyperdriveBindings
   * @return hyperdriveBindings
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesHyperdriveBindings getHyperdriveBindings() {
    return hyperdriveBindings;
  }

  public void setHyperdriveBindings(PagesDeploymentConfigsValuesHyperdriveBindings hyperdriveBindings) {
    this.hyperdriveBindings = hyperdriveBindings;
  }


  public PagesDeploymentConfigsValues kvNamespaces(PagesDeploymentConfigsValuesKvNamespaces kvNamespaces) {
    this.kvNamespaces = kvNamespaces;
    return this;
  }

   /**
   * Get kvNamespaces
   * @return kvNamespaces
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesKvNamespaces getKvNamespaces() {
    return kvNamespaces;
  }

  public void setKvNamespaces(PagesDeploymentConfigsValuesKvNamespaces kvNamespaces) {
    this.kvNamespaces = kvNamespaces;
  }


  public PagesDeploymentConfigsValues mtlsCertificates(PagesDeploymentConfigsValuesMtlsCertificates mtlsCertificates) {
    this.mtlsCertificates = mtlsCertificates;
    return this;
  }

   /**
   * Get mtlsCertificates
   * @return mtlsCertificates
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesMtlsCertificates getMtlsCertificates() {
    return mtlsCertificates;
  }

  public void setMtlsCertificates(PagesDeploymentConfigsValuesMtlsCertificates mtlsCertificates) {
    this.mtlsCertificates = mtlsCertificates;
  }


  public PagesDeploymentConfigsValues placement(PagesDeploymentConfigsValuesPlacement placement) {
    this.placement = placement;
    return this;
  }

   /**
   * Get placement
   * @return placement
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesPlacement getPlacement() {
    return placement;
  }

  public void setPlacement(PagesDeploymentConfigsValuesPlacement placement) {
    this.placement = placement;
  }


  public PagesDeploymentConfigsValues queueProducers(PagesDeploymentConfigsValuesQueueProducers queueProducers) {
    this.queueProducers = queueProducers;
    return this;
  }

   /**
   * Get queueProducers
   * @return queueProducers
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesQueueProducers getQueueProducers() {
    return queueProducers;
  }

  public void setQueueProducers(PagesDeploymentConfigsValuesQueueProducers queueProducers) {
    this.queueProducers = queueProducers;
  }


  public PagesDeploymentConfigsValues r2Buckets(PagesDeploymentConfigsValuesR2Buckets r2Buckets) {
    this.r2Buckets = r2Buckets;
    return this;
  }

   /**
   * Get r2Buckets
   * @return r2Buckets
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesR2Buckets getR2Buckets() {
    return r2Buckets;
  }

  public void setR2Buckets(PagesDeploymentConfigsValuesR2Buckets r2Buckets) {
    this.r2Buckets = r2Buckets;
  }


  public PagesDeploymentConfigsValues services(PagesDeploymentConfigsValuesServices services) {
    this.services = services;
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesServices getServices() {
    return services;
  }

  public void setServices(PagesDeploymentConfigsValuesServices services) {
    this.services = services;
  }


  public PagesDeploymentConfigsValues vectorizeBindings(PagesDeploymentConfigsValuesVectorizeBindings vectorizeBindings) {
    this.vectorizeBindings = vectorizeBindings;
    return this;
  }

   /**
   * Get vectorizeBindings
   * @return vectorizeBindings
  **/
  @javax.annotation.Nullable
  public PagesDeploymentConfigsValuesVectorizeBindings getVectorizeBindings() {
    return vectorizeBindings;
  }

  public void setVectorizeBindings(PagesDeploymentConfigsValuesVectorizeBindings vectorizeBindings) {
    this.vectorizeBindings = vectorizeBindings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PagesDeploymentConfigsValues pagesDeploymentConfigsValues = (PagesDeploymentConfigsValues) o;
    return Objects.equals(this.aiBindings, pagesDeploymentConfigsValues.aiBindings) &&
        Objects.equals(this.analyticsEngineDatasets, pagesDeploymentConfigsValues.analyticsEngineDatasets) &&
        Objects.equals(this.browsers, pagesDeploymentConfigsValues.browsers) &&
        Objects.equals(this.compatibilityDate, pagesDeploymentConfigsValues.compatibilityDate) &&
        Objects.equals(this.compatibilityFlags, pagesDeploymentConfigsValues.compatibilityFlags) &&
        Objects.equals(this.d1Databases, pagesDeploymentConfigsValues.d1Databases) &&
        Objects.equals(this.durableObjectNamespaces, pagesDeploymentConfigsValues.durableObjectNamespaces) &&
        Objects.equals(this.envVars, pagesDeploymentConfigsValues.envVars) &&
        Objects.equals(this.hyperdriveBindings, pagesDeploymentConfigsValues.hyperdriveBindings) &&
        Objects.equals(this.kvNamespaces, pagesDeploymentConfigsValues.kvNamespaces) &&
        Objects.equals(this.mtlsCertificates, pagesDeploymentConfigsValues.mtlsCertificates) &&
        Objects.equals(this.placement, pagesDeploymentConfigsValues.placement) &&
        Objects.equals(this.queueProducers, pagesDeploymentConfigsValues.queueProducers) &&
        Objects.equals(this.r2Buckets, pagesDeploymentConfigsValues.r2Buckets) &&
        Objects.equals(this.services, pagesDeploymentConfigsValues.services) &&
        Objects.equals(this.vectorizeBindings, pagesDeploymentConfigsValues.vectorizeBindings);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(aiBindings, analyticsEngineDatasets, browsers, compatibilityDate, compatibilityFlags, d1Databases, durableObjectNamespaces, envVars, hyperdriveBindings, kvNamespaces, mtlsCertificates, placement, queueProducers, r2Buckets, services, vectorizeBindings);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PagesDeploymentConfigsValues {\n");
    sb.append("    aiBindings: ").append(toIndentedString(aiBindings)).append("\n");
    sb.append("    analyticsEngineDatasets: ").append(toIndentedString(analyticsEngineDatasets)).append("\n");
    sb.append("    browsers: ").append(toIndentedString(browsers)).append("\n");
    sb.append("    compatibilityDate: ").append(toIndentedString(compatibilityDate)).append("\n");
    sb.append("    compatibilityFlags: ").append(toIndentedString(compatibilityFlags)).append("\n");
    sb.append("    d1Databases: ").append(toIndentedString(d1Databases)).append("\n");
    sb.append("    durableObjectNamespaces: ").append(toIndentedString(durableObjectNamespaces)).append("\n");
    sb.append("    envVars: ").append(toIndentedString(envVars)).append("\n");
    sb.append("    hyperdriveBindings: ").append(toIndentedString(hyperdriveBindings)).append("\n");
    sb.append("    kvNamespaces: ").append(toIndentedString(kvNamespaces)).append("\n");
    sb.append("    mtlsCertificates: ").append(toIndentedString(mtlsCertificates)).append("\n");
    sb.append("    placement: ").append(toIndentedString(placement)).append("\n");
    sb.append("    queueProducers: ").append(toIndentedString(queueProducers)).append("\n");
    sb.append("    r2Buckets: ").append(toIndentedString(r2Buckets)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    vectorizeBindings: ").append(toIndentedString(vectorizeBindings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ai_bindings");
    openapiFields.add("analytics_engine_datasets");
    openapiFields.add("browsers");
    openapiFields.add("compatibility_date");
    openapiFields.add("compatibility_flags");
    openapiFields.add("d1_databases");
    openapiFields.add("durable_object_namespaces");
    openapiFields.add("env_vars");
    openapiFields.add("hyperdrive_bindings");
    openapiFields.add("kv_namespaces");
    openapiFields.add("mtls_certificates");
    openapiFields.add("placement");
    openapiFields.add("queue_producers");
    openapiFields.add("r2_buckets");
    openapiFields.add("services");
    openapiFields.add("vectorize_bindings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PagesDeploymentConfigsValues
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PagesDeploymentConfigsValues.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PagesDeploymentConfigsValues is not found in the empty JSON string", PagesDeploymentConfigsValues.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PagesDeploymentConfigsValues.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PagesDeploymentConfigsValues` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ai_bindings`
      if (jsonObj.get("ai_bindings") != null && !jsonObj.get("ai_bindings").isJsonNull()) {
        PagesDeploymentConfigsValuesAiBindings.validateJsonElement(jsonObj.get("ai_bindings"));
      }
      // validate the optional field `analytics_engine_datasets`
      if (jsonObj.get("analytics_engine_datasets") != null && !jsonObj.get("analytics_engine_datasets").isJsonNull()) {
        PagesDeploymentConfigsValuesAnalyticsEngineDatasets.validateJsonElement(jsonObj.get("analytics_engine_datasets"));
      }
      // validate the optional field `browsers`
      if (jsonObj.get("browsers") != null && !jsonObj.get("browsers").isJsonNull()) {
        PagesDeploymentConfigsValuesBrowsers.validateJsonElement(jsonObj.get("browsers"));
      }
      if ((jsonObj.get("compatibility_date") != null && !jsonObj.get("compatibility_date").isJsonNull()) && !jsonObj.get("compatibility_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compatibility_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compatibility_date").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("compatibility_flags") != null && !jsonObj.get("compatibility_flags").isJsonNull() && !jsonObj.get("compatibility_flags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `compatibility_flags` to be an array in the JSON string but got `%s`", jsonObj.get("compatibility_flags").toString()));
      }
      // validate the optional field `d1_databases`
      if (jsonObj.get("d1_databases") != null && !jsonObj.get("d1_databases").isJsonNull()) {
        PagesDeploymentConfigsValuesD1Databases.validateJsonElement(jsonObj.get("d1_databases"));
      }
      // validate the optional field `durable_object_namespaces`
      if (jsonObj.get("durable_object_namespaces") != null && !jsonObj.get("durable_object_namespaces").isJsonNull()) {
        PagesDeploymentConfigsValuesDurableObjectNamespaces.validateJsonElement(jsonObj.get("durable_object_namespaces"));
      }
      // validate the optional field `env_vars`
      if (jsonObj.get("env_vars") != null && !jsonObj.get("env_vars").isJsonNull()) {
        PagesDeploymentConfigsValuesEnvVars.validateJsonElement(jsonObj.get("env_vars"));
      }
      // validate the optional field `hyperdrive_bindings`
      if (jsonObj.get("hyperdrive_bindings") != null && !jsonObj.get("hyperdrive_bindings").isJsonNull()) {
        PagesDeploymentConfigsValuesHyperdriveBindings.validateJsonElement(jsonObj.get("hyperdrive_bindings"));
      }
      // validate the optional field `kv_namespaces`
      if (jsonObj.get("kv_namespaces") != null && !jsonObj.get("kv_namespaces").isJsonNull()) {
        PagesDeploymentConfigsValuesKvNamespaces.validateJsonElement(jsonObj.get("kv_namespaces"));
      }
      // validate the optional field `mtls_certificates`
      if (jsonObj.get("mtls_certificates") != null && !jsonObj.get("mtls_certificates").isJsonNull()) {
        PagesDeploymentConfigsValuesMtlsCertificates.validateJsonElement(jsonObj.get("mtls_certificates"));
      }
      // validate the optional field `placement`
      if (jsonObj.get("placement") != null && !jsonObj.get("placement").isJsonNull()) {
        PagesDeploymentConfigsValuesPlacement.validateJsonElement(jsonObj.get("placement"));
      }
      // validate the optional field `queue_producers`
      if (jsonObj.get("queue_producers") != null && !jsonObj.get("queue_producers").isJsonNull()) {
        PagesDeploymentConfigsValuesQueueProducers.validateJsonElement(jsonObj.get("queue_producers"));
      }
      // validate the optional field `r2_buckets`
      if (jsonObj.get("r2_buckets") != null && !jsonObj.get("r2_buckets").isJsonNull()) {
        PagesDeploymentConfigsValuesR2Buckets.validateJsonElement(jsonObj.get("r2_buckets"));
      }
      // validate the optional field `services`
      if (jsonObj.get("services") != null && !jsonObj.get("services").isJsonNull()) {
        PagesDeploymentConfigsValuesServices.validateJsonElement(jsonObj.get("services"));
      }
      // validate the optional field `vectorize_bindings`
      if (jsonObj.get("vectorize_bindings") != null && !jsonObj.get("vectorize_bindings").isJsonNull()) {
        PagesDeploymentConfigsValuesVectorizeBindings.validateJsonElement(jsonObj.get("vectorize_bindings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PagesDeploymentConfigsValues.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PagesDeploymentConfigsValues' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PagesDeploymentConfigsValues> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PagesDeploymentConfigsValues.class));

       return (TypeAdapter<T>) new TypeAdapter<PagesDeploymentConfigsValues>() {
           @Override
           public void write(JsonWriter out, PagesDeploymentConfigsValues value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PagesDeploymentConfigsValues read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PagesDeploymentConfigsValues given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PagesDeploymentConfigsValues
  * @throws IOException if the JSON string is invalid with respect to PagesDeploymentConfigsValues
  */
  public static PagesDeploymentConfigsValues fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PagesDeploymentConfigsValues.class);
  }

 /**
  * Convert an instance of PagesDeploymentConfigsValues to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

