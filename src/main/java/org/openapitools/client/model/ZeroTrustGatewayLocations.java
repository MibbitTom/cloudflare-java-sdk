/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ZeroTrustGatewayNetwork;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ZeroTrustGatewayLocations
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class ZeroTrustGatewayLocations {
  public static final String SERIALIZED_NAME_CLIENT_DEFAULT = "client_default";
  @SerializedName(SERIALIZED_NAME_CLIENT_DEFAULT)
  private Boolean clientDefault;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DOH_SUBDOMAIN = "doh_subdomain";
  @SerializedName(SERIALIZED_NAME_DOH_SUBDOMAIN)
  private String dohSubdomain;

  public static final String SERIALIZED_NAME_ECS_SUPPORT = "ecs_support";
  @SerializedName(SERIALIZED_NAME_ECS_SUPPORT)
  private Boolean ecsSupport;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Object id = null;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  private String ip;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORKS = "networks";
  @SerializedName(SERIALIZED_NAME_NETWORKS)
  private List<ZeroTrustGatewayNetwork> networks = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public ZeroTrustGatewayLocations() {
  }

  public ZeroTrustGatewayLocations(
     OffsetDateTime createdAt, 
     OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public ZeroTrustGatewayLocations clientDefault(Boolean clientDefault) {
    this.clientDefault = clientDefault;
    return this;
  }

   /**
   * True if the location is the default location.
   * @return clientDefault
  **/
  @javax.annotation.Nullable
  public Boolean getClientDefault() {
    return clientDefault;
  }

  public void setClientDefault(Boolean clientDefault) {
    this.clientDefault = clientDefault;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }



  public ZeroTrustGatewayLocations dohSubdomain(String dohSubdomain) {
    this.dohSubdomain = dohSubdomain;
    return this;
  }

   /**
   * The DNS over HTTPS domain to send DNS requests to. This field is auto-generated by Gateway.
   * @return dohSubdomain
  **/
  @javax.annotation.Nullable
  public String getDohSubdomain() {
    return dohSubdomain;
  }

  public void setDohSubdomain(String dohSubdomain) {
    this.dohSubdomain = dohSubdomain;
  }


  public ZeroTrustGatewayLocations ecsSupport(Boolean ecsSupport) {
    this.ecsSupport = ecsSupport;
    return this;
  }

   /**
   * True if the location needs to resolve EDNS queries.
   * @return ecsSupport
  **/
  @javax.annotation.Nullable
  public Boolean getEcsSupport() {
    return ecsSupport;
  }

  public void setEcsSupport(Boolean ecsSupport) {
    this.ecsSupport = ecsSupport;
  }


  public ZeroTrustGatewayLocations id(Object id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public Object getId() {
    return id;
  }

  public void setId(Object id) {
    this.id = id;
  }


  public ZeroTrustGatewayLocations ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. This field is auto-generated by Gateway.
   * @return ip
  **/
  @javax.annotation.Nullable
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }


  public ZeroTrustGatewayLocations name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the location.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ZeroTrustGatewayLocations networks(List<ZeroTrustGatewayNetwork> networks) {
    this.networks = networks;
    return this;
  }

  public ZeroTrustGatewayLocations addNetworksItem(ZeroTrustGatewayNetwork networksItem) {
    if (this.networks == null) {
      this.networks = new ArrayList<>();
    }
    this.networks.add(networksItem);
    return this;
  }

   /**
   * A list of network ranges that requests from this location would originate from.
   * @return networks
  **/
  @javax.annotation.Nullable
  public List<ZeroTrustGatewayNetwork> getNetworks() {
    return networks;
  }

  public void setNetworks(List<ZeroTrustGatewayNetwork> networks) {
    this.networks = networks;
  }


   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZeroTrustGatewayLocations zeroTrustGatewayLocations = (ZeroTrustGatewayLocations) o;
    return Objects.equals(this.clientDefault, zeroTrustGatewayLocations.clientDefault) &&
        Objects.equals(this.createdAt, zeroTrustGatewayLocations.createdAt) &&
        Objects.equals(this.dohSubdomain, zeroTrustGatewayLocations.dohSubdomain) &&
        Objects.equals(this.ecsSupport, zeroTrustGatewayLocations.ecsSupport) &&
        Objects.equals(this.id, zeroTrustGatewayLocations.id) &&
        Objects.equals(this.ip, zeroTrustGatewayLocations.ip) &&
        Objects.equals(this.name, zeroTrustGatewayLocations.name) &&
        Objects.equals(this.networks, zeroTrustGatewayLocations.networks) &&
        Objects.equals(this.updatedAt, zeroTrustGatewayLocations.updatedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientDefault, createdAt, dohSubdomain, ecsSupport, id, ip, name, networks, updatedAt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZeroTrustGatewayLocations {\n");
    sb.append("    clientDefault: ").append(toIndentedString(clientDefault)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    dohSubdomain: ").append(toIndentedString(dohSubdomain)).append("\n");
    sb.append("    ecsSupport: ").append(toIndentedString(ecsSupport)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("client_default");
    openapiFields.add("created_at");
    openapiFields.add("doh_subdomain");
    openapiFields.add("ecs_support");
    openapiFields.add("id");
    openapiFields.add("ip");
    openapiFields.add("name");
    openapiFields.add("networks");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ZeroTrustGatewayLocations
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ZeroTrustGatewayLocations.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ZeroTrustGatewayLocations is not found in the empty JSON string", ZeroTrustGatewayLocations.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ZeroTrustGatewayLocations.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ZeroTrustGatewayLocations` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("doh_subdomain") != null && !jsonObj.get("doh_subdomain").isJsonNull()) && !jsonObj.get("doh_subdomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `doh_subdomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("doh_subdomain").toString()));
      }
      if ((jsonObj.get("ip") != null && !jsonObj.get("ip").isJsonNull()) && !jsonObj.get("ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("networks") != null && !jsonObj.get("networks").isJsonNull()) {
        JsonArray jsonArraynetworks = jsonObj.getAsJsonArray("networks");
        if (jsonArraynetworks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("networks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `networks` to be an array in the JSON string but got `%s`", jsonObj.get("networks").toString()));
          }

          // validate the optional field `networks` (array)
          for (int i = 0; i < jsonArraynetworks.size(); i++) {
            ZeroTrustGatewayNetwork.validateJsonElement(jsonArraynetworks.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ZeroTrustGatewayLocations.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ZeroTrustGatewayLocations' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ZeroTrustGatewayLocations> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ZeroTrustGatewayLocations.class));

       return (TypeAdapter<T>) new TypeAdapter<ZeroTrustGatewayLocations>() {
           @Override
           public void write(JsonWriter out, ZeroTrustGatewayLocations value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ZeroTrustGatewayLocations read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ZeroTrustGatewayLocations given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ZeroTrustGatewayLocations
  * @throws IOException if the JSON string is invalid with respect to ZeroTrustGatewayLocations
  */
  public static ZeroTrustGatewayLocations fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ZeroTrustGatewayLocations.class);
  }

 /**
  * Convert an instance of ZeroTrustGatewayLocations to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

