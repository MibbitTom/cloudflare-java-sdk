/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.TeamsDevicesServiceModeV2;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DevicesUpdateDefaultDeviceSettingsPolicyRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class DevicesUpdateDefaultDeviceSettingsPolicyRequest {
  public static final String SERIALIZED_NAME_ALLOW_MODE_SWITCH = "allow_mode_switch";
  @SerializedName(SERIALIZED_NAME_ALLOW_MODE_SWITCH)
  private Boolean allowModeSwitch;

  public static final String SERIALIZED_NAME_ALLOW_UPDATES = "allow_updates";
  @SerializedName(SERIALIZED_NAME_ALLOW_UPDATES)
  private Boolean allowUpdates;

  public static final String SERIALIZED_NAME_ALLOWED_TO_LEAVE = "allowed_to_leave";
  @SerializedName(SERIALIZED_NAME_ALLOWED_TO_LEAVE)
  private Boolean allowedToLeave;

  public static final String SERIALIZED_NAME_AUTO_CONNECT = "auto_connect";
  @SerializedName(SERIALIZED_NAME_AUTO_CONNECT)
  private BigDecimal autoConnect;

  public static final String SERIALIZED_NAME_CAPTIVE_PORTAL = "captive_portal";
  @SerializedName(SERIALIZED_NAME_CAPTIVE_PORTAL)
  private BigDecimal captivePortal;

  public static final String SERIALIZED_NAME_DISABLE_AUTO_FALLBACK = "disable_auto_fallback";
  @SerializedName(SERIALIZED_NAME_DISABLE_AUTO_FALLBACK)
  private Boolean disableAutoFallback;

  public static final String SERIALIZED_NAME_EXCLUDE_OFFICE_IPS = "exclude_office_ips";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_OFFICE_IPS)
  private Boolean excludeOfficeIps;

  public static final String SERIALIZED_NAME_SERVICE_MODE_V2 = "service_mode_v2";
  @SerializedName(SERIALIZED_NAME_SERVICE_MODE_V2)
  private TeamsDevicesServiceModeV2 serviceModeV2;

  public static final String SERIALIZED_NAME_SUPPORT_URL = "support_url";
  @SerializedName(SERIALIZED_NAME_SUPPORT_URL)
  private String supportUrl;

  public static final String SERIALIZED_NAME_SWITCH_LOCKED = "switch_locked";
  @SerializedName(SERIALIZED_NAME_SWITCH_LOCKED)
  private Boolean switchLocked;

  public DevicesUpdateDefaultDeviceSettingsPolicyRequest() {
  }

  public DevicesUpdateDefaultDeviceSettingsPolicyRequest allowModeSwitch(Boolean allowModeSwitch) {
    this.allowModeSwitch = allowModeSwitch;
    return this;
  }

   /**
   * Whether to allow the user to switch WARP between modes.
   * @return allowModeSwitch
  **/
  @javax.annotation.Nullable
  public Boolean getAllowModeSwitch() {
    return allowModeSwitch;
  }

  public void setAllowModeSwitch(Boolean allowModeSwitch) {
    this.allowModeSwitch = allowModeSwitch;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest allowUpdates(Boolean allowUpdates) {
    this.allowUpdates = allowUpdates;
    return this;
  }

   /**
   * Whether to receive update notifications when a new version of the client is available.
   * @return allowUpdates
  **/
  @javax.annotation.Nullable
  public Boolean getAllowUpdates() {
    return allowUpdates;
  }

  public void setAllowUpdates(Boolean allowUpdates) {
    this.allowUpdates = allowUpdates;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest allowedToLeave(Boolean allowedToLeave) {
    this.allowedToLeave = allowedToLeave;
    return this;
  }

   /**
   * Whether to allow devices to leave the organization.
   * @return allowedToLeave
  **/
  @javax.annotation.Nullable
  public Boolean getAllowedToLeave() {
    return allowedToLeave;
  }

  public void setAllowedToLeave(Boolean allowedToLeave) {
    this.allowedToLeave = allowedToLeave;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest autoConnect(BigDecimal autoConnect) {
    this.autoConnect = autoConnect;
    return this;
  }

   /**
   * The amount of time in minutes to reconnect after having been disabled.
   * @return autoConnect
  **/
  @javax.annotation.Nullable
  public BigDecimal getAutoConnect() {
    return autoConnect;
  }

  public void setAutoConnect(BigDecimal autoConnect) {
    this.autoConnect = autoConnect;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest captivePortal(BigDecimal captivePortal) {
    this.captivePortal = captivePortal;
    return this;
  }

   /**
   * Turn on the captive portal after the specified amount of time.
   * @return captivePortal
  **/
  @javax.annotation.Nullable
  public BigDecimal getCaptivePortal() {
    return captivePortal;
  }

  public void setCaptivePortal(BigDecimal captivePortal) {
    this.captivePortal = captivePortal;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest disableAutoFallback(Boolean disableAutoFallback) {
    this.disableAutoFallback = disableAutoFallback;
    return this;
  }

   /**
   * If the &#x60;dns_server&#x60; field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to &#x60;true&#x60;.
   * @return disableAutoFallback
  **/
  @javax.annotation.Nullable
  public Boolean getDisableAutoFallback() {
    return disableAutoFallback;
  }

  public void setDisableAutoFallback(Boolean disableAutoFallback) {
    this.disableAutoFallback = disableAutoFallback;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest excludeOfficeIps(Boolean excludeOfficeIps) {
    this.excludeOfficeIps = excludeOfficeIps;
    return this;
  }

   /**
   * Whether to add Microsoft IPs to Split Tunnel exclusions.
   * @return excludeOfficeIps
  **/
  @javax.annotation.Nullable
  public Boolean getExcludeOfficeIps() {
    return excludeOfficeIps;
  }

  public void setExcludeOfficeIps(Boolean excludeOfficeIps) {
    this.excludeOfficeIps = excludeOfficeIps;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest serviceModeV2(TeamsDevicesServiceModeV2 serviceModeV2) {
    this.serviceModeV2 = serviceModeV2;
    return this;
  }

   /**
   * Get serviceModeV2
   * @return serviceModeV2
  **/
  @javax.annotation.Nullable
  public TeamsDevicesServiceModeV2 getServiceModeV2() {
    return serviceModeV2;
  }

  public void setServiceModeV2(TeamsDevicesServiceModeV2 serviceModeV2) {
    this.serviceModeV2 = serviceModeV2;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest supportUrl(String supportUrl) {
    this.supportUrl = supportUrl;
    return this;
  }

   /**
   * The URL to launch when the Send Feedback button is clicked.
   * @return supportUrl
  **/
  @javax.annotation.Nullable
  public String getSupportUrl() {
    return supportUrl;
  }

  public void setSupportUrl(String supportUrl) {
    this.supportUrl = supportUrl;
  }


  public DevicesUpdateDefaultDeviceSettingsPolicyRequest switchLocked(Boolean switchLocked) {
    this.switchLocked = switchLocked;
    return this;
  }

   /**
   * Whether to allow the user to turn off the WARP switch and disconnect the client.
   * @return switchLocked
  **/
  @javax.annotation.Nullable
  public Boolean getSwitchLocked() {
    return switchLocked;
  }

  public void setSwitchLocked(Boolean switchLocked) {
    this.switchLocked = switchLocked;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DevicesUpdateDefaultDeviceSettingsPolicyRequest devicesUpdateDefaultDeviceSettingsPolicyRequest = (DevicesUpdateDefaultDeviceSettingsPolicyRequest) o;
    return Objects.equals(this.allowModeSwitch, devicesUpdateDefaultDeviceSettingsPolicyRequest.allowModeSwitch) &&
        Objects.equals(this.allowUpdates, devicesUpdateDefaultDeviceSettingsPolicyRequest.allowUpdates) &&
        Objects.equals(this.allowedToLeave, devicesUpdateDefaultDeviceSettingsPolicyRequest.allowedToLeave) &&
        Objects.equals(this.autoConnect, devicesUpdateDefaultDeviceSettingsPolicyRequest.autoConnect) &&
        Objects.equals(this.captivePortal, devicesUpdateDefaultDeviceSettingsPolicyRequest.captivePortal) &&
        Objects.equals(this.disableAutoFallback, devicesUpdateDefaultDeviceSettingsPolicyRequest.disableAutoFallback) &&
        Objects.equals(this.excludeOfficeIps, devicesUpdateDefaultDeviceSettingsPolicyRequest.excludeOfficeIps) &&
        Objects.equals(this.serviceModeV2, devicesUpdateDefaultDeviceSettingsPolicyRequest.serviceModeV2) &&
        Objects.equals(this.supportUrl, devicesUpdateDefaultDeviceSettingsPolicyRequest.supportUrl) &&
        Objects.equals(this.switchLocked, devicesUpdateDefaultDeviceSettingsPolicyRequest.switchLocked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowModeSwitch, allowUpdates, allowedToLeave, autoConnect, captivePortal, disableAutoFallback, excludeOfficeIps, serviceModeV2, supportUrl, switchLocked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DevicesUpdateDefaultDeviceSettingsPolicyRequest {\n");
    sb.append("    allowModeSwitch: ").append(toIndentedString(allowModeSwitch)).append("\n");
    sb.append("    allowUpdates: ").append(toIndentedString(allowUpdates)).append("\n");
    sb.append("    allowedToLeave: ").append(toIndentedString(allowedToLeave)).append("\n");
    sb.append("    autoConnect: ").append(toIndentedString(autoConnect)).append("\n");
    sb.append("    captivePortal: ").append(toIndentedString(captivePortal)).append("\n");
    sb.append("    disableAutoFallback: ").append(toIndentedString(disableAutoFallback)).append("\n");
    sb.append("    excludeOfficeIps: ").append(toIndentedString(excludeOfficeIps)).append("\n");
    sb.append("    serviceModeV2: ").append(toIndentedString(serviceModeV2)).append("\n");
    sb.append("    supportUrl: ").append(toIndentedString(supportUrl)).append("\n");
    sb.append("    switchLocked: ").append(toIndentedString(switchLocked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_mode_switch");
    openapiFields.add("allow_updates");
    openapiFields.add("allowed_to_leave");
    openapiFields.add("auto_connect");
    openapiFields.add("captive_portal");
    openapiFields.add("disable_auto_fallback");
    openapiFields.add("exclude_office_ips");
    openapiFields.add("service_mode_v2");
    openapiFields.add("support_url");
    openapiFields.add("switch_locked");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to DevicesUpdateDefaultDeviceSettingsPolicyRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DevicesUpdateDefaultDeviceSettingsPolicyRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DevicesUpdateDefaultDeviceSettingsPolicyRequest is not found in the empty JSON string", DevicesUpdateDefaultDeviceSettingsPolicyRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DevicesUpdateDefaultDeviceSettingsPolicyRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DevicesUpdateDefaultDeviceSettingsPolicyRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `service_mode_v2`
      if (jsonObj.get("service_mode_v2") != null && !jsonObj.get("service_mode_v2").isJsonNull()) {
        TeamsDevicesServiceModeV2.validateJsonElement(jsonObj.get("service_mode_v2"));
      }
      if ((jsonObj.get("support_url") != null && !jsonObj.get("support_url").isJsonNull()) && !jsonObj.get("support_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `support_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("support_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DevicesUpdateDefaultDeviceSettingsPolicyRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DevicesUpdateDefaultDeviceSettingsPolicyRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DevicesUpdateDefaultDeviceSettingsPolicyRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DevicesUpdateDefaultDeviceSettingsPolicyRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<DevicesUpdateDefaultDeviceSettingsPolicyRequest>() {
           @Override
           public void write(JsonWriter out, DevicesUpdateDefaultDeviceSettingsPolicyRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DevicesUpdateDefaultDeviceSettingsPolicyRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DevicesUpdateDefaultDeviceSettingsPolicyRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DevicesUpdateDefaultDeviceSettingsPolicyRequest
  * @throws IOException if the JSON string is invalid with respect to DevicesUpdateDefaultDeviceSettingsPolicyRequest
  */
  public static DevicesUpdateDefaultDeviceSettingsPolicyRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DevicesUpdateDefaultDeviceSettingsPolicyRequest.class);
  }

 /**
  * Convert an instance of DevicesUpdateDefaultDeviceSettingsPolicyRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

