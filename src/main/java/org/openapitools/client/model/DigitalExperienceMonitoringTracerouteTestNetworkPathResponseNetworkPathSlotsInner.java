/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner {
  public static final String SERIALIZED_NAME_CLIENT_TO_APP_RTT_MS = "clientToAppRttMs";
  @SerializedName(SERIALIZED_NAME_CLIENT_TO_APP_RTT_MS)
  private Integer clientToAppRttMs;

  public static final String SERIALIZED_NAME_CLIENT_TO_CF_EGRESS_RTT_MS = "clientToCfEgressRttMs";
  @SerializedName(SERIALIZED_NAME_CLIENT_TO_CF_EGRESS_RTT_MS)
  private Integer clientToCfEgressRttMs;

  public static final String SERIALIZED_NAME_CLIENT_TO_CF_INGRESS_RTT_MS = "clientToCfIngressRttMs";
  @SerializedName(SERIALIZED_NAME_CLIENT_TO_CF_INGRESS_RTT_MS)
  private Integer clientToCfIngressRttMs;

  public static final String SERIALIZED_NAME_CLIENT_TO_ISP_RTT_MS = "clientToIspRttMs";
  @SerializedName(SERIALIZED_NAME_CLIENT_TO_ISP_RTT_MS)
  private Integer clientToIspRttMs;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner() {
  }

  public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner clientToAppRttMs(Integer clientToAppRttMs) {
    this.clientToAppRttMs = clientToAppRttMs;
    return this;
  }

   /**
   * Round trip time in ms of the client to app mile
   * @return clientToAppRttMs
  **/
  @javax.annotation.Nullable
  public Integer getClientToAppRttMs() {
    return clientToAppRttMs;
  }

  public void setClientToAppRttMs(Integer clientToAppRttMs) {
    this.clientToAppRttMs = clientToAppRttMs;
  }


  public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner clientToCfEgressRttMs(Integer clientToCfEgressRttMs) {
    this.clientToCfEgressRttMs = clientToCfEgressRttMs;
    return this;
  }

   /**
   * Round trip time in ms of the client to Cloudflare egress mile
   * @return clientToCfEgressRttMs
  **/
  @javax.annotation.Nullable
  public Integer getClientToCfEgressRttMs() {
    return clientToCfEgressRttMs;
  }

  public void setClientToCfEgressRttMs(Integer clientToCfEgressRttMs) {
    this.clientToCfEgressRttMs = clientToCfEgressRttMs;
  }


  public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner clientToCfIngressRttMs(Integer clientToCfIngressRttMs) {
    this.clientToCfIngressRttMs = clientToCfIngressRttMs;
    return this;
  }

   /**
   * Round trip time in ms of the client to Cloudflare ingress mile
   * @return clientToCfIngressRttMs
  **/
  @javax.annotation.Nullable
  public Integer getClientToCfIngressRttMs() {
    return clientToCfIngressRttMs;
  }

  public void setClientToCfIngressRttMs(Integer clientToCfIngressRttMs) {
    this.clientToCfIngressRttMs = clientToCfIngressRttMs;
  }


  public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner clientToIspRttMs(Integer clientToIspRttMs) {
    this.clientToIspRttMs = clientToIspRttMs;
    return this;
  }

   /**
   * Round trip time in ms of the client to ISP mile
   * @return clientToIspRttMs
  **/
  @javax.annotation.Nullable
  public Integer getClientToIspRttMs() {
    return clientToIspRttMs;
  }

  public void setClientToIspRttMs(Integer clientToIspRttMs) {
    this.clientToIspRttMs = clientToIspRttMs;
  }


  public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner id(String id) {
    this.id = id;
    return this;
  }

   /**
   * API Resource UUID tag.
   * @return id
  **/
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nonnull
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner digitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner = (DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner) o;
    return Objects.equals(this.clientToAppRttMs, digitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.clientToAppRttMs) &&
        Objects.equals(this.clientToCfEgressRttMs, digitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.clientToCfEgressRttMs) &&
        Objects.equals(this.clientToCfIngressRttMs, digitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.clientToCfIngressRttMs) &&
        Objects.equals(this.clientToIspRttMs, digitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.clientToIspRttMs) &&
        Objects.equals(this.id, digitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.id) &&
        Objects.equals(this.timestamp, digitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.timestamp);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientToAppRttMs, clientToCfEgressRttMs, clientToCfIngressRttMs, clientToIspRttMs, id, timestamp);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner {\n");
    sb.append("    clientToAppRttMs: ").append(toIndentedString(clientToAppRttMs)).append("\n");
    sb.append("    clientToCfEgressRttMs: ").append(toIndentedString(clientToCfEgressRttMs)).append("\n");
    sb.append("    clientToCfIngressRttMs: ").append(toIndentedString(clientToCfIngressRttMs)).append("\n");
    sb.append("    clientToIspRttMs: ").append(toIndentedString(clientToIspRttMs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clientToAppRttMs");
    openapiFields.add("clientToCfEgressRttMs");
    openapiFields.add("clientToCfIngressRttMs");
    openapiFields.add("clientToIspRttMs");
    openapiFields.add("id");
    openapiFields.add("timestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("clientToAppRttMs");
    openapiRequiredFields.add("clientToCfEgressRttMs");
    openapiRequiredFields.add("clientToCfIngressRttMs");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("timestamp");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner is not found in the empty JSON string", DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timestamp").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner>() {
           @Override
           public void write(JsonWriter out, DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner
  * @throws IOException if the JSON string is invalid with respect to DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner
  */
  public static DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner.class);
  }

 /**
  * Convert an instance of DigitalExperienceMonitoringTracerouteTestNetworkPathResponseNetworkPathSlotsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

