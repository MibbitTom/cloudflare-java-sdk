/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ZonesAutomaticPlatformOptimization
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class ZonesAutomaticPlatformOptimization {
  public static final String SERIALIZED_NAME_CACHE_BY_DEVICE_TYPE = "cache_by_device_type";
  @SerializedName(SERIALIZED_NAME_CACHE_BY_DEVICE_TYPE)
  private Boolean cacheByDeviceType;

  public static final String SERIALIZED_NAME_CF = "cf";
  @SerializedName(SERIALIZED_NAME_CF)
  private Boolean cf = false;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled = false;

  public static final String SERIALIZED_NAME_HOSTNAMES = "hostnames";
  @SerializedName(SERIALIZED_NAME_HOSTNAMES)
  private List<String> hostnames = new ArrayList<>();

  public static final String SERIALIZED_NAME_WORDPRESS = "wordpress";
  @SerializedName(SERIALIZED_NAME_WORDPRESS)
  private Boolean wordpress = false;

  public static final String SERIALIZED_NAME_WP_PLUGIN = "wp_plugin";
  @SerializedName(SERIALIZED_NAME_WP_PLUGIN)
  private Boolean wpPlugin = false;

  public ZonesAutomaticPlatformOptimization() {
  }

  public ZonesAutomaticPlatformOptimization cacheByDeviceType(Boolean cacheByDeviceType) {
    this.cacheByDeviceType = cacheByDeviceType;
    return this;
  }

   /**
   * Indicates whether or not [cache by device type](https://developers.cloudflare.com/automatic-platform-optimization/reference/cache-device-type/) is enabled.
   * @return cacheByDeviceType
  **/
  @javax.annotation.Nonnull
  public Boolean getCacheByDeviceType() {
    return cacheByDeviceType;
  }

  public void setCacheByDeviceType(Boolean cacheByDeviceType) {
    this.cacheByDeviceType = cacheByDeviceType;
  }


  public ZonesAutomaticPlatformOptimization cf(Boolean cf) {
    this.cf = cf;
    return this;
  }

   /**
   * Indicates whether or not Cloudflare proxy is enabled.
   * @return cf
  **/
  @javax.annotation.Nonnull
  public Boolean getCf() {
    return cf;
  }

  public void setCf(Boolean cf) {
    this.cf = cf;
  }


  public ZonesAutomaticPlatformOptimization enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether or not Automatic Platform Optimization is enabled.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ZonesAutomaticPlatformOptimization hostnames(List<String> hostnames) {
    this.hostnames = hostnames;
    return this;
  }

  public ZonesAutomaticPlatformOptimization addHostnamesItem(String hostnamesItem) {
    if (this.hostnames == null) {
      this.hostnames = new ArrayList<>();
    }
    this.hostnames.add(hostnamesItem);
    return this;
  }

   /**
   * An array of hostnames where Automatic Platform Optimization for WordPress is activated.
   * @return hostnames
  **/
  @javax.annotation.Nonnull
  public List<String> getHostnames() {
    return hostnames;
  }

  public void setHostnames(List<String> hostnames) {
    this.hostnames = hostnames;
  }


  public ZonesAutomaticPlatformOptimization wordpress(Boolean wordpress) {
    this.wordpress = wordpress;
    return this;
  }

   /**
   * Indicates whether or not site is powered by WordPress.
   * @return wordpress
  **/
  @javax.annotation.Nonnull
  public Boolean getWordpress() {
    return wordpress;
  }

  public void setWordpress(Boolean wordpress) {
    this.wordpress = wordpress;
  }


  public ZonesAutomaticPlatformOptimization wpPlugin(Boolean wpPlugin) {
    this.wpPlugin = wpPlugin;
    return this;
  }

   /**
   * Indicates whether or not [Cloudflare for WordPress plugin](https://wordpress.org/plugins/cloudflare/) is installed.
   * @return wpPlugin
  **/
  @javax.annotation.Nonnull
  public Boolean getWpPlugin() {
    return wpPlugin;
  }

  public void setWpPlugin(Boolean wpPlugin) {
    this.wpPlugin = wpPlugin;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZonesAutomaticPlatformOptimization zonesAutomaticPlatformOptimization = (ZonesAutomaticPlatformOptimization) o;
    return Objects.equals(this.cacheByDeviceType, zonesAutomaticPlatformOptimization.cacheByDeviceType) &&
        Objects.equals(this.cf, zonesAutomaticPlatformOptimization.cf) &&
        Objects.equals(this.enabled, zonesAutomaticPlatformOptimization.enabled) &&
        Objects.equals(this.hostnames, zonesAutomaticPlatformOptimization.hostnames) &&
        Objects.equals(this.wordpress, zonesAutomaticPlatformOptimization.wordpress) &&
        Objects.equals(this.wpPlugin, zonesAutomaticPlatformOptimization.wpPlugin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheByDeviceType, cf, enabled, hostnames, wordpress, wpPlugin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZonesAutomaticPlatformOptimization {\n");
    sb.append("    cacheByDeviceType: ").append(toIndentedString(cacheByDeviceType)).append("\n");
    sb.append("    cf: ").append(toIndentedString(cf)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hostnames: ").append(toIndentedString(hostnames)).append("\n");
    sb.append("    wordpress: ").append(toIndentedString(wordpress)).append("\n");
    sb.append("    wpPlugin: ").append(toIndentedString(wpPlugin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cache_by_device_type");
    openapiFields.add("cf");
    openapiFields.add("enabled");
    openapiFields.add("hostnames");
    openapiFields.add("wordpress");
    openapiFields.add("wp_plugin");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cache_by_device_type");
    openapiRequiredFields.add("cf");
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("hostnames");
    openapiRequiredFields.add("wordpress");
    openapiRequiredFields.add("wp_plugin");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ZonesAutomaticPlatformOptimization
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ZonesAutomaticPlatformOptimization.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ZonesAutomaticPlatformOptimization is not found in the empty JSON string", ZonesAutomaticPlatformOptimization.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ZonesAutomaticPlatformOptimization.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ZonesAutomaticPlatformOptimization` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ZonesAutomaticPlatformOptimization.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("hostnames") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("hostnames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostnames` to be an array in the JSON string but got `%s`", jsonObj.get("hostnames").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ZonesAutomaticPlatformOptimization.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ZonesAutomaticPlatformOptimization' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ZonesAutomaticPlatformOptimization> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ZonesAutomaticPlatformOptimization.class));

       return (TypeAdapter<T>) new TypeAdapter<ZonesAutomaticPlatformOptimization>() {
           @Override
           public void write(JsonWriter out, ZonesAutomaticPlatformOptimization value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ZonesAutomaticPlatformOptimization read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ZonesAutomaticPlatformOptimization given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ZonesAutomaticPlatformOptimization
  * @throws IOException if the JSON string is invalid with respect to ZonesAutomaticPlatformOptimization
  */
  public static ZonesAutomaticPlatformOptimization fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ZonesAutomaticPlatformOptimization.class);
  }

 /**
  * Convert an instance of ZonesAutomaticPlatformOptimization to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

