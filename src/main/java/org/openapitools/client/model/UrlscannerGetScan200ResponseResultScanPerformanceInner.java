/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UrlscannerGetScan200ResponseResultScanPerformanceInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class UrlscannerGetScan200ResponseResultScanPerformanceInner {
  public static final String SERIALIZED_NAME_CONNECT_END = "connectEnd";
  @SerializedName(SERIALIZED_NAME_CONNECT_END)
  private BigDecimal connectEnd;

  public static final String SERIALIZED_NAME_CONNECT_START = "connectStart";
  @SerializedName(SERIALIZED_NAME_CONNECT_START)
  private BigDecimal connectStart;

  public static final String SERIALIZED_NAME_DECODED_BODY_SIZE = "decodedBodySize";
  @SerializedName(SERIALIZED_NAME_DECODED_BODY_SIZE)
  private BigDecimal decodedBodySize;

  public static final String SERIALIZED_NAME_DOM_COMPLETE = "domComplete";
  @SerializedName(SERIALIZED_NAME_DOM_COMPLETE)
  private BigDecimal domComplete;

  public static final String SERIALIZED_NAME_DOM_CONTENT_LOADED_EVENT_END = "domContentLoadedEventEnd";
  @SerializedName(SERIALIZED_NAME_DOM_CONTENT_LOADED_EVENT_END)
  private BigDecimal domContentLoadedEventEnd;

  public static final String SERIALIZED_NAME_DOM_CONTENT_LOADED_EVENT_START = "domContentLoadedEventStart";
  @SerializedName(SERIALIZED_NAME_DOM_CONTENT_LOADED_EVENT_START)
  private BigDecimal domContentLoadedEventStart;

  public static final String SERIALIZED_NAME_DOM_INTERACTIVE = "domInteractive";
  @SerializedName(SERIALIZED_NAME_DOM_INTERACTIVE)
  private BigDecimal domInteractive;

  public static final String SERIALIZED_NAME_DOMAIN_LOOKUP_END = "domainLookupEnd";
  @SerializedName(SERIALIZED_NAME_DOMAIN_LOOKUP_END)
  private BigDecimal domainLookupEnd;

  public static final String SERIALIZED_NAME_DOMAIN_LOOKUP_START = "domainLookupStart";
  @SerializedName(SERIALIZED_NAME_DOMAIN_LOOKUP_START)
  private BigDecimal domainLookupStart;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private BigDecimal duration;

  public static final String SERIALIZED_NAME_ENCODED_BODY_SIZE = "encodedBodySize";
  @SerializedName(SERIALIZED_NAME_ENCODED_BODY_SIZE)
  private BigDecimal encodedBodySize;

  public static final String SERIALIZED_NAME_ENTRY_TYPE = "entryType";
  @SerializedName(SERIALIZED_NAME_ENTRY_TYPE)
  private String entryType;

  public static final String SERIALIZED_NAME_FETCH_START = "fetchStart";
  @SerializedName(SERIALIZED_NAME_FETCH_START)
  private BigDecimal fetchStart;

  public static final String SERIALIZED_NAME_INITIATOR_TYPE = "initiatorType";
  @SerializedName(SERIALIZED_NAME_INITIATOR_TYPE)
  private String initiatorType;

  public static final String SERIALIZED_NAME_LOAD_EVENT_END = "loadEventEnd";
  @SerializedName(SERIALIZED_NAME_LOAD_EVENT_END)
  private BigDecimal loadEventEnd;

  public static final String SERIALIZED_NAME_LOAD_EVENT_START = "loadEventStart";
  @SerializedName(SERIALIZED_NAME_LOAD_EVENT_START)
  private BigDecimal loadEventStart;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEXT_HOP_PROTOCOL = "nextHopProtocol";
  @SerializedName(SERIALIZED_NAME_NEXT_HOP_PROTOCOL)
  private String nextHopProtocol;

  public static final String SERIALIZED_NAME_REDIRECT_COUNT = "redirectCount";
  @SerializedName(SERIALIZED_NAME_REDIRECT_COUNT)
  private BigDecimal redirectCount;

  public static final String SERIALIZED_NAME_REDIRECT_END = "redirectEnd";
  @SerializedName(SERIALIZED_NAME_REDIRECT_END)
  private BigDecimal redirectEnd;

  public static final String SERIALIZED_NAME_REDIRECT_START = "redirectStart";
  @SerializedName(SERIALIZED_NAME_REDIRECT_START)
  private BigDecimal redirectStart;

  public static final String SERIALIZED_NAME_REQUEST_START = "requestStart";
  @SerializedName(SERIALIZED_NAME_REQUEST_START)
  private BigDecimal requestStart;

  public static final String SERIALIZED_NAME_RESPONSE_END = "responseEnd";
  @SerializedName(SERIALIZED_NAME_RESPONSE_END)
  private BigDecimal responseEnd;

  public static final String SERIALIZED_NAME_RESPONSE_START = "responseStart";
  @SerializedName(SERIALIZED_NAME_RESPONSE_START)
  private BigDecimal responseStart;

  public static final String SERIALIZED_NAME_SECURE_CONNECTION_START = "secureConnectionStart";
  @SerializedName(SERIALIZED_NAME_SECURE_CONNECTION_START)
  private BigDecimal secureConnectionStart;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private BigDecimal startTime;

  public static final String SERIALIZED_NAME_TRANSFER_SIZE = "transferSize";
  @SerializedName(SERIALIZED_NAME_TRANSFER_SIZE)
  private BigDecimal transferSize;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UNLOAD_EVENT_END = "unloadEventEnd";
  @SerializedName(SERIALIZED_NAME_UNLOAD_EVENT_END)
  private BigDecimal unloadEventEnd;

  public static final String SERIALIZED_NAME_UNLOAD_EVENT_START = "unloadEventStart";
  @SerializedName(SERIALIZED_NAME_UNLOAD_EVENT_START)
  private BigDecimal unloadEventStart;

  public static final String SERIALIZED_NAME_WORKER_START = "workerStart";
  @SerializedName(SERIALIZED_NAME_WORKER_START)
  private BigDecimal workerStart;

  public UrlscannerGetScan200ResponseResultScanPerformanceInner() {
  }

  public UrlscannerGetScan200ResponseResultScanPerformanceInner connectEnd(BigDecimal connectEnd) {
    this.connectEnd = connectEnd;
    return this;
  }

   /**
   * Get connectEnd
   * @return connectEnd
  **/
  @javax.annotation.Nonnull
  public BigDecimal getConnectEnd() {
    return connectEnd;
  }

  public void setConnectEnd(BigDecimal connectEnd) {
    this.connectEnd = connectEnd;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner connectStart(BigDecimal connectStart) {
    this.connectStart = connectStart;
    return this;
  }

   /**
   * Get connectStart
   * @return connectStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getConnectStart() {
    return connectStart;
  }

  public void setConnectStart(BigDecimal connectStart) {
    this.connectStart = connectStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner decodedBodySize(BigDecimal decodedBodySize) {
    this.decodedBodySize = decodedBodySize;
    return this;
  }

   /**
   * Get decodedBodySize
   * @return decodedBodySize
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDecodedBodySize() {
    return decodedBodySize;
  }

  public void setDecodedBodySize(BigDecimal decodedBodySize) {
    this.decodedBodySize = decodedBodySize;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner domComplete(BigDecimal domComplete) {
    this.domComplete = domComplete;
    return this;
  }

   /**
   * Get domComplete
   * @return domComplete
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDomComplete() {
    return domComplete;
  }

  public void setDomComplete(BigDecimal domComplete) {
    this.domComplete = domComplete;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner domContentLoadedEventEnd(BigDecimal domContentLoadedEventEnd) {
    this.domContentLoadedEventEnd = domContentLoadedEventEnd;
    return this;
  }

   /**
   * Get domContentLoadedEventEnd
   * @return domContentLoadedEventEnd
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDomContentLoadedEventEnd() {
    return domContentLoadedEventEnd;
  }

  public void setDomContentLoadedEventEnd(BigDecimal domContentLoadedEventEnd) {
    this.domContentLoadedEventEnd = domContentLoadedEventEnd;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner domContentLoadedEventStart(BigDecimal domContentLoadedEventStart) {
    this.domContentLoadedEventStart = domContentLoadedEventStart;
    return this;
  }

   /**
   * Get domContentLoadedEventStart
   * @return domContentLoadedEventStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDomContentLoadedEventStart() {
    return domContentLoadedEventStart;
  }

  public void setDomContentLoadedEventStart(BigDecimal domContentLoadedEventStart) {
    this.domContentLoadedEventStart = domContentLoadedEventStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner domInteractive(BigDecimal domInteractive) {
    this.domInteractive = domInteractive;
    return this;
  }

   /**
   * Get domInteractive
   * @return domInteractive
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDomInteractive() {
    return domInteractive;
  }

  public void setDomInteractive(BigDecimal domInteractive) {
    this.domInteractive = domInteractive;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner domainLookupEnd(BigDecimal domainLookupEnd) {
    this.domainLookupEnd = domainLookupEnd;
    return this;
  }

   /**
   * Get domainLookupEnd
   * @return domainLookupEnd
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDomainLookupEnd() {
    return domainLookupEnd;
  }

  public void setDomainLookupEnd(BigDecimal domainLookupEnd) {
    this.domainLookupEnd = domainLookupEnd;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner domainLookupStart(BigDecimal domainLookupStart) {
    this.domainLookupStart = domainLookupStart;
    return this;
  }

   /**
   * Get domainLookupStart
   * @return domainLookupStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDomainLookupStart() {
    return domainLookupStart;
  }

  public void setDomainLookupStart(BigDecimal domainLookupStart) {
    this.domainLookupStart = domainLookupStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner duration(BigDecimal duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @javax.annotation.Nonnull
  public BigDecimal getDuration() {
    return duration;
  }

  public void setDuration(BigDecimal duration) {
    this.duration = duration;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner encodedBodySize(BigDecimal encodedBodySize) {
    this.encodedBodySize = encodedBodySize;
    return this;
  }

   /**
   * Get encodedBodySize
   * @return encodedBodySize
  **/
  @javax.annotation.Nonnull
  public BigDecimal getEncodedBodySize() {
    return encodedBodySize;
  }

  public void setEncodedBodySize(BigDecimal encodedBodySize) {
    this.encodedBodySize = encodedBodySize;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner entryType(String entryType) {
    this.entryType = entryType;
    return this;
  }

   /**
   * Get entryType
   * @return entryType
  **/
  @javax.annotation.Nonnull
  public String getEntryType() {
    return entryType;
  }

  public void setEntryType(String entryType) {
    this.entryType = entryType;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner fetchStart(BigDecimal fetchStart) {
    this.fetchStart = fetchStart;
    return this;
  }

   /**
   * Get fetchStart
   * @return fetchStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getFetchStart() {
    return fetchStart;
  }

  public void setFetchStart(BigDecimal fetchStart) {
    this.fetchStart = fetchStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner initiatorType(String initiatorType) {
    this.initiatorType = initiatorType;
    return this;
  }

   /**
   * Get initiatorType
   * @return initiatorType
  **/
  @javax.annotation.Nonnull
  public String getInitiatorType() {
    return initiatorType;
  }

  public void setInitiatorType(String initiatorType) {
    this.initiatorType = initiatorType;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner loadEventEnd(BigDecimal loadEventEnd) {
    this.loadEventEnd = loadEventEnd;
    return this;
  }

   /**
   * Get loadEventEnd
   * @return loadEventEnd
  **/
  @javax.annotation.Nonnull
  public BigDecimal getLoadEventEnd() {
    return loadEventEnd;
  }

  public void setLoadEventEnd(BigDecimal loadEventEnd) {
    this.loadEventEnd = loadEventEnd;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner loadEventStart(BigDecimal loadEventStart) {
    this.loadEventStart = loadEventStart;
    return this;
  }

   /**
   * Get loadEventStart
   * @return loadEventStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getLoadEventStart() {
    return loadEventStart;
  }

  public void setLoadEventStart(BigDecimal loadEventStart) {
    this.loadEventStart = loadEventStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner nextHopProtocol(String nextHopProtocol) {
    this.nextHopProtocol = nextHopProtocol;
    return this;
  }

   /**
   * Get nextHopProtocol
   * @return nextHopProtocol
  **/
  @javax.annotation.Nonnull
  public String getNextHopProtocol() {
    return nextHopProtocol;
  }

  public void setNextHopProtocol(String nextHopProtocol) {
    this.nextHopProtocol = nextHopProtocol;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner redirectCount(BigDecimal redirectCount) {
    this.redirectCount = redirectCount;
    return this;
  }

   /**
   * Get redirectCount
   * @return redirectCount
  **/
  @javax.annotation.Nonnull
  public BigDecimal getRedirectCount() {
    return redirectCount;
  }

  public void setRedirectCount(BigDecimal redirectCount) {
    this.redirectCount = redirectCount;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner redirectEnd(BigDecimal redirectEnd) {
    this.redirectEnd = redirectEnd;
    return this;
  }

   /**
   * Get redirectEnd
   * @return redirectEnd
  **/
  @javax.annotation.Nonnull
  public BigDecimal getRedirectEnd() {
    return redirectEnd;
  }

  public void setRedirectEnd(BigDecimal redirectEnd) {
    this.redirectEnd = redirectEnd;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner redirectStart(BigDecimal redirectStart) {
    this.redirectStart = redirectStart;
    return this;
  }

   /**
   * Get redirectStart
   * @return redirectStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getRedirectStart() {
    return redirectStart;
  }

  public void setRedirectStart(BigDecimal redirectStart) {
    this.redirectStart = redirectStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner requestStart(BigDecimal requestStart) {
    this.requestStart = requestStart;
    return this;
  }

   /**
   * Get requestStart
   * @return requestStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getRequestStart() {
    return requestStart;
  }

  public void setRequestStart(BigDecimal requestStart) {
    this.requestStart = requestStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner responseEnd(BigDecimal responseEnd) {
    this.responseEnd = responseEnd;
    return this;
  }

   /**
   * Get responseEnd
   * @return responseEnd
  **/
  @javax.annotation.Nonnull
  public BigDecimal getResponseEnd() {
    return responseEnd;
  }

  public void setResponseEnd(BigDecimal responseEnd) {
    this.responseEnd = responseEnd;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner responseStart(BigDecimal responseStart) {
    this.responseStart = responseStart;
    return this;
  }

   /**
   * Get responseStart
   * @return responseStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getResponseStart() {
    return responseStart;
  }

  public void setResponseStart(BigDecimal responseStart) {
    this.responseStart = responseStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner secureConnectionStart(BigDecimal secureConnectionStart) {
    this.secureConnectionStart = secureConnectionStart;
    return this;
  }

   /**
   * Get secureConnectionStart
   * @return secureConnectionStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getSecureConnectionStart() {
    return secureConnectionStart;
  }

  public void setSecureConnectionStart(BigDecimal secureConnectionStart) {
    this.secureConnectionStart = secureConnectionStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner startTime(BigDecimal startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nonnull
  public BigDecimal getStartTime() {
    return startTime;
  }

  public void setStartTime(BigDecimal startTime) {
    this.startTime = startTime;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner transferSize(BigDecimal transferSize) {
    this.transferSize = transferSize;
    return this;
  }

   /**
   * Get transferSize
   * @return transferSize
  **/
  @javax.annotation.Nonnull
  public BigDecimal getTransferSize() {
    return transferSize;
  }

  public void setTransferSize(BigDecimal transferSize) {
    this.transferSize = transferSize;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner unloadEventEnd(BigDecimal unloadEventEnd) {
    this.unloadEventEnd = unloadEventEnd;
    return this;
  }

   /**
   * Get unloadEventEnd
   * @return unloadEventEnd
  **/
  @javax.annotation.Nonnull
  public BigDecimal getUnloadEventEnd() {
    return unloadEventEnd;
  }

  public void setUnloadEventEnd(BigDecimal unloadEventEnd) {
    this.unloadEventEnd = unloadEventEnd;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner unloadEventStart(BigDecimal unloadEventStart) {
    this.unloadEventStart = unloadEventStart;
    return this;
  }

   /**
   * Get unloadEventStart
   * @return unloadEventStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getUnloadEventStart() {
    return unloadEventStart;
  }

  public void setUnloadEventStart(BigDecimal unloadEventStart) {
    this.unloadEventStart = unloadEventStart;
  }


  public UrlscannerGetScan200ResponseResultScanPerformanceInner workerStart(BigDecimal workerStart) {
    this.workerStart = workerStart;
    return this;
  }

   /**
   * Get workerStart
   * @return workerStart
  **/
  @javax.annotation.Nonnull
  public BigDecimal getWorkerStart() {
    return workerStart;
  }

  public void setWorkerStart(BigDecimal workerStart) {
    this.workerStart = workerStart;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UrlscannerGetScan200ResponseResultScanPerformanceInner urlscannerGetScan200ResponseResultScanPerformanceInner = (UrlscannerGetScan200ResponseResultScanPerformanceInner) o;
    return Objects.equals(this.connectEnd, urlscannerGetScan200ResponseResultScanPerformanceInner.connectEnd) &&
        Objects.equals(this.connectStart, urlscannerGetScan200ResponseResultScanPerformanceInner.connectStart) &&
        Objects.equals(this.decodedBodySize, urlscannerGetScan200ResponseResultScanPerformanceInner.decodedBodySize) &&
        Objects.equals(this.domComplete, urlscannerGetScan200ResponseResultScanPerformanceInner.domComplete) &&
        Objects.equals(this.domContentLoadedEventEnd, urlscannerGetScan200ResponseResultScanPerformanceInner.domContentLoadedEventEnd) &&
        Objects.equals(this.domContentLoadedEventStart, urlscannerGetScan200ResponseResultScanPerformanceInner.domContentLoadedEventStart) &&
        Objects.equals(this.domInteractive, urlscannerGetScan200ResponseResultScanPerformanceInner.domInteractive) &&
        Objects.equals(this.domainLookupEnd, urlscannerGetScan200ResponseResultScanPerformanceInner.domainLookupEnd) &&
        Objects.equals(this.domainLookupStart, urlscannerGetScan200ResponseResultScanPerformanceInner.domainLookupStart) &&
        Objects.equals(this.duration, urlscannerGetScan200ResponseResultScanPerformanceInner.duration) &&
        Objects.equals(this.encodedBodySize, urlscannerGetScan200ResponseResultScanPerformanceInner.encodedBodySize) &&
        Objects.equals(this.entryType, urlscannerGetScan200ResponseResultScanPerformanceInner.entryType) &&
        Objects.equals(this.fetchStart, urlscannerGetScan200ResponseResultScanPerformanceInner.fetchStart) &&
        Objects.equals(this.initiatorType, urlscannerGetScan200ResponseResultScanPerformanceInner.initiatorType) &&
        Objects.equals(this.loadEventEnd, urlscannerGetScan200ResponseResultScanPerformanceInner.loadEventEnd) &&
        Objects.equals(this.loadEventStart, urlscannerGetScan200ResponseResultScanPerformanceInner.loadEventStart) &&
        Objects.equals(this.name, urlscannerGetScan200ResponseResultScanPerformanceInner.name) &&
        Objects.equals(this.nextHopProtocol, urlscannerGetScan200ResponseResultScanPerformanceInner.nextHopProtocol) &&
        Objects.equals(this.redirectCount, urlscannerGetScan200ResponseResultScanPerformanceInner.redirectCount) &&
        Objects.equals(this.redirectEnd, urlscannerGetScan200ResponseResultScanPerformanceInner.redirectEnd) &&
        Objects.equals(this.redirectStart, urlscannerGetScan200ResponseResultScanPerformanceInner.redirectStart) &&
        Objects.equals(this.requestStart, urlscannerGetScan200ResponseResultScanPerformanceInner.requestStart) &&
        Objects.equals(this.responseEnd, urlscannerGetScan200ResponseResultScanPerformanceInner.responseEnd) &&
        Objects.equals(this.responseStart, urlscannerGetScan200ResponseResultScanPerformanceInner.responseStart) &&
        Objects.equals(this.secureConnectionStart, urlscannerGetScan200ResponseResultScanPerformanceInner.secureConnectionStart) &&
        Objects.equals(this.startTime, urlscannerGetScan200ResponseResultScanPerformanceInner.startTime) &&
        Objects.equals(this.transferSize, urlscannerGetScan200ResponseResultScanPerformanceInner.transferSize) &&
        Objects.equals(this.type, urlscannerGetScan200ResponseResultScanPerformanceInner.type) &&
        Objects.equals(this.unloadEventEnd, urlscannerGetScan200ResponseResultScanPerformanceInner.unloadEventEnd) &&
        Objects.equals(this.unloadEventStart, urlscannerGetScan200ResponseResultScanPerformanceInner.unloadEventStart) &&
        Objects.equals(this.workerStart, urlscannerGetScan200ResponseResultScanPerformanceInner.workerStart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectEnd, connectStart, decodedBodySize, domComplete, domContentLoadedEventEnd, domContentLoadedEventStart, domInteractive, domainLookupEnd, domainLookupStart, duration, encodedBodySize, entryType, fetchStart, initiatorType, loadEventEnd, loadEventStart, name, nextHopProtocol, redirectCount, redirectEnd, redirectStart, requestStart, responseEnd, responseStart, secureConnectionStart, startTime, transferSize, type, unloadEventEnd, unloadEventStart, workerStart);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UrlscannerGetScan200ResponseResultScanPerformanceInner {\n");
    sb.append("    connectEnd: ").append(toIndentedString(connectEnd)).append("\n");
    sb.append("    connectStart: ").append(toIndentedString(connectStart)).append("\n");
    sb.append("    decodedBodySize: ").append(toIndentedString(decodedBodySize)).append("\n");
    sb.append("    domComplete: ").append(toIndentedString(domComplete)).append("\n");
    sb.append("    domContentLoadedEventEnd: ").append(toIndentedString(domContentLoadedEventEnd)).append("\n");
    sb.append("    domContentLoadedEventStart: ").append(toIndentedString(domContentLoadedEventStart)).append("\n");
    sb.append("    domInteractive: ").append(toIndentedString(domInteractive)).append("\n");
    sb.append("    domainLookupEnd: ").append(toIndentedString(domainLookupEnd)).append("\n");
    sb.append("    domainLookupStart: ").append(toIndentedString(domainLookupStart)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    encodedBodySize: ").append(toIndentedString(encodedBodySize)).append("\n");
    sb.append("    entryType: ").append(toIndentedString(entryType)).append("\n");
    sb.append("    fetchStart: ").append(toIndentedString(fetchStart)).append("\n");
    sb.append("    initiatorType: ").append(toIndentedString(initiatorType)).append("\n");
    sb.append("    loadEventEnd: ").append(toIndentedString(loadEventEnd)).append("\n");
    sb.append("    loadEventStart: ").append(toIndentedString(loadEventStart)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextHopProtocol: ").append(toIndentedString(nextHopProtocol)).append("\n");
    sb.append("    redirectCount: ").append(toIndentedString(redirectCount)).append("\n");
    sb.append("    redirectEnd: ").append(toIndentedString(redirectEnd)).append("\n");
    sb.append("    redirectStart: ").append(toIndentedString(redirectStart)).append("\n");
    sb.append("    requestStart: ").append(toIndentedString(requestStart)).append("\n");
    sb.append("    responseEnd: ").append(toIndentedString(responseEnd)).append("\n");
    sb.append("    responseStart: ").append(toIndentedString(responseStart)).append("\n");
    sb.append("    secureConnectionStart: ").append(toIndentedString(secureConnectionStart)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    transferSize: ").append(toIndentedString(transferSize)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unloadEventEnd: ").append(toIndentedString(unloadEventEnd)).append("\n");
    sb.append("    unloadEventStart: ").append(toIndentedString(unloadEventStart)).append("\n");
    sb.append("    workerStart: ").append(toIndentedString(workerStart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("connectEnd");
    openapiFields.add("connectStart");
    openapiFields.add("decodedBodySize");
    openapiFields.add("domComplete");
    openapiFields.add("domContentLoadedEventEnd");
    openapiFields.add("domContentLoadedEventStart");
    openapiFields.add("domInteractive");
    openapiFields.add("domainLookupEnd");
    openapiFields.add("domainLookupStart");
    openapiFields.add("duration");
    openapiFields.add("encodedBodySize");
    openapiFields.add("entryType");
    openapiFields.add("fetchStart");
    openapiFields.add("initiatorType");
    openapiFields.add("loadEventEnd");
    openapiFields.add("loadEventStart");
    openapiFields.add("name");
    openapiFields.add("nextHopProtocol");
    openapiFields.add("redirectCount");
    openapiFields.add("redirectEnd");
    openapiFields.add("redirectStart");
    openapiFields.add("requestStart");
    openapiFields.add("responseEnd");
    openapiFields.add("responseStart");
    openapiFields.add("secureConnectionStart");
    openapiFields.add("startTime");
    openapiFields.add("transferSize");
    openapiFields.add("type");
    openapiFields.add("unloadEventEnd");
    openapiFields.add("unloadEventStart");
    openapiFields.add("workerStart");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("connectEnd");
    openapiRequiredFields.add("connectStart");
    openapiRequiredFields.add("decodedBodySize");
    openapiRequiredFields.add("domComplete");
    openapiRequiredFields.add("domContentLoadedEventEnd");
    openapiRequiredFields.add("domContentLoadedEventStart");
    openapiRequiredFields.add("domInteractive");
    openapiRequiredFields.add("domainLookupEnd");
    openapiRequiredFields.add("domainLookupStart");
    openapiRequiredFields.add("duration");
    openapiRequiredFields.add("encodedBodySize");
    openapiRequiredFields.add("entryType");
    openapiRequiredFields.add("fetchStart");
    openapiRequiredFields.add("initiatorType");
    openapiRequiredFields.add("loadEventEnd");
    openapiRequiredFields.add("loadEventStart");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("nextHopProtocol");
    openapiRequiredFields.add("redirectCount");
    openapiRequiredFields.add("redirectEnd");
    openapiRequiredFields.add("redirectStart");
    openapiRequiredFields.add("requestStart");
    openapiRequiredFields.add("responseEnd");
    openapiRequiredFields.add("responseStart");
    openapiRequiredFields.add("secureConnectionStart");
    openapiRequiredFields.add("startTime");
    openapiRequiredFields.add("transferSize");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("unloadEventEnd");
    openapiRequiredFields.add("unloadEventStart");
    openapiRequiredFields.add("workerStart");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UrlscannerGetScan200ResponseResultScanPerformanceInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UrlscannerGetScan200ResponseResultScanPerformanceInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UrlscannerGetScan200ResponseResultScanPerformanceInner is not found in the empty JSON string", UrlscannerGetScan200ResponseResultScanPerformanceInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UrlscannerGetScan200ResponseResultScanPerformanceInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UrlscannerGetScan200ResponseResultScanPerformanceInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UrlscannerGetScan200ResponseResultScanPerformanceInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("entryType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entryType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entryType").toString()));
      }
      if (!jsonObj.get("initiatorType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `initiatorType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("initiatorType").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("nextHopProtocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextHopProtocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextHopProtocol").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UrlscannerGetScan200ResponseResultScanPerformanceInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UrlscannerGetScan200ResponseResultScanPerformanceInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UrlscannerGetScan200ResponseResultScanPerformanceInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UrlscannerGetScan200ResponseResultScanPerformanceInner.class));

       return (TypeAdapter<T>) new TypeAdapter<UrlscannerGetScan200ResponseResultScanPerformanceInner>() {
           @Override
           public void write(JsonWriter out, UrlscannerGetScan200ResponseResultScanPerformanceInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UrlscannerGetScan200ResponseResultScanPerformanceInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UrlscannerGetScan200ResponseResultScanPerformanceInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UrlscannerGetScan200ResponseResultScanPerformanceInner
  * @throws IOException if the JSON string is invalid with respect to UrlscannerGetScan200ResponseResultScanPerformanceInner
  */
  public static UrlscannerGetScan200ResponseResultScanPerformanceInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UrlscannerGetScan200ResponseResultScanPerformanceInner.class);
  }

 /**
  * Convert an instance of UrlscannerGetScan200ResponseResultScanPerformanceInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

