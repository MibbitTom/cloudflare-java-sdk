/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TeamsDevicesDisableForTime
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class TeamsDevicesDisableForTime {
  public static final String SERIALIZED_NAME_1 = "1";
  @SerializedName(SERIALIZED_NAME_1)
  private Object _1 = null;

  public static final String SERIALIZED_NAME_12 = "12";
  @SerializedName(SERIALIZED_NAME_12)
  private Object _12 = null;

  public static final String SERIALIZED_NAME_24 = "24";
  @SerializedName(SERIALIZED_NAME_24)
  private Object _24 = null;

  public static final String SERIALIZED_NAME_3 = "3";
  @SerializedName(SERIALIZED_NAME_3)
  private Object _3 = null;

  public static final String SERIALIZED_NAME_6 = "6";
  @SerializedName(SERIALIZED_NAME_6)
  private Object _6 = null;

  public TeamsDevicesDisableForTime() {
  }

  public TeamsDevicesDisableForTime _1(Object _1) {
    this._1 = _1;
    return this;
  }

   /**
   * Override code that is valid for 1 hour.
   * @return _1
  **/
  @javax.annotation.Nullable
  public Object get1() {
    return _1;
  }

  public void set1(Object _1) {
    this._1 = _1;
  }


  public TeamsDevicesDisableForTime _12(Object _12) {
    this._12 = _12;
    return this;
  }

   /**
   * Override code that is valid for 12 hour2.
   * @return _12
  **/
  @javax.annotation.Nullable
  public Object get12() {
    return _12;
  }

  public void set12(Object _12) {
    this._12 = _12;
  }


  public TeamsDevicesDisableForTime _24(Object _24) {
    this._24 = _24;
    return this;
  }

   /**
   * Override code that is valid for 24 hour.2.
   * @return _24
  **/
  @javax.annotation.Nullable
  public Object get24() {
    return _24;
  }

  public void set24(Object _24) {
    this._24 = _24;
  }


  public TeamsDevicesDisableForTime _3(Object _3) {
    this._3 = _3;
    return this;
  }

   /**
   * Override code that is valid for 3 hours.
   * @return _3
  **/
  @javax.annotation.Nullable
  public Object get3() {
    return _3;
  }

  public void set3(Object _3) {
    this._3 = _3;
  }


  public TeamsDevicesDisableForTime _6(Object _6) {
    this._6 = _6;
    return this;
  }

   /**
   * Override code that is valid for 6 hours.
   * @return _6
  **/
  @javax.annotation.Nullable
  public Object get6() {
    return _6;
  }

  public void set6(Object _6) {
    this._6 = _6;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamsDevicesDisableForTime teamsDevicesDisableForTime = (TeamsDevicesDisableForTime) o;
    return Objects.equals(this._1, teamsDevicesDisableForTime._1) &&
        Objects.equals(this._12, teamsDevicesDisableForTime._12) &&
        Objects.equals(this._24, teamsDevicesDisableForTime._24) &&
        Objects.equals(this._3, teamsDevicesDisableForTime._3) &&
        Objects.equals(this._6, teamsDevicesDisableForTime._6);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(_1, _12, _24, _3, _6);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamsDevicesDisableForTime {\n");
    sb.append("    _1: ").append(toIndentedString(_1)).append("\n");
    sb.append("    _12: ").append(toIndentedString(_12)).append("\n");
    sb.append("    _24: ").append(toIndentedString(_24)).append("\n");
    sb.append("    _3: ").append(toIndentedString(_3)).append("\n");
    sb.append("    _6: ").append(toIndentedString(_6)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("1");
    openapiFields.add("12");
    openapiFields.add("24");
    openapiFields.add("3");
    openapiFields.add("6");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TeamsDevicesDisableForTime
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamsDevicesDisableForTime.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamsDevicesDisableForTime is not found in the empty JSON string", TeamsDevicesDisableForTime.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamsDevicesDisableForTime.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamsDevicesDisableForTime` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamsDevicesDisableForTime.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamsDevicesDisableForTime' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamsDevicesDisableForTime> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamsDevicesDisableForTime.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamsDevicesDisableForTime>() {
           @Override
           public void write(JsonWriter out, TeamsDevicesDisableForTime value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamsDevicesDisableForTime read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TeamsDevicesDisableForTime given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TeamsDevicesDisableForTime
  * @throws IOException if the JSON string is invalid with respect to TeamsDevicesDisableForTime
  */
  public static TeamsDevicesDisableForTime fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamsDevicesDisableForTime.class);
  }

 /**
  * Convert an instance of TeamsDevicesDisableForTime to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

