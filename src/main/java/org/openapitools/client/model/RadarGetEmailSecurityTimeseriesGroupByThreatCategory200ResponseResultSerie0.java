/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import invalidPackageName.JSON;

/**
 * RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:29:23.936635354+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 {
  public static final String SERIALIZED_NAME_BRAND_IMPERSONATION = "BrandImpersonation";
  @SerializedName(SERIALIZED_NAME_BRAND_IMPERSONATION)
  private List<String> brandImpersonation = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREDENTIAL_HARVESTER = "CredentialHarvester";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_HARVESTER)
  private List<String> credentialHarvester = new ArrayList<>();

  public static final String SERIALIZED_NAME_IDENTITY_DECEPTION = "IdentityDeception";
  @SerializedName(SERIALIZED_NAME_IDENTITY_DECEPTION)
  private List<String> identityDeception = new ArrayList<>();

  public static final String SERIALIZED_NAME_LINK = "Link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private List<String> link = new ArrayList<>();

  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0() {
  }

  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 brandImpersonation(List<String> brandImpersonation) {
    this.brandImpersonation = brandImpersonation;
    return this;
  }

  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 addBrandImpersonationItem(String brandImpersonationItem) {
    if (this.brandImpersonation == null) {
      this.brandImpersonation = new ArrayList<>();
    }
    this.brandImpersonation.add(brandImpersonationItem);
    return this;
  }

   /**
   * Get brandImpersonation
   * @return brandImpersonation
  **/
  @javax.annotation.Nonnull
  public List<String> getBrandImpersonation() {
    return brandImpersonation;
  }

  public void setBrandImpersonation(List<String> brandImpersonation) {
    this.brandImpersonation = brandImpersonation;
  }


  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 credentialHarvester(List<String> credentialHarvester) {
    this.credentialHarvester = credentialHarvester;
    return this;
  }

  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 addCredentialHarvesterItem(String credentialHarvesterItem) {
    if (this.credentialHarvester == null) {
      this.credentialHarvester = new ArrayList<>();
    }
    this.credentialHarvester.add(credentialHarvesterItem);
    return this;
  }

   /**
   * Get credentialHarvester
   * @return credentialHarvester
  **/
  @javax.annotation.Nonnull
  public List<String> getCredentialHarvester() {
    return credentialHarvester;
  }

  public void setCredentialHarvester(List<String> credentialHarvester) {
    this.credentialHarvester = credentialHarvester;
  }


  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 identityDeception(List<String> identityDeception) {
    this.identityDeception = identityDeception;
    return this;
  }

  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 addIdentityDeceptionItem(String identityDeceptionItem) {
    if (this.identityDeception == null) {
      this.identityDeception = new ArrayList<>();
    }
    this.identityDeception.add(identityDeceptionItem);
    return this;
  }

   /**
   * Get identityDeception
   * @return identityDeception
  **/
  @javax.annotation.Nonnull
  public List<String> getIdentityDeception() {
    return identityDeception;
  }

  public void setIdentityDeception(List<String> identityDeception) {
    this.identityDeception = identityDeception;
  }


  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 link(List<String> link) {
    this.link = link;
    return this;
  }

  public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 addLinkItem(String linkItem) {
    if (this.link == null) {
      this.link = new ArrayList<>();
    }
    this.link.add(linkItem);
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @javax.annotation.Nonnull
  public List<String> getLink() {
    return link;
  }

  public void setLink(List<String> link) {
    this.link = link;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 radarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 = (RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0) o;
    return Objects.equals(this.brandImpersonation, radarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.brandImpersonation) &&
        Objects.equals(this.credentialHarvester, radarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.credentialHarvester) &&
        Objects.equals(this.identityDeception, radarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.identityDeception) &&
        Objects.equals(this.link, radarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.link);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brandImpersonation, credentialHarvester, identityDeception, link);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 {\n");
    sb.append("    brandImpersonation: ").append(toIndentedString(brandImpersonation)).append("\n");
    sb.append("    credentialHarvester: ").append(toIndentedString(credentialHarvester)).append("\n");
    sb.append("    identityDeception: ").append(toIndentedString(identityDeception)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BrandImpersonation");
    openapiFields.add("CredentialHarvester");
    openapiFields.add("IdentityDeception");
    openapiFields.add("Link");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BrandImpersonation");
    openapiRequiredFields.add("CredentialHarvester");
    openapiRequiredFields.add("IdentityDeception");
    openapiRequiredFields.add("Link");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 is not found in the empty JSON string", RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("BrandImpersonation") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("BrandImpersonation").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `BrandImpersonation` to be an array in the JSON string but got `%s`", jsonObj.get("BrandImpersonation").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("CredentialHarvester") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("CredentialHarvester").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `CredentialHarvester` to be an array in the JSON string but got `%s`", jsonObj.get("CredentialHarvester").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("IdentityDeception") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("IdentityDeception").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `IdentityDeception` to be an array in the JSON string but got `%s`", jsonObj.get("IdentityDeception").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("Link") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("Link").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Link` to be an array in the JSON string but got `%s`", jsonObj.get("Link").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.class));

       return (TypeAdapter<T>) new TypeAdapter<RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0>() {
           @Override
           public void write(JsonWriter out, RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0
  * @throws IOException if the JSON string is invalid with respect to RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0
  */
  public static RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0.class);
  }

 /**
  * Convert an instance of RadarGetEmailSecurityTimeseriesGroupByThreatCategory200ResponseResultSerie0 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

