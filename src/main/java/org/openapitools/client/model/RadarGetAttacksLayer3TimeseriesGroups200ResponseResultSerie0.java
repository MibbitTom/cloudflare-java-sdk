/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 {
  public static final String SERIALIZED_NAME_GRE = "gre";
  @SerializedName(SERIALIZED_NAME_GRE)
  private List<String> gre = new ArrayList<>();

  public static final String SERIALIZED_NAME_ICMP = "icmp";
  @SerializedName(SERIALIZED_NAME_ICMP)
  private List<String> icmp = new ArrayList<>();

  public static final String SERIALIZED_NAME_TCP = "tcp";
  @SerializedName(SERIALIZED_NAME_TCP)
  private List<String> tcp = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIMESTAMPS = "timestamps";
  @SerializedName(SERIALIZED_NAME_TIMESTAMPS)
  private List<String> timestamps = new ArrayList<>();

  public static final String SERIALIZED_NAME_UDP = "udp";
  @SerializedName(SERIALIZED_NAME_UDP)
  private List<String> udp = new ArrayList<>();

  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0() {
  }

  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 gre(List<String> gre) {
    this.gre = gre;
    return this;
  }

  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 addGreItem(String greItem) {
    if (this.gre == null) {
      this.gre = new ArrayList<>();
    }
    this.gre.add(greItem);
    return this;
  }

   /**
   * Get gre
   * @return gre
  **/
  @javax.annotation.Nonnull
  public List<String> getGre() {
    return gre;
  }

  public void setGre(List<String> gre) {
    this.gre = gre;
  }


  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 icmp(List<String> icmp) {
    this.icmp = icmp;
    return this;
  }

  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 addIcmpItem(String icmpItem) {
    if (this.icmp == null) {
      this.icmp = new ArrayList<>();
    }
    this.icmp.add(icmpItem);
    return this;
  }

   /**
   * Get icmp
   * @return icmp
  **/
  @javax.annotation.Nonnull
  public List<String> getIcmp() {
    return icmp;
  }

  public void setIcmp(List<String> icmp) {
    this.icmp = icmp;
  }


  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 tcp(List<String> tcp) {
    this.tcp = tcp;
    return this;
  }

  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 addTcpItem(String tcpItem) {
    if (this.tcp == null) {
      this.tcp = new ArrayList<>();
    }
    this.tcp.add(tcpItem);
    return this;
  }

   /**
   * Get tcp
   * @return tcp
  **/
  @javax.annotation.Nonnull
  public List<String> getTcp() {
    return tcp;
  }

  public void setTcp(List<String> tcp) {
    this.tcp = tcp;
  }


  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 timestamps(List<String> timestamps) {
    this.timestamps = timestamps;
    return this;
  }

  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 addTimestampsItem(String timestampsItem) {
    if (this.timestamps == null) {
      this.timestamps = new ArrayList<>();
    }
    this.timestamps.add(timestampsItem);
    return this;
  }

   /**
   * Get timestamps
   * @return timestamps
  **/
  @javax.annotation.Nonnull
  public List<String> getTimestamps() {
    return timestamps;
  }

  public void setTimestamps(List<String> timestamps) {
    this.timestamps = timestamps;
  }


  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 udp(List<String> udp) {
    this.udp = udp;
    return this;
  }

  public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 addUdpItem(String udpItem) {
    if (this.udp == null) {
      this.udp = new ArrayList<>();
    }
    this.udp.add(udpItem);
    return this;
  }

   /**
   * Get udp
   * @return udp
  **/
  @javax.annotation.Nonnull
  public List<String> getUdp() {
    return udp;
  }

  public void setUdp(List<String> udp) {
    this.udp = udp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 radarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 = (RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0) o;
    return Objects.equals(this.gre, radarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.gre) &&
        Objects.equals(this.icmp, radarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.icmp) &&
        Objects.equals(this.tcp, radarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.tcp) &&
        Objects.equals(this.timestamps, radarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.timestamps) &&
        Objects.equals(this.udp, radarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.udp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gre, icmp, tcp, timestamps, udp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 {\n");
    sb.append("    gre: ").append(toIndentedString(gre)).append("\n");
    sb.append("    icmp: ").append(toIndentedString(icmp)).append("\n");
    sb.append("    tcp: ").append(toIndentedString(tcp)).append("\n");
    sb.append("    timestamps: ").append(toIndentedString(timestamps)).append("\n");
    sb.append("    udp: ").append(toIndentedString(udp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gre");
    openapiFields.add("icmp");
    openapiFields.add("tcp");
    openapiFields.add("timestamps");
    openapiFields.add("udp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("gre");
    openapiRequiredFields.add("icmp");
    openapiRequiredFields.add("tcp");
    openapiRequiredFields.add("timestamps");
    openapiRequiredFields.add("udp");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 is not found in the empty JSON string", RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("gre") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("gre").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `gre` to be an array in the JSON string but got `%s`", jsonObj.get("gre").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("icmp") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("icmp").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `icmp` to be an array in the JSON string but got `%s`", jsonObj.get("icmp").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("tcp") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("tcp").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tcp` to be an array in the JSON string but got `%s`", jsonObj.get("tcp").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("timestamps") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("timestamps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestamps` to be an array in the JSON string but got `%s`", jsonObj.get("timestamps").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("udp") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("udp").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `udp` to be an array in the JSON string but got `%s`", jsonObj.get("udp").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.class));

       return (TypeAdapter<T>) new TypeAdapter<RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0>() {
           @Override
           public void write(JsonWriter out, RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0
  * @throws IOException if the JSON string is invalid with respect to RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0
  */
  public static RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0.class);
  }

 /**
  * Convert an instance of RadarGetAttacksLayer3TimeseriesGroups200ResponseResultSerie0 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

