/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.WafManagedRulesMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WafManagedRulesSchemasGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:11:08.999300719+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class WafManagedRulesSchemasGroup {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MODIFIED_RULES_COUNT = "modified_rules_count";
  @SerializedName(SERIALIZED_NAME_MODIFIED_RULES_COUNT)
  private BigDecimal modifiedRulesCount = new BigDecimal("0");

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "package_id";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private String packageId;

  public static final String SERIALIZED_NAME_RULES_COUNT = "rules_count";
  @SerializedName(SERIALIZED_NAME_RULES_COUNT)
  private BigDecimal rulesCount = new BigDecimal("0");

  public static final String SERIALIZED_NAME_ALLOWED_MODES = "allowed_modes";
  @SerializedName(SERIALIZED_NAME_ALLOWED_MODES)
  private List<WafManagedRulesMode> allowedModes = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private WafManagedRulesMode mode = WafManagedRulesMode.ON;

  public WafManagedRulesSchemasGroup() {
  }

  public WafManagedRulesSchemasGroup(
     String description, 
     String id, 
     BigDecimal modifiedRulesCount, 
     String name, 
     String packageId, 
     BigDecimal rulesCount, 
     List<WafManagedRulesMode> allowedModes
  ) {
    this();
    this.description = description;
    this.id = id;
    this.modifiedRulesCount = modifiedRulesCount;
    this.name = name;
    this.packageId = packageId;
    this.rulesCount = rulesCount;
    this.allowedModes = allowedModes;
  }

   /**
   * An informative summary of what the rule group does.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }



   /**
   * The unique identifier of the rule group.
   * @return id
  **/
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }



   /**
   * The number of rules within the group that have been modified from their default configuration.
   * @return modifiedRulesCount
  **/
  @javax.annotation.Nullable
  public BigDecimal getModifiedRulesCount() {
    return modifiedRulesCount;
  }



   /**
   * The name of the rule group.
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }



   /**
   * The unique identifier of a WAF package.
   * @return packageId
  **/
  @javax.annotation.Nullable
  public String getPackageId() {
    return packageId;
  }



   /**
   * The number of rules in the current rule group.
   * @return rulesCount
  **/
  @javax.annotation.Nonnull
  public BigDecimal getRulesCount() {
    return rulesCount;
  }



   /**
   * The available states for the rule group.
   * @return allowedModes
  **/
  @javax.annotation.Nullable
  public List<WafManagedRulesMode> getAllowedModes() {
    return allowedModes;
  }



  public WafManagedRulesSchemasGroup mode(WafManagedRulesMode mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @javax.annotation.Nonnull
  public WafManagedRulesMode getMode() {
    return mode;
  }

  public void setMode(WafManagedRulesMode mode) {
    this.mode = mode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WafManagedRulesSchemasGroup wafManagedRulesSchemasGroup = (WafManagedRulesSchemasGroup) o;
    return Objects.equals(this.description, wafManagedRulesSchemasGroup.description) &&
        Objects.equals(this.id, wafManagedRulesSchemasGroup.id) &&
        Objects.equals(this.modifiedRulesCount, wafManagedRulesSchemasGroup.modifiedRulesCount) &&
        Objects.equals(this.name, wafManagedRulesSchemasGroup.name) &&
        Objects.equals(this.packageId, wafManagedRulesSchemasGroup.packageId) &&
        Objects.equals(this.rulesCount, wafManagedRulesSchemasGroup.rulesCount) &&
        Objects.equals(this.allowedModes, wafManagedRulesSchemasGroup.allowedModes) &&
        Objects.equals(this.mode, wafManagedRulesSchemasGroup.mode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, modifiedRulesCount, name, packageId, rulesCount, allowedModes, mode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WafManagedRulesSchemasGroup {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modifiedRulesCount: ").append(toIndentedString(modifiedRulesCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    rulesCount: ").append(toIndentedString(rulesCount)).append("\n");
    sb.append("    allowedModes: ").append(toIndentedString(allowedModes)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("modified_rules_count");
    openapiFields.add("name");
    openapiFields.add("package_id");
    openapiFields.add("rules_count");
    openapiFields.add("allowed_modes");
    openapiFields.add("mode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("rules_count");
    openapiRequiredFields.add("mode");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to WafManagedRulesSchemasGroup
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WafManagedRulesSchemasGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WafManagedRulesSchemasGroup is not found in the empty JSON string", WafManagedRulesSchemasGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WafManagedRulesSchemasGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WafManagedRulesSchemasGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WafManagedRulesSchemasGroup.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("package_id") != null && !jsonObj.get("package_id").isJsonNull()) && !jsonObj.get("package_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `package_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("package_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_modes") != null && !jsonObj.get("allowed_modes").isJsonNull() && !jsonObj.get("allowed_modes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_modes` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_modes").toString()));
      }
      // validate the required field `mode`
      WafManagedRulesMode.validateJsonElement(jsonObj.get("mode"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WafManagedRulesSchemasGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WafManagedRulesSchemasGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WafManagedRulesSchemasGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WafManagedRulesSchemasGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<WafManagedRulesSchemasGroup>() {
           @Override
           public void write(JsonWriter out, WafManagedRulesSchemasGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WafManagedRulesSchemasGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WafManagedRulesSchemasGroup given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WafManagedRulesSchemasGroup
  * @throws IOException if the JSON string is invalid with respect to WafManagedRulesSchemasGroup
  */
  public static WafManagedRulesSchemasGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WafManagedRulesSchemasGroup.class);
  }

 /**
  * Convert an instance of WafManagedRulesSchemasGroup to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

