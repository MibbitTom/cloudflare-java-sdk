/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ZeroTrustGatewayEmptyResponse;
import org.openapitools.client.model.ZeroTrustGatewayListItemResponseCollection;
import org.openapitools.client.model.ZeroTrustGatewayResponseCollection;
import org.openapitools.client.model.ZeroTrustGatewaySingleResponse;
import org.openapitools.client.model.ZeroTrustGatewaySingleResponseWithListItems;
import org.openapitools.client.model.ZeroTrustListsCreateZeroTrustList4XXResponse;
import org.openapitools.client.model.ZeroTrustListsCreateZeroTrustListRequest;
import org.openapitools.client.model.ZeroTrustListsDeleteZeroTrustList4XXResponse;
import org.openapitools.client.model.ZeroTrustListsListZeroTrustLists4XXResponse;
import org.openapitools.client.model.ZeroTrustListsPatchZeroTrustListRequest;
import org.openapitools.client.model.ZeroTrustListsUpdateZeroTrustListRequest;
import org.openapitools.client.model.ZeroTrustListsZeroTrustListDetails4XXResponse;
import org.openapitools.client.model.ZeroTrustListsZeroTrustListItems4XXResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZeroTrustListsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ZeroTrustListsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ZeroTrustListsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for zeroTrustListsCreateZeroTrustList
     * @param accountId  (required)
     * @param zeroTrustListsCreateZeroTrustListRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsCreateZeroTrustListCall(Object accountId, ZeroTrustListsCreateZeroTrustListRequest zeroTrustListsCreateZeroTrustListRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustListsCreateZeroTrustListRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/lists"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustListsCreateZeroTrustListValidateBeforeCall(Object accountId, ZeroTrustListsCreateZeroTrustListRequest zeroTrustListsCreateZeroTrustListRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustListsCreateZeroTrustList(Async)");
        }

        // verify the required parameter 'zeroTrustListsCreateZeroTrustListRequest' is set
        if (zeroTrustListsCreateZeroTrustListRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustListsCreateZeroTrustListRequest' when calling zeroTrustListsCreateZeroTrustList(Async)");
        }

        return zeroTrustListsCreateZeroTrustListCall(accountId, zeroTrustListsCreateZeroTrustListRequest, _callback);

    }

    /**
     * Create Zero Trust list
     * Creates a new Zero Trust list.
     * @param accountId  (required)
     * @param zeroTrustListsCreateZeroTrustListRequest  (required)
     * @return ZeroTrustGatewaySingleResponseWithListItems
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySingleResponseWithListItems zeroTrustListsCreateZeroTrustList(Object accountId, ZeroTrustListsCreateZeroTrustListRequest zeroTrustListsCreateZeroTrustListRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewaySingleResponseWithListItems> localVarResp = zeroTrustListsCreateZeroTrustListWithHttpInfo(accountId, zeroTrustListsCreateZeroTrustListRequest);
        return localVarResp.getData();
    }

    /**
     * Create Zero Trust list
     * Creates a new Zero Trust list.
     * @param accountId  (required)
     * @param zeroTrustListsCreateZeroTrustListRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySingleResponseWithListItems&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySingleResponseWithListItems> zeroTrustListsCreateZeroTrustListWithHttpInfo(Object accountId, ZeroTrustListsCreateZeroTrustListRequest zeroTrustListsCreateZeroTrustListRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustListsCreateZeroTrustListValidateBeforeCall(accountId, zeroTrustListsCreateZeroTrustListRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponseWithListItems>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Zero Trust list (asynchronously)
     * Creates a new Zero Trust list.
     * @param accountId  (required)
     * @param zeroTrustListsCreateZeroTrustListRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsCreateZeroTrustListAsync(Object accountId, ZeroTrustListsCreateZeroTrustListRequest zeroTrustListsCreateZeroTrustListRequest, final ApiCallback<ZeroTrustGatewaySingleResponseWithListItems> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustListsCreateZeroTrustListValidateBeforeCall(accountId, zeroTrustListsCreateZeroTrustListRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponseWithListItems>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustListsDeleteZeroTrustList
     * @param listId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsDeleteZeroTrustListCall(String listId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/lists/{list_id}"
            .replace("{" + "list_id" + "}", localVarApiClient.escapeString(listId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustListsDeleteZeroTrustListValidateBeforeCall(String listId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'listId' is set
        if (listId == null) {
            throw new ApiException("Missing the required parameter 'listId' when calling zeroTrustListsDeleteZeroTrustList(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustListsDeleteZeroTrustList(Async)");
        }

        return zeroTrustListsDeleteZeroTrustListCall(listId, accountId, _callback);

    }

    /**
     * Delete Zero Trust list
     * Deletes a Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewayEmptyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayEmptyResponse zeroTrustListsDeleteZeroTrustList(String listId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayEmptyResponse> localVarResp = zeroTrustListsDeleteZeroTrustListWithHttpInfo(listId, accountId);
        return localVarResp.getData();
    }

    /**
     * Delete Zero Trust list
     * Deletes a Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayEmptyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayEmptyResponse> zeroTrustListsDeleteZeroTrustListWithHttpInfo(String listId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustListsDeleteZeroTrustListValidateBeforeCall(listId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete Zero Trust list (asynchronously)
     * Deletes a Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsDeleteZeroTrustListAsync(String listId, Object accountId, final ApiCallback<ZeroTrustGatewayEmptyResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustListsDeleteZeroTrustListValidateBeforeCall(listId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustListsListZeroTrustLists
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust lists response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust lists response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsListZeroTrustListsCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/lists"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustListsListZeroTrustListsValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustListsListZeroTrustLists(Async)");
        }

        return zeroTrustListsListZeroTrustListsCall(accountId, _callback);

    }

    /**
     * List Zero Trust lists
     * Fetches all Zero Trust lists for an account.
     * @param accountId  (required)
     * @return ZeroTrustGatewayResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust lists response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust lists response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayResponseCollection zeroTrustListsListZeroTrustLists(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayResponseCollection> localVarResp = zeroTrustListsListZeroTrustListsWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * List Zero Trust lists
     * Fetches all Zero Trust lists for an account.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust lists response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust lists response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayResponseCollection> zeroTrustListsListZeroTrustListsWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustListsListZeroTrustListsValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Zero Trust lists (asynchronously)
     * Fetches all Zero Trust lists for an account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust lists response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust lists response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsListZeroTrustListsAsync(Object accountId, final ApiCallback<ZeroTrustGatewayResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustListsListZeroTrustListsValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustListsPatchZeroTrustList
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsPatchZeroTrustListRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patch Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Patch Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsPatchZeroTrustListCall(String listId, Object accountId, ZeroTrustListsPatchZeroTrustListRequest zeroTrustListsPatchZeroTrustListRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustListsPatchZeroTrustListRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/lists/{list_id}"
            .replace("{" + "list_id" + "}", localVarApiClient.escapeString(listId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustListsPatchZeroTrustListValidateBeforeCall(String listId, Object accountId, ZeroTrustListsPatchZeroTrustListRequest zeroTrustListsPatchZeroTrustListRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'listId' is set
        if (listId == null) {
            throw new ApiException("Missing the required parameter 'listId' when calling zeroTrustListsPatchZeroTrustList(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustListsPatchZeroTrustList(Async)");
        }

        // verify the required parameter 'zeroTrustListsPatchZeroTrustListRequest' is set
        if (zeroTrustListsPatchZeroTrustListRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustListsPatchZeroTrustListRequest' when calling zeroTrustListsPatchZeroTrustList(Async)");
        }

        return zeroTrustListsPatchZeroTrustListCall(listId, accountId, zeroTrustListsPatchZeroTrustListRequest, _callback);

    }

    /**
     * Patch Zero Trust list
     * Appends or removes an item from a configured Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsPatchZeroTrustListRequest  (required)
     * @return ZeroTrustGatewaySingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patch Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Patch Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySingleResponse zeroTrustListsPatchZeroTrustList(String listId, Object accountId, ZeroTrustListsPatchZeroTrustListRequest zeroTrustListsPatchZeroTrustListRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewaySingleResponse> localVarResp = zeroTrustListsPatchZeroTrustListWithHttpInfo(listId, accountId, zeroTrustListsPatchZeroTrustListRequest);
        return localVarResp.getData();
    }

    /**
     * Patch Zero Trust list
     * Appends or removes an item from a configured Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsPatchZeroTrustListRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patch Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Patch Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySingleResponse> zeroTrustListsPatchZeroTrustListWithHttpInfo(String listId, Object accountId, ZeroTrustListsPatchZeroTrustListRequest zeroTrustListsPatchZeroTrustListRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustListsPatchZeroTrustListValidateBeforeCall(listId, accountId, zeroTrustListsPatchZeroTrustListRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Patch Zero Trust list (asynchronously)
     * Appends or removes an item from a configured Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsPatchZeroTrustListRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Patch Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Patch Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsPatchZeroTrustListAsync(String listId, Object accountId, ZeroTrustListsPatchZeroTrustListRequest zeroTrustListsPatchZeroTrustListRequest, final ApiCallback<ZeroTrustGatewaySingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustListsPatchZeroTrustListValidateBeforeCall(listId, accountId, zeroTrustListsPatchZeroTrustListRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustListsUpdateZeroTrustList
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsUpdateZeroTrustListRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsUpdateZeroTrustListCall(String listId, Object accountId, ZeroTrustListsUpdateZeroTrustListRequest zeroTrustListsUpdateZeroTrustListRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustListsUpdateZeroTrustListRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/lists/{list_id}"
            .replace("{" + "list_id" + "}", localVarApiClient.escapeString(listId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustListsUpdateZeroTrustListValidateBeforeCall(String listId, Object accountId, ZeroTrustListsUpdateZeroTrustListRequest zeroTrustListsUpdateZeroTrustListRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'listId' is set
        if (listId == null) {
            throw new ApiException("Missing the required parameter 'listId' when calling zeroTrustListsUpdateZeroTrustList(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustListsUpdateZeroTrustList(Async)");
        }

        // verify the required parameter 'zeroTrustListsUpdateZeroTrustListRequest' is set
        if (zeroTrustListsUpdateZeroTrustListRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustListsUpdateZeroTrustListRequest' when calling zeroTrustListsUpdateZeroTrustList(Async)");
        }

        return zeroTrustListsUpdateZeroTrustListCall(listId, accountId, zeroTrustListsUpdateZeroTrustListRequest, _callback);

    }

    /**
     * Update Zero Trust list
     * Updates a configured Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsUpdateZeroTrustListRequest  (required)
     * @return ZeroTrustGatewaySingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySingleResponse zeroTrustListsUpdateZeroTrustList(String listId, Object accountId, ZeroTrustListsUpdateZeroTrustListRequest zeroTrustListsUpdateZeroTrustListRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewaySingleResponse> localVarResp = zeroTrustListsUpdateZeroTrustListWithHttpInfo(listId, accountId, zeroTrustListsUpdateZeroTrustListRequest);
        return localVarResp.getData();
    }

    /**
     * Update Zero Trust list
     * Updates a configured Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsUpdateZeroTrustListRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySingleResponse> zeroTrustListsUpdateZeroTrustListWithHttpInfo(String listId, Object accountId, ZeroTrustListsUpdateZeroTrustListRequest zeroTrustListsUpdateZeroTrustListRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustListsUpdateZeroTrustListValidateBeforeCall(listId, accountId, zeroTrustListsUpdateZeroTrustListRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Zero Trust list (asynchronously)
     * Updates a configured Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param zeroTrustListsUpdateZeroTrustListRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust list response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust list response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsUpdateZeroTrustListAsync(String listId, Object accountId, ZeroTrustListsUpdateZeroTrustListRequest zeroTrustListsUpdateZeroTrustListRequest, final ApiCallback<ZeroTrustGatewaySingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustListsUpdateZeroTrustListValidateBeforeCall(listId, accountId, zeroTrustListsUpdateZeroTrustListRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustListsZeroTrustListDetails
     * @param listId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsZeroTrustListDetailsCall(String listId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/lists/{list_id}"
            .replace("{" + "list_id" + "}", localVarApiClient.escapeString(listId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustListsZeroTrustListDetailsValidateBeforeCall(String listId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'listId' is set
        if (listId == null) {
            throw new ApiException("Missing the required parameter 'listId' when calling zeroTrustListsZeroTrustListDetails(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustListsZeroTrustListDetails(Async)");
        }

        return zeroTrustListsZeroTrustListDetailsCall(listId, accountId, _callback);

    }

    /**
     * Get Zero Trust list details
     * Fetches a single Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewaySingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list details response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySingleResponse zeroTrustListsZeroTrustListDetails(String listId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewaySingleResponse> localVarResp = zeroTrustListsZeroTrustListDetailsWithHttpInfo(listId, accountId);
        return localVarResp.getData();
    }

    /**
     * Get Zero Trust list details
     * Fetches a single Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list details response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySingleResponse> zeroTrustListsZeroTrustListDetailsWithHttpInfo(String listId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustListsZeroTrustListDetailsValidateBeforeCall(listId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Zero Trust list details (asynchronously)
     * Fetches a single Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsZeroTrustListDetailsAsync(String listId, Object accountId, final ApiCallback<ZeroTrustGatewaySingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustListsZeroTrustListDetailsValidateBeforeCall(listId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustListsZeroTrustListItems
     * @param listId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list items response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list items response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsZeroTrustListItemsCall(String listId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/lists/{list_id}/items"
            .replace("{" + "list_id" + "}", localVarApiClient.escapeString(listId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustListsZeroTrustListItemsValidateBeforeCall(String listId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'listId' is set
        if (listId == null) {
            throw new ApiException("Missing the required parameter 'listId' when calling zeroTrustListsZeroTrustListItems(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustListsZeroTrustListItems(Async)");
        }

        return zeroTrustListsZeroTrustListItemsCall(listId, accountId, _callback);

    }

    /**
     * Get Zero Trust list items
     * Fetches all items in a single Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewayListItemResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list items response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list items response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayListItemResponseCollection zeroTrustListsZeroTrustListItems(String listId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayListItemResponseCollection> localVarResp = zeroTrustListsZeroTrustListItemsWithHttpInfo(listId, accountId);
        return localVarResp.getData();
    }

    /**
     * Get Zero Trust list items
     * Fetches all items in a single Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayListItemResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list items response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list items response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayListItemResponseCollection> zeroTrustListsZeroTrustListItemsWithHttpInfo(String listId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustListsZeroTrustListItemsValidateBeforeCall(listId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayListItemResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Zero Trust list items (asynchronously)
     * Fetches all items in a single Zero Trust list.
     * @param listId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust list items response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust list items response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustListsZeroTrustListItemsAsync(String listId, Object accountId, final ApiCallback<ZeroTrustGatewayListItemResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustListsZeroTrustListItemsValidateBeforeCall(listId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayListItemResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
