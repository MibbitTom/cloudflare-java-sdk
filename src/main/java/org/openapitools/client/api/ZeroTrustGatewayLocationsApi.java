/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ZeroTrustGatewayEmptyResponse;
import org.openapitools.client.model.ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocation4XXResponse;
import org.openapitools.client.model.ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest;
import org.openapitools.client.model.ZeroTrustGatewayLocationsListZeroTrustGatewayLocations4XXResponse;
import org.openapitools.client.model.ZeroTrustGatewaySchemasResponseCollection;
import org.openapitools.client.model.ZeroTrustGatewaySchemasSingleResponse;
import org.openapitools.client.model.ZeroTrustListsDeleteZeroTrustList4XXResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZeroTrustGatewayLocationsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ZeroTrustGatewayLocationsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ZeroTrustGatewayLocationsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for zeroTrustGatewayLocationsCreateZeroTrustGatewayLocation
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationCall(Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/locations"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationValidateBeforeCall(Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayLocationsCreateZeroTrustGatewayLocation(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest' is set
        if (zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest' when calling zeroTrustGatewayLocationsCreateZeroTrustGatewayLocation(Async)");
        }

        return zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationCall(accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, _callback);

    }

    /**
     * Create a Zero Trust Gateway location
     * Creates a new Zero Trust Gateway location.
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @return ZeroTrustGatewaySchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySchemasSingleResponse zeroTrustGatewayLocationsCreateZeroTrustGatewayLocation(Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewaySchemasSingleResponse> localVarResp = zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationWithHttpInfo(accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest);
        return localVarResp.getData();
    }

    /**
     * Create a Zero Trust Gateway location
     * Creates a new Zero Trust Gateway location.
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySchemasSingleResponse> zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationWithHttpInfo(Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationValidateBeforeCall(accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a Zero Trust Gateway location (asynchronously)
     * Creates a new Zero Trust Gateway location.
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationAsync(Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, final ApiCallback<ZeroTrustGatewaySchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationValidateBeforeCall(accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocation
     * @param locationId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationCall(Object locationId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/locations/{location_id}"
            .replace("{" + "location_id" + "}", localVarApiClient.escapeString(locationId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationValidateBeforeCall(Object locationId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'locationId' is set
        if (locationId == null) {
            throw new ApiException("Missing the required parameter 'locationId' when calling zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocation(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocation(Async)");
        }

        return zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationCall(locationId, accountId, _callback);

    }

    /**
     * Delete a Zero Trust Gateway location
     * Deletes a configured Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewayEmptyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayEmptyResponse zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocation(Object locationId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayEmptyResponse> localVarResp = zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationWithHttpInfo(locationId, accountId);
        return localVarResp.getData();
    }

    /**
     * Delete a Zero Trust Gateway location
     * Deletes a configured Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayEmptyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayEmptyResponse> zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationWithHttpInfo(Object locationId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationValidateBeforeCall(locationId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete a Zero Trust Gateway location (asynchronously)
     * Deletes a configured Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationAsync(Object locationId, Object accountId, final ApiCallback<ZeroTrustGatewayEmptyResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayLocationsDeleteZeroTrustGatewayLocationValidateBeforeCall(locationId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayLocationsListZeroTrustGatewayLocations
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway locations response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway locations response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsListZeroTrustGatewayLocationsCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/locations"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayLocationsListZeroTrustGatewayLocationsValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayLocationsListZeroTrustGatewayLocations(Async)");
        }

        return zeroTrustGatewayLocationsListZeroTrustGatewayLocationsCall(accountId, _callback);

    }

    /**
     * List Zero Trust Gateway locations
     * Fetches Zero Trust Gateway locations for an account.
     * @param accountId  (required)
     * @return ZeroTrustGatewaySchemasResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway locations response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway locations response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySchemasResponseCollection zeroTrustGatewayLocationsListZeroTrustGatewayLocations(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewaySchemasResponseCollection> localVarResp = zeroTrustGatewayLocationsListZeroTrustGatewayLocationsWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * List Zero Trust Gateway locations
     * Fetches Zero Trust Gateway locations for an account.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySchemasResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway locations response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway locations response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySchemasResponseCollection> zeroTrustGatewayLocationsListZeroTrustGatewayLocationsWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayLocationsListZeroTrustGatewayLocationsValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Zero Trust Gateway locations (asynchronously)
     * Fetches Zero Trust Gateway locations for an account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway locations response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway locations response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsListZeroTrustGatewayLocationsAsync(Object accountId, final ApiCallback<ZeroTrustGatewaySchemasResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayLocationsListZeroTrustGatewayLocationsValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocation
     * @param locationId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationCall(Object locationId, Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/locations/{location_id}"
            .replace("{" + "location_id" + "}", localVarApiClient.escapeString(locationId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationValidateBeforeCall(Object locationId, Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'locationId' is set
        if (locationId == null) {
            throw new ApiException("Missing the required parameter 'locationId' when calling zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocation(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocation(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest' is set
        if (zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest' when calling zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocation(Async)");
        }

        return zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationCall(locationId, accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, _callback);

    }

    /**
     * Update a Zero Trust Gateway location
     * Updates a configured Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @return ZeroTrustGatewaySchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySchemasSingleResponse zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocation(Object locationId, Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewaySchemasSingleResponse> localVarResp = zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationWithHttpInfo(locationId, accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest);
        return localVarResp.getData();
    }

    /**
     * Update a Zero Trust Gateway location
     * Updates a configured Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySchemasSingleResponse> zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationWithHttpInfo(Object locationId, Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationValidateBeforeCall(locationId, accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update a Zero Trust Gateway location (asynchronously)
     * Updates a configured Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway location response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway location response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationAsync(Object locationId, Object accountId, ZeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, final ApiCallback<ZeroTrustGatewaySchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayLocationsUpdateZeroTrustGatewayLocationValidateBeforeCall(locationId, accountId, zeroTrustGatewayLocationsCreateZeroTrustGatewayLocationRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayLocationsZeroTrustGatewayLocationDetails
     * @param locationId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway location details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway location details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsCall(Object locationId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/locations/{location_id}"
            .replace("{" + "location_id" + "}", localVarApiClient.escapeString(locationId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsValidateBeforeCall(Object locationId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'locationId' is set
        if (locationId == null) {
            throw new ApiException("Missing the required parameter 'locationId' when calling zeroTrustGatewayLocationsZeroTrustGatewayLocationDetails(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayLocationsZeroTrustGatewayLocationDetails(Async)");
        }

        return zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsCall(locationId, accountId, _callback);

    }

    /**
     * Get Zero Trust Gateway location details
     * Fetches a single Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewaySchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway location details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway location details response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewaySchemasSingleResponse zeroTrustGatewayLocationsZeroTrustGatewayLocationDetails(Object locationId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewaySchemasSingleResponse> localVarResp = zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsWithHttpInfo(locationId, accountId);
        return localVarResp.getData();
    }

    /**
     * Get Zero Trust Gateway location details
     * Fetches a single Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewaySchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway location details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway location details response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewaySchemasSingleResponse> zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsWithHttpInfo(Object locationId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsValidateBeforeCall(locationId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Zero Trust Gateway location details (asynchronously)
     * Fetches a single Zero Trust Gateway location.
     * @param locationId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway location details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway location details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsAsync(Object locationId, Object accountId, final ApiCallback<ZeroTrustGatewaySchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayLocationsZeroTrustGatewayLocationDetailsValidateBeforeCall(locationId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewaySchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
