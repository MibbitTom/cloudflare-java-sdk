/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ApiShieldApiResponseCommonFailure;
import org.openapitools.client.model.ApiShieldBasicOperation;
import org.openapitools.client.model.ApiShieldCollectionResponse;
import org.openapitools.client.model.ApiShieldCollectionResponsePaginated;
import org.openapitools.client.model.ApiShieldDefaultResponse;
import org.openapitools.client.model.ApiShieldEndpointManagementAddOperationsToAZone4XXResponse;
import org.openapitools.client.model.ApiShieldEndpointManagementRetrieveInformationAboutAnOperation4XXResponse;
import org.openapitools.client.model.ApiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemas4XXResponse;
import org.openapitools.client.model.ApiShieldSchemaResponseWithThresholds;
import org.openapitools.client.model.ApiShieldSchemasSingleResponse;
import org.openapitools.client.model.ApiShieldSettingsSetConfigurationProperties4XXResponse;
import java.math.BigDecimal;
import java.util.Set;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ApiShieldEndpointManagementApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ApiShieldEndpointManagementApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ApiShieldEndpointManagementApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for apiShieldEndpointManagementAddOperationsToAZone
     * @param zoneId  (required)
     * @param apiShieldBasicOperation  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Add operations to a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Add operations to a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementAddOperationsToAZoneCall(String zoneId, List<ApiShieldBasicOperation> apiShieldBasicOperation, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = apiShieldBasicOperation;

        // create path and map variables
        String localVarPath = "/zones/{zone_id}/api_gateway/operations"
            .replace("{" + "zone_id" + "}", localVarApiClient.escapeString(zoneId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiShieldEndpointManagementAddOperationsToAZoneValidateBeforeCall(String zoneId, List<ApiShieldBasicOperation> apiShieldBasicOperation, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneId' is set
        if (zoneId == null) {
            throw new ApiException("Missing the required parameter 'zoneId' when calling apiShieldEndpointManagementAddOperationsToAZone(Async)");
        }

        // verify the required parameter 'apiShieldBasicOperation' is set
        if (apiShieldBasicOperation == null) {
            throw new ApiException("Missing the required parameter 'apiShieldBasicOperation' when calling apiShieldEndpointManagementAddOperationsToAZone(Async)");
        }

        return apiShieldEndpointManagementAddOperationsToAZoneCall(zoneId, apiShieldBasicOperation, _callback);

    }

    /**
     * Add operations to a zone
     * Add one or more operations to a zone. Endpoints can contain path variables. Host, method, endpoint will be normalized to a canoncial form when creating an operation and must be unique on the zone. Inserting an operation that matches an existing one will return the record of the already existing operation and update its last_updated date.
     * @param zoneId  (required)
     * @param apiShieldBasicOperation  (required)
     * @return ApiShieldCollectionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Add operations to a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Add operations to a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiShieldCollectionResponse apiShieldEndpointManagementAddOperationsToAZone(String zoneId, List<ApiShieldBasicOperation> apiShieldBasicOperation) throws ApiException {
        ApiResponse<ApiShieldCollectionResponse> localVarResp = apiShieldEndpointManagementAddOperationsToAZoneWithHttpInfo(zoneId, apiShieldBasicOperation);
        return localVarResp.getData();
    }

    /**
     * Add operations to a zone
     * Add one or more operations to a zone. Endpoints can contain path variables. Host, method, endpoint will be normalized to a canoncial form when creating an operation and must be unique on the zone. Inserting an operation that matches an existing one will return the record of the already existing operation and update its last_updated date.
     * @param zoneId  (required)
     * @param apiShieldBasicOperation  (required)
     * @return ApiResponse&lt;ApiShieldCollectionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Add operations to a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Add operations to a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiShieldCollectionResponse> apiShieldEndpointManagementAddOperationsToAZoneWithHttpInfo(String zoneId, List<ApiShieldBasicOperation> apiShieldBasicOperation) throws ApiException {
        okhttp3.Call localVarCall = apiShieldEndpointManagementAddOperationsToAZoneValidateBeforeCall(zoneId, apiShieldBasicOperation, null);
        Type localVarReturnType = new TypeToken<ApiShieldCollectionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Add operations to a zone (asynchronously)
     * Add one or more operations to a zone. Endpoints can contain path variables. Host, method, endpoint will be normalized to a canoncial form when creating an operation and must be unique on the zone. Inserting an operation that matches an existing one will return the record of the already existing operation and update its last_updated date.
     * @param zoneId  (required)
     * @param apiShieldBasicOperation  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Add operations to a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Add operations to a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementAddOperationsToAZoneAsync(String zoneId, List<ApiShieldBasicOperation> apiShieldBasicOperation, final ApiCallback<ApiShieldCollectionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiShieldEndpointManagementAddOperationsToAZoneValidateBeforeCall(zoneId, apiShieldBasicOperation, _callback);
        Type localVarReturnType = new TypeToken<ApiShieldCollectionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiShieldEndpointManagementDeleteAnOperation
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementDeleteAnOperationCall(String zoneId, UUID operationId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/zones/{zone_id}/api_gateway/operations/{operation_id}"
            .replace("{" + "zone_id" + "}", localVarApiClient.escapeString(zoneId.toString()))
            .replace("{" + "operation_id" + "}", localVarApiClient.escapeString(operationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiShieldEndpointManagementDeleteAnOperationValidateBeforeCall(String zoneId, UUID operationId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneId' is set
        if (zoneId == null) {
            throw new ApiException("Missing the required parameter 'zoneId' when calling apiShieldEndpointManagementDeleteAnOperation(Async)");
        }

        // verify the required parameter 'operationId' is set
        if (operationId == null) {
            throw new ApiException("Missing the required parameter 'operationId' when calling apiShieldEndpointManagementDeleteAnOperation(Async)");
        }

        return apiShieldEndpointManagementDeleteAnOperationCall(zoneId, operationId, _callback);

    }

    /**
     * Delete an operation
     * 
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @return ApiShieldDefaultResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiShieldDefaultResponse apiShieldEndpointManagementDeleteAnOperation(String zoneId, UUID operationId) throws ApiException {
        ApiResponse<ApiShieldDefaultResponse> localVarResp = apiShieldEndpointManagementDeleteAnOperationWithHttpInfo(zoneId, operationId);
        return localVarResp.getData();
    }

    /**
     * Delete an operation
     * 
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @return ApiResponse&lt;ApiShieldDefaultResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiShieldDefaultResponse> apiShieldEndpointManagementDeleteAnOperationWithHttpInfo(String zoneId, UUID operationId) throws ApiException {
        okhttp3.Call localVarCall = apiShieldEndpointManagementDeleteAnOperationValidateBeforeCall(zoneId, operationId, null);
        Type localVarReturnType = new TypeToken<ApiShieldDefaultResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete an operation (asynchronously)
     * 
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementDeleteAnOperationAsync(String zoneId, UUID operationId, final ApiCallback<ApiShieldDefaultResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiShieldEndpointManagementDeleteAnOperationValidateBeforeCall(zoneId, operationId, _callback);
        Type localVarReturnType = new TypeToken<ApiShieldDefaultResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZone
     * @param zoneId  (required)
     * @param page Page number of paginated results. (optional, default to 1)
     * @param perPage Number of results to return per page (optional, default to 20)
     * @param order  (optional)
     * @param direction  (optional)
     * @param host  (optional)
     * @param method  (optional)
     * @param endpoint  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about all operations on a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about all operations on a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneCall(String zoneId, Object page, BigDecimal perPage, String order, String direction, Set<String> host, Set<String> method, String endpoint, Set<String> feature, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/zones/{zone_id}/api_gateway/operations"
            .replace("{" + "zone_id" + "}", localVarApiClient.escapeString(zoneId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (order != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("order", order));
        }

        if (direction != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("direction", direction));
        }

        if (host != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "host", host));
        }

        if (method != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "method", method));
        }

        if (endpoint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endpoint", endpoint));
        }

        if (feature != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "feature", feature));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneValidateBeforeCall(String zoneId, Object page, BigDecimal perPage, String order, String direction, Set<String> host, Set<String> method, String endpoint, Set<String> feature, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneId' is set
        if (zoneId == null) {
            throw new ApiException("Missing the required parameter 'zoneId' when calling apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZone(Async)");
        }

        return apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneCall(zoneId, page, perPage, order, direction, host, method, endpoint, feature, _callback);

    }

    /**
     * Retrieve information about all operations on a zone
     * 
     * @param zoneId  (required)
     * @param page Page number of paginated results. (optional, default to 1)
     * @param perPage Number of results to return per page (optional, default to 20)
     * @param order  (optional)
     * @param direction  (optional)
     * @param host  (optional)
     * @param method  (optional)
     * @param endpoint  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @return ApiShieldCollectionResponsePaginated
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about all operations on a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about all operations on a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiShieldCollectionResponsePaginated apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZone(String zoneId, Object page, BigDecimal perPage, String order, String direction, Set<String> host, Set<String> method, String endpoint, Set<String> feature) throws ApiException {
        ApiResponse<ApiShieldCollectionResponsePaginated> localVarResp = apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneWithHttpInfo(zoneId, page, perPage, order, direction, host, method, endpoint, feature);
        return localVarResp.getData();
    }

    /**
     * Retrieve information about all operations on a zone
     * 
     * @param zoneId  (required)
     * @param page Page number of paginated results. (optional, default to 1)
     * @param perPage Number of results to return per page (optional, default to 20)
     * @param order  (optional)
     * @param direction  (optional)
     * @param host  (optional)
     * @param method  (optional)
     * @param endpoint  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @return ApiResponse&lt;ApiShieldCollectionResponsePaginated&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about all operations on a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about all operations on a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiShieldCollectionResponsePaginated> apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneWithHttpInfo(String zoneId, Object page, BigDecimal perPage, String order, String direction, Set<String> host, Set<String> method, String endpoint, Set<String> feature) throws ApiException {
        okhttp3.Call localVarCall = apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneValidateBeforeCall(zoneId, page, perPage, order, direction, host, method, endpoint, feature, null);
        Type localVarReturnType = new TypeToken<ApiShieldCollectionResponsePaginated>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve information about all operations on a zone (asynchronously)
     * 
     * @param zoneId  (required)
     * @param page Page number of paginated results. (optional, default to 1)
     * @param perPage Number of results to return per page (optional, default to 20)
     * @param order  (optional)
     * @param direction  (optional)
     * @param host  (optional)
     * @param method  (optional)
     * @param endpoint  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about all operations on a zone response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about all operations on a zone response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneAsync(String zoneId, Object page, BigDecimal perPage, String order, String direction, Set<String> host, Set<String> method, String endpoint, Set<String> feature, final ApiCallback<ApiShieldCollectionResponsePaginated> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiShieldEndpointManagementRetrieveInformationAboutAllOperationsOnAZoneValidateBeforeCall(zoneId, page, perPage, order, direction, host, method, endpoint, feature, _callback);
        Type localVarReturnType = new TypeToken<ApiShieldCollectionResponsePaginated>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiShieldEndpointManagementRetrieveInformationAboutAnOperation
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementRetrieveInformationAboutAnOperationCall(String zoneId, UUID operationId, Set<String> feature, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/zones/{zone_id}/api_gateway/operations/{operation_id}"
            .replace("{" + "zone_id" + "}", localVarApiClient.escapeString(zoneId.toString()))
            .replace("{" + "operation_id" + "}", localVarApiClient.escapeString(operationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (feature != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "feature", feature));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiShieldEndpointManagementRetrieveInformationAboutAnOperationValidateBeforeCall(String zoneId, UUID operationId, Set<String> feature, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneId' is set
        if (zoneId == null) {
            throw new ApiException("Missing the required parameter 'zoneId' when calling apiShieldEndpointManagementRetrieveInformationAboutAnOperation(Async)");
        }

        // verify the required parameter 'operationId' is set
        if (operationId == null) {
            throw new ApiException("Missing the required parameter 'operationId' when calling apiShieldEndpointManagementRetrieveInformationAboutAnOperation(Async)");
        }

        return apiShieldEndpointManagementRetrieveInformationAboutAnOperationCall(zoneId, operationId, feature, _callback);

    }

    /**
     * Retrieve information about an operation
     * 
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @return ApiShieldSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiShieldSchemasSingleResponse apiShieldEndpointManagementRetrieveInformationAboutAnOperation(String zoneId, UUID operationId, Set<String> feature) throws ApiException {
        ApiResponse<ApiShieldSchemasSingleResponse> localVarResp = apiShieldEndpointManagementRetrieveInformationAboutAnOperationWithHttpInfo(zoneId, operationId, feature);
        return localVarResp.getData();
    }

    /**
     * Retrieve information about an operation
     * 
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @return ApiResponse&lt;ApiShieldSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiShieldSchemasSingleResponse> apiShieldEndpointManagementRetrieveInformationAboutAnOperationWithHttpInfo(String zoneId, UUID operationId, Set<String> feature) throws ApiException {
        okhttp3.Call localVarCall = apiShieldEndpointManagementRetrieveInformationAboutAnOperationValidateBeforeCall(zoneId, operationId, feature, null);
        Type localVarReturnType = new TypeToken<ApiShieldSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve information about an operation (asynchronously)
     * 
     * @param zoneId  (required)
     * @param operationId Identifier for the operation (required)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about an operation response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about an operation response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementRetrieveInformationAboutAnOperationAsync(String zoneId, UUID operationId, Set<String> feature, final ApiCallback<ApiShieldSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiShieldEndpointManagementRetrieveInformationAboutAnOperationValidateBeforeCall(zoneId, operationId, feature, _callback);
        Type localVarReturnType = new TypeToken<ApiShieldSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemas
     * @param zoneId  (required)
     * @param host  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve operations and features as OpenAPI schemas response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve operations and features as OpenAPI schemas response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasCall(String zoneId, Set<String> host, Set<String> feature, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/zones/{zone_id}/api_gateway/schemas"
            .replace("{" + "zone_id" + "}", localVarApiClient.escapeString(zoneId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (host != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "host", host));
        }

        if (feature != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "feature", feature));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasValidateBeforeCall(String zoneId, Set<String> host, Set<String> feature, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneId' is set
        if (zoneId == null) {
            throw new ApiException("Missing the required parameter 'zoneId' when calling apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemas(Async)");
        }

        return apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasCall(zoneId, host, feature, _callback);

    }

    /**
     * Retrieve operations and features as OpenAPI schemas
     * 
     * @param zoneId  (required)
     * @param host  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @return ApiShieldSchemaResponseWithThresholds
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve operations and features as OpenAPI schemas response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve operations and features as OpenAPI schemas response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiShieldSchemaResponseWithThresholds apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemas(String zoneId, Set<String> host, Set<String> feature) throws ApiException {
        ApiResponse<ApiShieldSchemaResponseWithThresholds> localVarResp = apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasWithHttpInfo(zoneId, host, feature);
        return localVarResp.getData();
    }

    /**
     * Retrieve operations and features as OpenAPI schemas
     * 
     * @param zoneId  (required)
     * @param host  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @return ApiResponse&lt;ApiShieldSchemaResponseWithThresholds&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve operations and features as OpenAPI schemas response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve operations and features as OpenAPI schemas response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiShieldSchemaResponseWithThresholds> apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasWithHttpInfo(String zoneId, Set<String> host, Set<String> feature) throws ApiException {
        okhttp3.Call localVarCall = apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasValidateBeforeCall(zoneId, host, feature, null);
        Type localVarReturnType = new TypeToken<ApiShieldSchemaResponseWithThresholds>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve operations and features as OpenAPI schemas (asynchronously)
     * 
     * @param zoneId  (required)
     * @param host  (optional)
     * @param feature Add feature(s) to the results. The feature name that is given here corresponds to the resulting feature object. Have a look at the top-level object description for more details on the specific meaning. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve operations and features as OpenAPI schemas response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve operations and features as OpenAPI schemas response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasAsync(String zoneId, Set<String> host, Set<String> feature, final ApiCallback<ApiShieldSchemaResponseWithThresholds> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiShieldEndpointManagementRetrieveOperationsAndFeaturesAsOpenApiSchemasValidateBeforeCall(zoneId, host, feature, _callback);
        Type localVarReturnType = new TypeToken<ApiShieldSchemaResponseWithThresholds>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
