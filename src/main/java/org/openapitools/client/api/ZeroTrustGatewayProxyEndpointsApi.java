/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ZeroTrustGatewayEmptyResponse;
import org.openapitools.client.model.ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection;
import org.openapitools.client.model.ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse;
import org.openapitools.client.model.ZeroTrustGatewayProxyEndpointsCreateProxyEndpoint4XXResponse;
import org.openapitools.client.model.ZeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest;
import org.openapitools.client.model.ZeroTrustGatewayProxyEndpointsListProxyEndpoints4XXResponse;
import org.openapitools.client.model.ZeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest;
import org.openapitools.client.model.ZeroTrustListsDeleteZeroTrustList4XXResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZeroTrustGatewayProxyEndpointsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ZeroTrustGatewayProxyEndpointsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ZeroTrustGatewayProxyEndpointsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for zeroTrustGatewayProxyEndpointsCreateProxyEndpoint
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsCreateProxyEndpointCall(Object accountId, ZeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/proxy_endpoints"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayProxyEndpointsCreateProxyEndpointValidateBeforeCall(Object accountId, ZeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayProxyEndpointsCreateProxyEndpoint(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest' is set
        if (zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest' when calling zeroTrustGatewayProxyEndpointsCreateProxyEndpoint(Async)");
        }

        return zeroTrustGatewayProxyEndpointsCreateProxyEndpointCall(accountId, zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest, _callback);

    }

    /**
     * Create a proxy endpoint
     * Creates a new Zero Trust Gateway proxy endpoint.
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest  (required)
     * @return ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse zeroTrustGatewayProxyEndpointsCreateProxyEndpoint(Object accountId, ZeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> localVarResp = zeroTrustGatewayProxyEndpointsCreateProxyEndpointWithHttpInfo(accountId, zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest);
        return localVarResp.getData();
    }

    /**
     * Create a proxy endpoint
     * Creates a new Zero Trust Gateway proxy endpoint.
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> zeroTrustGatewayProxyEndpointsCreateProxyEndpointWithHttpInfo(Object accountId, ZeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsCreateProxyEndpointValidateBeforeCall(accountId, zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a proxy endpoint (asynchronously)
     * Creates a new Zero Trust Gateway proxy endpoint.
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsCreateProxyEndpointAsync(Object accountId, ZeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest, final ApiCallback<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsCreateProxyEndpointValidateBeforeCall(accountId, zeroTrustGatewayProxyEndpointsCreateProxyEndpointRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayProxyEndpointsDeleteProxyEndpoint
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsDeleteProxyEndpointCall(Object proxyEndpointId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/proxy_endpoints/{proxy_endpoint_id}"
            .replace("{" + "proxy_endpoint_id" + "}", localVarApiClient.escapeString(proxyEndpointId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayProxyEndpointsDeleteProxyEndpointValidateBeforeCall(Object proxyEndpointId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'proxyEndpointId' is set
        if (proxyEndpointId == null) {
            throw new ApiException("Missing the required parameter 'proxyEndpointId' when calling zeroTrustGatewayProxyEndpointsDeleteProxyEndpoint(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayProxyEndpointsDeleteProxyEndpoint(Async)");
        }

        return zeroTrustGatewayProxyEndpointsDeleteProxyEndpointCall(proxyEndpointId, accountId, _callback);

    }

    /**
     * Delete a proxy endpoint
     * Deletes a configured Zero Trust Gateway proxy endpoint.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewayEmptyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayEmptyResponse zeroTrustGatewayProxyEndpointsDeleteProxyEndpoint(Object proxyEndpointId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayEmptyResponse> localVarResp = zeroTrustGatewayProxyEndpointsDeleteProxyEndpointWithHttpInfo(proxyEndpointId, accountId);
        return localVarResp.getData();
    }

    /**
     * Delete a proxy endpoint
     * Deletes a configured Zero Trust Gateway proxy endpoint.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayEmptyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayEmptyResponse> zeroTrustGatewayProxyEndpointsDeleteProxyEndpointWithHttpInfo(Object proxyEndpointId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsDeleteProxyEndpointValidateBeforeCall(proxyEndpointId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete a proxy endpoint (asynchronously)
     * Deletes a configured Zero Trust Gateway proxy endpoint.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsDeleteProxyEndpointAsync(Object proxyEndpointId, Object accountId, final ApiCallback<ZeroTrustGatewayEmptyResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsDeleteProxyEndpointValidateBeforeCall(proxyEndpointId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayProxyEndpointsListProxyEndpoints
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsListProxyEndpointsCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/proxy_endpoints"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayProxyEndpointsListProxyEndpointsValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayProxyEndpointsListProxyEndpoints(Async)");
        }

        return zeroTrustGatewayProxyEndpointsListProxyEndpointsCall(accountId, _callback);

    }

    /**
     * Get a proxy endpoint
     * Fetches a single Zero Trust Gateway proxy endpoint.
     * @param accountId  (required)
     * @return ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection zeroTrustGatewayProxyEndpointsListProxyEndpoints(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection> localVarResp = zeroTrustGatewayProxyEndpointsListProxyEndpointsWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * Get a proxy endpoint
     * Fetches a single Zero Trust Gateway proxy endpoint.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection> zeroTrustGatewayProxyEndpointsListProxyEndpointsWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsListProxyEndpointsValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a proxy endpoint (asynchronously)
     * Fetches a single Zero Trust Gateway proxy endpoint.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsListProxyEndpointsAsync(Object accountId, final ApiCallback<ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsListProxyEndpointsValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayProxyEndpointsProxyEndpointDetails
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List proxy endpoints response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List proxy endpoints response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsProxyEndpointDetailsCall(Object proxyEndpointId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/proxy_endpoints/{proxy_endpoint_id}"
            .replace("{" + "proxy_endpoint_id" + "}", localVarApiClient.escapeString(proxyEndpointId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayProxyEndpointsProxyEndpointDetailsValidateBeforeCall(Object proxyEndpointId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'proxyEndpointId' is set
        if (proxyEndpointId == null) {
            throw new ApiException("Missing the required parameter 'proxyEndpointId' when calling zeroTrustGatewayProxyEndpointsProxyEndpointDetails(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayProxyEndpointsProxyEndpointDetails(Async)");
        }

        return zeroTrustGatewayProxyEndpointsProxyEndpointDetailsCall(proxyEndpointId, accountId, _callback);

    }

    /**
     * List proxy endpoints
     * Fetches all Zero Trust Gateway proxy endpoints for an account.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List proxy endpoints response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List proxy endpoints response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse zeroTrustGatewayProxyEndpointsProxyEndpointDetails(Object proxyEndpointId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> localVarResp = zeroTrustGatewayProxyEndpointsProxyEndpointDetailsWithHttpInfo(proxyEndpointId, accountId);
        return localVarResp.getData();
    }

    /**
     * List proxy endpoints
     * Fetches all Zero Trust Gateway proxy endpoints for an account.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List proxy endpoints response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List proxy endpoints response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> zeroTrustGatewayProxyEndpointsProxyEndpointDetailsWithHttpInfo(Object proxyEndpointId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsProxyEndpointDetailsValidateBeforeCall(proxyEndpointId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List proxy endpoints (asynchronously)
     * Fetches all Zero Trust Gateway proxy endpoints for an account.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List proxy endpoints response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List proxy endpoints response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsProxyEndpointDetailsAsync(Object proxyEndpointId, Object accountId, final ApiCallback<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsProxyEndpointDetailsValidateBeforeCall(proxyEndpointId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayProxyEndpointsUpdateProxyEndpoint
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsUpdateProxyEndpointCall(Object proxyEndpointId, Object accountId, ZeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/proxy_endpoints/{proxy_endpoint_id}"
            .replace("{" + "proxy_endpoint_id" + "}", localVarApiClient.escapeString(proxyEndpointId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayProxyEndpointsUpdateProxyEndpointValidateBeforeCall(Object proxyEndpointId, Object accountId, ZeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'proxyEndpointId' is set
        if (proxyEndpointId == null) {
            throw new ApiException("Missing the required parameter 'proxyEndpointId' when calling zeroTrustGatewayProxyEndpointsUpdateProxyEndpoint(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayProxyEndpointsUpdateProxyEndpoint(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest' is set
        if (zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest' when calling zeroTrustGatewayProxyEndpointsUpdateProxyEndpoint(Async)");
        }

        return zeroTrustGatewayProxyEndpointsUpdateProxyEndpointCall(proxyEndpointId, accountId, zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest, _callback);

    }

    /**
     * Update a proxy endpoint
     * Updates a configured Zero Trust Gateway proxy endpoint.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest  (required)
     * @return ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse zeroTrustGatewayProxyEndpointsUpdateProxyEndpoint(Object proxyEndpointId, Object accountId, ZeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> localVarResp = zeroTrustGatewayProxyEndpointsUpdateProxyEndpointWithHttpInfo(proxyEndpointId, accountId, zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest);
        return localVarResp.getData();
    }

    /**
     * Update a proxy endpoint
     * Updates a configured Zero Trust Gateway proxy endpoint.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> zeroTrustGatewayProxyEndpointsUpdateProxyEndpointWithHttpInfo(Object proxyEndpointId, Object accountId, ZeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsUpdateProxyEndpointValidateBeforeCall(proxyEndpointId, accountId, zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update a proxy endpoint (asynchronously)
     * Updates a configured Zero Trust Gateway proxy endpoint.
     * @param proxyEndpointId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a proxy endpoint response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a proxy endpoint response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayProxyEndpointsUpdateProxyEndpointAsync(Object proxyEndpointId, Object accountId, ZeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest, final ApiCallback<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayProxyEndpointsUpdateProxyEndpointValidateBeforeCall(proxyEndpointId, accountId, zeroTrustGatewayProxyEndpointsUpdateProxyEndpointRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayProxyEndpointsComponentsSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
