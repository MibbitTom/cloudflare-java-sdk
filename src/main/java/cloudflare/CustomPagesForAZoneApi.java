/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiCallback;
import invalidPackageName.ApiClient;
import invalidPackageName.ApiException;
import invalidPackageName.ApiResponse;
import invalidPackageName.Configuration;
import invalidPackageName.Pair;
import invalidPackageName.ProgressRequestBody;
import invalidPackageName.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CustomPagesCustomPagesResponseCollection;
import org.openapitools.client.model.CustomPagesCustomPagesResponseSingle;
import org.openapitools.client.model.CustomPagesForAnAccountGetACustomPage4xxResponse;
import org.openapitools.client.model.CustomPagesForAnAccountListCustomPages4xxResponse;
import org.openapitools.client.model.CustomPagesForAnAccountUpdateACustomPageRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CustomPagesForAZoneApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CustomPagesForAZoneApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CustomPagesForAZoneApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for customPagesForAZoneGetACustomPage
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customPagesForAZoneGetACustomPageCall(String identifier, String zoneIdentifier, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/zones/{zone_identifier}/custom_pages/{identifier}"
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()))
            .replace("{" + "zone_identifier" + "}", localVarApiClient.escapeString(zoneIdentifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customPagesForAZoneGetACustomPageValidateBeforeCall(String identifier, String zoneIdentifier, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling customPagesForAZoneGetACustomPage(Async)");
        }

        // verify the required parameter 'zoneIdentifier' is set
        if (zoneIdentifier == null) {
            throw new ApiException("Missing the required parameter 'zoneIdentifier' when calling customPagesForAZoneGetACustomPage(Async)");
        }

        return customPagesForAZoneGetACustomPageCall(identifier, zoneIdentifier, _callback);

    }

    /**
     * Get a custom page
     * Fetches the details of a custom page.
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @return CustomPagesCustomPagesResponseSingle
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public CustomPagesCustomPagesResponseSingle customPagesForAZoneGetACustomPage(String identifier, String zoneIdentifier) throws ApiException {
        ApiResponse<CustomPagesCustomPagesResponseSingle> localVarResp = customPagesForAZoneGetACustomPageWithHttpInfo(identifier, zoneIdentifier);
        return localVarResp.getData();
    }

    /**
     * Get a custom page
     * Fetches the details of a custom page.
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @return ApiResponse&lt;CustomPagesCustomPagesResponseSingle&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomPagesCustomPagesResponseSingle> customPagesForAZoneGetACustomPageWithHttpInfo(String identifier, String zoneIdentifier) throws ApiException {
        okhttp3.Call localVarCall = customPagesForAZoneGetACustomPageValidateBeforeCall(identifier, zoneIdentifier, null);
        Type localVarReturnType = new TypeToken<CustomPagesCustomPagesResponseSingle>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a custom page (asynchronously)
     * Fetches the details of a custom page.
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customPagesForAZoneGetACustomPageAsync(String identifier, String zoneIdentifier, final ApiCallback<CustomPagesCustomPagesResponseSingle> _callback) throws ApiException {

        okhttp3.Call localVarCall = customPagesForAZoneGetACustomPageValidateBeforeCall(identifier, zoneIdentifier, _callback);
        Type localVarReturnType = new TypeToken<CustomPagesCustomPagesResponseSingle>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for customPagesForAZoneListCustomPages
     * @param zoneIdentifier  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customPagesForAZoneListCustomPagesCall(String zoneIdentifier, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/zones/{zone_identifier}/custom_pages"
            .replace("{" + "zone_identifier" + "}", localVarApiClient.escapeString(zoneIdentifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customPagesForAZoneListCustomPagesValidateBeforeCall(String zoneIdentifier, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneIdentifier' is set
        if (zoneIdentifier == null) {
            throw new ApiException("Missing the required parameter 'zoneIdentifier' when calling customPagesForAZoneListCustomPages(Async)");
        }

        return customPagesForAZoneListCustomPagesCall(zoneIdentifier, _callback);

    }

    /**
     * List custom pages
     * Fetches all the custom pages at the zone level.
     * @param zoneIdentifier  (required)
     * @return CustomPagesCustomPagesResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public CustomPagesCustomPagesResponseCollection customPagesForAZoneListCustomPages(String zoneIdentifier) throws ApiException {
        ApiResponse<CustomPagesCustomPagesResponseCollection> localVarResp = customPagesForAZoneListCustomPagesWithHttpInfo(zoneIdentifier);
        return localVarResp.getData();
    }

    /**
     * List custom pages
     * Fetches all the custom pages at the zone level.
     * @param zoneIdentifier  (required)
     * @return ApiResponse&lt;CustomPagesCustomPagesResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomPagesCustomPagesResponseCollection> customPagesForAZoneListCustomPagesWithHttpInfo(String zoneIdentifier) throws ApiException {
        okhttp3.Call localVarCall = customPagesForAZoneListCustomPagesValidateBeforeCall(zoneIdentifier, null);
        Type localVarReturnType = new TypeToken<CustomPagesCustomPagesResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List custom pages (asynchronously)
     * Fetches all the custom pages at the zone level.
     * @param zoneIdentifier  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customPagesForAZoneListCustomPagesAsync(String zoneIdentifier, final ApiCallback<CustomPagesCustomPagesResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = customPagesForAZoneListCustomPagesValidateBeforeCall(zoneIdentifier, _callback);
        Type localVarReturnType = new TypeToken<CustomPagesCustomPagesResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for customPagesForAZoneUpdateACustomPage
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @param customPagesForAnAccountUpdateACustomPageRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customPagesForAZoneUpdateACustomPageCall(String identifier, String zoneIdentifier, CustomPagesForAnAccountUpdateACustomPageRequest customPagesForAnAccountUpdateACustomPageRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = customPagesForAnAccountUpdateACustomPageRequest;

        // create path and map variables
        String localVarPath = "/zones/{zone_identifier}/custom_pages/{identifier}"
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()))
            .replace("{" + "zone_identifier" + "}", localVarApiClient.escapeString(zoneIdentifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customPagesForAZoneUpdateACustomPageValidateBeforeCall(String identifier, String zoneIdentifier, CustomPagesForAnAccountUpdateACustomPageRequest customPagesForAnAccountUpdateACustomPageRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling customPagesForAZoneUpdateACustomPage(Async)");
        }

        // verify the required parameter 'zoneIdentifier' is set
        if (zoneIdentifier == null) {
            throw new ApiException("Missing the required parameter 'zoneIdentifier' when calling customPagesForAZoneUpdateACustomPage(Async)");
        }

        // verify the required parameter 'customPagesForAnAccountUpdateACustomPageRequest' is set
        if (customPagesForAnAccountUpdateACustomPageRequest == null) {
            throw new ApiException("Missing the required parameter 'customPagesForAnAccountUpdateACustomPageRequest' when calling customPagesForAZoneUpdateACustomPage(Async)");
        }

        return customPagesForAZoneUpdateACustomPageCall(identifier, zoneIdentifier, customPagesForAnAccountUpdateACustomPageRequest, _callback);

    }

    /**
     * Update a custom page
     * Updates the configuration of an existing custom page.
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @param customPagesForAnAccountUpdateACustomPageRequest  (required)
     * @return CustomPagesCustomPagesResponseSingle
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public CustomPagesCustomPagesResponseSingle customPagesForAZoneUpdateACustomPage(String identifier, String zoneIdentifier, CustomPagesForAnAccountUpdateACustomPageRequest customPagesForAnAccountUpdateACustomPageRequest) throws ApiException {
        ApiResponse<CustomPagesCustomPagesResponseSingle> localVarResp = customPagesForAZoneUpdateACustomPageWithHttpInfo(identifier, zoneIdentifier, customPagesForAnAccountUpdateACustomPageRequest);
        return localVarResp.getData();
    }

    /**
     * Update a custom page
     * Updates the configuration of an existing custom page.
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @param customPagesForAnAccountUpdateACustomPageRequest  (required)
     * @return ApiResponse&lt;CustomPagesCustomPagesResponseSingle&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomPagesCustomPagesResponseSingle> customPagesForAZoneUpdateACustomPageWithHttpInfo(String identifier, String zoneIdentifier, CustomPagesForAnAccountUpdateACustomPageRequest customPagesForAnAccountUpdateACustomPageRequest) throws ApiException {
        okhttp3.Call localVarCall = customPagesForAZoneUpdateACustomPageValidateBeforeCall(identifier, zoneIdentifier, customPagesForAnAccountUpdateACustomPageRequest, null);
        Type localVarReturnType = new TypeToken<CustomPagesCustomPagesResponseSingle>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update a custom page (asynchronously)
     * Updates the configuration of an existing custom page.
     * @param identifier  (required)
     * @param zoneIdentifier  (required)
     * @param customPagesForAnAccountUpdateACustomPageRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customPagesForAZoneUpdateACustomPageAsync(String identifier, String zoneIdentifier, CustomPagesForAnAccountUpdateACustomPageRequest customPagesForAnAccountUpdateACustomPageRequest, final ApiCallback<CustomPagesCustomPagesResponseSingle> _callback) throws ApiException {

        okhttp3.Call localVarCall = customPagesForAZoneUpdateACustomPageValidateBeforeCall(identifier, zoneIdentifier, customPagesForAnAccountUpdateACustomPageRequest, _callback);
        Type localVarReturnType = new TypeToken<CustomPagesCustomPagesResponseSingle>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
