/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import cloudflare.JSON;

/**
 * TeamsDevicesTaniumConfigRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:31:20.290775906+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class TeamsDevicesTaniumConfigRequest {
  public static final String SERIALIZED_NAME_ACCESS_CLIENT_ID = "access_client_id";
  @SerializedName(SERIALIZED_NAME_ACCESS_CLIENT_ID)
  private String accessClientId;

  public static final String SERIALIZED_NAME_ACCESS_CLIENT_SECRET = "access_client_secret";
  @SerializedName(SERIALIZED_NAME_ACCESS_CLIENT_SECRET)
  private String accessClientSecret;

  public static final String SERIALIZED_NAME_API_URL = "api_url";
  @SerializedName(SERIALIZED_NAME_API_URL)
  private String apiUrl;

  public static final String SERIALIZED_NAME_CLIENT_SECRET = "client_secret";
  @SerializedName(SERIALIZED_NAME_CLIENT_SECRET)
  private String clientSecret;

  public TeamsDevicesTaniumConfigRequest() {
  }

  public TeamsDevicesTaniumConfigRequest accessClientId(String accessClientId) {
    this.accessClientId = accessClientId;
    return this;
  }

   /**
   * If present, this id will be passed in the &#x60;CF-Access-Client-ID&#x60; header when hitting the &#x60;api_url&#x60;
   * @return accessClientId
  **/
  @javax.annotation.Nullable
  public String getAccessClientId() {
    return accessClientId;
  }

  public void setAccessClientId(String accessClientId) {
    this.accessClientId = accessClientId;
  }


  public TeamsDevicesTaniumConfigRequest accessClientSecret(String accessClientSecret) {
    this.accessClientSecret = accessClientSecret;
    return this;
  }

   /**
   * If present, this secret will be passed in the &#x60;CF-Access-Client-Secret&#x60; header when hitting the &#x60;api_url&#x60;
   * @return accessClientSecret
  **/
  @javax.annotation.Nullable
  public String getAccessClientSecret() {
    return accessClientSecret;
  }

  public void setAccessClientSecret(String accessClientSecret) {
    this.accessClientSecret = accessClientSecret;
  }


  public TeamsDevicesTaniumConfigRequest apiUrl(String apiUrl) {
    this.apiUrl = apiUrl;
    return this;
  }

   /**
   * The Tanium API URL.
   * @return apiUrl
  **/
  @javax.annotation.Nonnull
  public String getApiUrl() {
    return apiUrl;
  }

  public void setApiUrl(String apiUrl) {
    this.apiUrl = apiUrl;
  }


  public TeamsDevicesTaniumConfigRequest clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * The Tanium client secret.
   * @return clientSecret
  **/
  @javax.annotation.Nonnull
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamsDevicesTaniumConfigRequest teamsDevicesTaniumConfigRequest = (TeamsDevicesTaniumConfigRequest) o;
    return Objects.equals(this.accessClientId, teamsDevicesTaniumConfigRequest.accessClientId) &&
        Objects.equals(this.accessClientSecret, teamsDevicesTaniumConfigRequest.accessClientSecret) &&
        Objects.equals(this.apiUrl, teamsDevicesTaniumConfigRequest.apiUrl) &&
        Objects.equals(this.clientSecret, teamsDevicesTaniumConfigRequest.clientSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessClientId, accessClientSecret, apiUrl, clientSecret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamsDevicesTaniumConfigRequest {\n");
    sb.append("    accessClientId: ").append(toIndentedString(accessClientId)).append("\n");
    sb.append("    accessClientSecret: ").append(toIndentedString(accessClientSecret)).append("\n");
    sb.append("    apiUrl: ").append(toIndentedString(apiUrl)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_client_id");
    openapiFields.add("access_client_secret");
    openapiFields.add("api_url");
    openapiFields.add("client_secret");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("api_url");
    openapiRequiredFields.add("client_secret");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TeamsDevicesTaniumConfigRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamsDevicesTaniumConfigRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamsDevicesTaniumConfigRequest is not found in the empty JSON string", TeamsDevicesTaniumConfigRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamsDevicesTaniumConfigRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamsDevicesTaniumConfigRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TeamsDevicesTaniumConfigRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("access_client_id") != null && !jsonObj.get("access_client_id").isJsonNull()) && !jsonObj.get("access_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_client_id").toString()));
      }
      if ((jsonObj.get("access_client_secret") != null && !jsonObj.get("access_client_secret").isJsonNull()) && !jsonObj.get("access_client_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_client_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_client_secret").toString()));
      }
      if (!jsonObj.get("api_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_url").toString()));
      }
      if (!jsonObj.get("client_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_secret").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamsDevicesTaniumConfigRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamsDevicesTaniumConfigRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamsDevicesTaniumConfigRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamsDevicesTaniumConfigRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamsDevicesTaniumConfigRequest>() {
           @Override
           public void write(JsonWriter out, TeamsDevicesTaniumConfigRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamsDevicesTaniumConfigRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TeamsDevicesTaniumConfigRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TeamsDevicesTaniumConfigRequest
  * @throws IOException if the JSON string is invalid with respect to TeamsDevicesTaniumConfigRequest
  */
  public static TeamsDevicesTaniumConfigRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamsDevicesTaniumConfigRequest.class);
  }

 /**
  * Convert an instance of TeamsDevicesTaniumConfigRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

