/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import cloudflare.JSON;

/**
 * RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:31:20.290775906+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 {
  public static final String SERIALIZED_NAME_T_L_S10 = "TLS 1.0";
  @SerializedName(SERIALIZED_NAME_T_L_S10)
  private String TLS_1_0;

  public static final String SERIALIZED_NAME_T_L_S11 = "TLS 1.1";
  @SerializedName(SERIALIZED_NAME_T_L_S11)
  private String TLS_1_1;

  public static final String SERIALIZED_NAME_T_L_S12 = "TLS 1.2";
  @SerializedName(SERIALIZED_NAME_T_L_S12)
  private String TLS_1_2;

  public static final String SERIALIZED_NAME_T_L_S13 = "TLS 1.3";
  @SerializedName(SERIALIZED_NAME_T_L_S13)
  private String TLS_1_3;

  public RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0() {
  }

  public RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 TLS_1_0(String TLS_1_0) {
    this.TLS_1_0 = TLS_1_0;
    return this;
  }

   /**
   * Get TLS_1_0
   * @return TLS_1_0
  **/
  @javax.annotation.Nonnull
  public String getTLS10() {
    return TLS_1_0;
  }

  public void setTLS10(String TLS_1_0) {
    this.TLS_1_0 = TLS_1_0;
  }


  public RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 TLS_1_1(String TLS_1_1) {
    this.TLS_1_1 = TLS_1_1;
    return this;
  }

   /**
   * Get TLS_1_1
   * @return TLS_1_1
  **/
  @javax.annotation.Nonnull
  public String getTLS11() {
    return TLS_1_1;
  }

  public void setTLS11(String TLS_1_1) {
    this.TLS_1_1 = TLS_1_1;
  }


  public RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 TLS_1_2(String TLS_1_2) {
    this.TLS_1_2 = TLS_1_2;
    return this;
  }

   /**
   * Get TLS_1_2
   * @return TLS_1_2
  **/
  @javax.annotation.Nonnull
  public String getTLS12() {
    return TLS_1_2;
  }

  public void setTLS12(String TLS_1_2) {
    this.TLS_1_2 = TLS_1_2;
  }


  public RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 TLS_1_3(String TLS_1_3) {
    this.TLS_1_3 = TLS_1_3;
    return this;
  }

   /**
   * Get TLS_1_3
   * @return TLS_1_3
  **/
  @javax.annotation.Nonnull
  public String getTLS13() {
    return TLS_1_3;
  }

  public void setTLS13(String TLS_1_3) {
    this.TLS_1_3 = TLS_1_3;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 radarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 = (RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0) o;
    return Objects.equals(this.TLS_1_0, radarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.TLS_1_0) &&
        Objects.equals(this.TLS_1_1, radarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.TLS_1_1) &&
        Objects.equals(this.TLS_1_2, radarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.TLS_1_2) &&
        Objects.equals(this.TLS_1_3, radarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.TLS_1_3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(TLS_1_0, TLS_1_1, TLS_1_2, TLS_1_3);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 {\n");
    sb.append("    TLS_1_0: ").append(toIndentedString(TLS_1_0)).append("\n");
    sb.append("    TLS_1_1: ").append(toIndentedString(TLS_1_1)).append("\n");
    sb.append("    TLS_1_2: ").append(toIndentedString(TLS_1_2)).append("\n");
    sb.append("    TLS_1_3: ").append(toIndentedString(TLS_1_3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TLS 1.0");
    openapiFields.add("TLS 1.1");
    openapiFields.add("TLS 1.2");
    openapiFields.add("TLS 1.3");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TLS 1.0");
    openapiRequiredFields.add("TLS 1.1");
    openapiRequiredFields.add("TLS 1.2");
    openapiRequiredFields.add("TLS 1.3");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 is not found in the empty JSON string", RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("TLS 1.0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TLS 1.0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TLS 1.0").toString()));
      }
      if (!jsonObj.get("TLS 1.1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TLS 1.1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TLS 1.1").toString()));
      }
      if (!jsonObj.get("TLS 1.2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TLS 1.2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TLS 1.2").toString()));
      }
      if (!jsonObj.get("TLS 1.3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TLS 1.3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TLS 1.3").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.class));

       return (TypeAdapter<T>) new TypeAdapter<RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0>() {
           @Override
           public void write(JsonWriter out, RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0
  * @throws IOException if the JSON string is invalid with respect to RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0
  */
  public static RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0.class);
  }

 /**
  * Convert an instance of RadarGetEmailSecuritySummaryByTlsVersion200ResponseResultSummary0 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

