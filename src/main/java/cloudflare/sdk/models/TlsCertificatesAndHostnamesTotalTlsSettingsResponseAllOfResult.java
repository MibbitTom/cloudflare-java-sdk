/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesComponentsSchemasCertificateAuthority;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesSchemasValidityDays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult
 */
@JsonPropertyOrder({
  TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult.JSON_PROPERTY_CERTIFICATE_AUTHORITY,
  TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult.JSON_PROPERTY_ENABLED,
  TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult.JSON_PROPERTY_VALIDITY_DAYS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-21T10:12:24.693742223+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult {
  public static final String JSON_PROPERTY_CERTIFICATE_AUTHORITY = "certificate_authority";
  private TlsCertificatesAndHostnamesComponentsSchemasCertificateAuthority certificateAuthority;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_VALIDITY_DAYS = "validity_days";
  private TlsCertificatesAndHostnamesSchemasValidityDays validityDays;

  public TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult() { 
  }

  public TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult certificateAuthority(TlsCertificatesAndHostnamesComponentsSchemasCertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
    return this;
  }

   /**
   * Get certificateAuthority
   * @return certificateAuthority
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CERTIFICATE_AUTHORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TlsCertificatesAndHostnamesComponentsSchemasCertificateAuthority getCertificateAuthority() {
    return certificateAuthority;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE_AUTHORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificateAuthority(TlsCertificatesAndHostnamesComponentsSchemasCertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
  }


  public TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.
   * @return enabled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult validityDays(TlsCertificatesAndHostnamesSchemasValidityDays validityDays) {
    this.validityDays = validityDays;
    return this;
  }

   /**
   * Get validityDays
   * @return validityDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALIDITY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TlsCertificatesAndHostnamesSchemasValidityDays getValidityDays() {
    return validityDays;
  }


  @JsonProperty(JSON_PROPERTY_VALIDITY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidityDays(TlsCertificatesAndHostnamesSchemasValidityDays validityDays) {
    this.validityDays = validityDays;
  }


  /**
   * Return true if this tls_certificates_and_hostnames_total_tls_settings_response_allOf_result object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult tlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult = (TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult) o;
    return Objects.equals(this.certificateAuthority, tlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult.certificateAuthority) &&
        Objects.equals(this.enabled, tlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult.enabled) &&
        Objects.equals(this.validityDays, tlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult.validityDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateAuthority, enabled, validityDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TlsCertificatesAndHostnamesTotalTlsSettingsResponseAllOfResult {\n");
    sb.append("    certificateAuthority: ").append(toIndentedString(certificateAuthority)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    validityDays: ").append(toIndentedString(validityDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `certificate_authority` to the URL query string
    if (getCertificateAuthority() != null) {
      joiner.add(String.format("%scertificate_authority%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCertificateAuthority()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enabled` to the URL query string
    if (getEnabled() != null) {
      joiner.add(String.format("%senabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnabled()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `validity_days` to the URL query string
    if (getValidityDays() != null) {
      joiner.add(String.format("%svalidity_days%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getValidityDays()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

