/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import java.util.Objects;
import cloudflare.sdk.models.AccessDeviceSession;
import cloudflare.sdk.models.AccessGeo;
import cloudflare.sdk.models.AccessIdentityIdp;
import cloudflare.sdk.models.AccessIdentityMtlsAuth;
import cloudflare.sdk.models.AccessSchemasDevicePostureRule;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import cloudflare.JSON;

/**
 * AccessIdentity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:31:20.290775906+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class AccessIdentity {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_AUTH_STATUS = "auth_status";
  @SerializedName(SERIALIZED_NAME_AUTH_STATUS)
  private String authStatus;

  public static final String SERIALIZED_NAME_COMMON_NAME = "common_name";
  @SerializedName(SERIALIZED_NAME_COMMON_NAME)
  private String commonName;

  public static final String SERIALIZED_NAME_DEVICE_POSTURE = "devicePosture";
  @SerializedName(SERIALIZED_NAME_DEVICE_POSTURE)
  private Map<String, AccessSchemasDevicePostureRule> devicePosture = new HashMap<>();

  public static final String SERIALIZED_NAME_DEVICE_ID = "device_id";
  @SerializedName(SERIALIZED_NAME_DEVICE_ID)
  private String deviceId;

  public static final String SERIALIZED_NAME_DEVICE_SESSIONS = "device_sessions";
  @SerializedName(SERIALIZED_NAME_DEVICE_SESSIONS)
  private Map<String, AccessDeviceSession> deviceSessions = new HashMap<>();

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_GEO = "geo";
  @SerializedName(SERIALIZED_NAME_GEO)
  private AccessGeo geo;

  public static final String SERIALIZED_NAME_IAT = "iat";
  @SerializedName(SERIALIZED_NAME_IAT)
  private BigDecimal iat;

  public static final String SERIALIZED_NAME_IDP = "idp";
  @SerializedName(SERIALIZED_NAME_IDP)
  private AccessIdentityIdp idp;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  private String ip;

  public static final String SERIALIZED_NAME_IS_GATEWAY = "is_gateway";
  @SerializedName(SERIALIZED_NAME_IS_GATEWAY)
  private Boolean isGateway;

  public static final String SERIALIZED_NAME_IS_WARP = "is_warp";
  @SerializedName(SERIALIZED_NAME_IS_WARP)
  private Boolean isWarp;

  public static final String SERIALIZED_NAME_MTLS_AUTH = "mtls_auth";
  @SerializedName(SERIALIZED_NAME_MTLS_AUTH)
  private AccessIdentityMtlsAuth mtlsAuth;

  public static final String SERIALIZED_NAME_SERVICE_TOKEN_ID = "service_token_id";
  @SerializedName(SERIALIZED_NAME_SERVICE_TOKEN_ID)
  private String serviceTokenId;

  public static final String SERIALIZED_NAME_SERVICE_TOKEN_STATUS = "service_token_status";
  @SerializedName(SERIALIZED_NAME_SERVICE_TOKEN_STATUS)
  private Boolean serviceTokenStatus;

  public static final String SERIALIZED_NAME_USER_UUID = "user_uuid";
  @SerializedName(SERIALIZED_NAME_USER_UUID)
  private String userUuid;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private BigDecimal version;

  public AccessIdentity() {
  }

  public AccessIdentity accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public AccessIdentity authStatus(String authStatus) {
    this.authStatus = authStatus;
    return this;
  }

   /**
   * Get authStatus
   * @return authStatus
  **/
  @javax.annotation.Nullable
  public String getAuthStatus() {
    return authStatus;
  }

  public void setAuthStatus(String authStatus) {
    this.authStatus = authStatus;
  }


  public AccessIdentity commonName(String commonName) {
    this.commonName = commonName;
    return this;
  }

   /**
   * Get commonName
   * @return commonName
  **/
  @javax.annotation.Nullable
  public String getCommonName() {
    return commonName;
  }

  public void setCommonName(String commonName) {
    this.commonName = commonName;
  }


  public AccessIdentity devicePosture(Map<String, AccessSchemasDevicePostureRule> devicePosture) {
    this.devicePosture = devicePosture;
    return this;
  }

  public AccessIdentity putDevicePostureItem(String key, AccessSchemasDevicePostureRule devicePostureItem) {
    if (this.devicePosture == null) {
      this.devicePosture = new HashMap<>();
    }
    this.devicePosture.put(key, devicePostureItem);
    return this;
  }

   /**
   * Get devicePosture
   * @return devicePosture
  **/
  @javax.annotation.Nullable
  public Map<String, AccessSchemasDevicePostureRule> getDevicePosture() {
    return devicePosture;
  }

  public void setDevicePosture(Map<String, AccessSchemasDevicePostureRule> devicePosture) {
    this.devicePosture = devicePosture;
  }


  public AccessIdentity deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Get deviceId
   * @return deviceId
  **/
  @javax.annotation.Nullable
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public AccessIdentity deviceSessions(Map<String, AccessDeviceSession> deviceSessions) {
    this.deviceSessions = deviceSessions;
    return this;
  }

  public AccessIdentity putDeviceSessionsItem(String key, AccessDeviceSession deviceSessionsItem) {
    if (this.deviceSessions == null) {
      this.deviceSessions = new HashMap<>();
    }
    this.deviceSessions.put(key, deviceSessionsItem);
    return this;
  }

   /**
   * Get deviceSessions
   * @return deviceSessions
  **/
  @javax.annotation.Nullable
  public Map<String, AccessDeviceSession> getDeviceSessions() {
    return deviceSessions;
  }

  public void setDeviceSessions(Map<String, AccessDeviceSession> deviceSessions) {
    this.deviceSessions = deviceSessions;
  }


  public AccessIdentity email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public AccessIdentity geo(AccessGeo geo) {
    this.geo = geo;
    return this;
  }

   /**
   * Get geo
   * @return geo
  **/
  @javax.annotation.Nullable
  public AccessGeo getGeo() {
    return geo;
  }

  public void setGeo(AccessGeo geo) {
    this.geo = geo;
  }


  public AccessIdentity iat(BigDecimal iat) {
    this.iat = iat;
    return this;
  }

   /**
   * Get iat
   * @return iat
  **/
  @javax.annotation.Nullable
  public BigDecimal getIat() {
    return iat;
  }

  public void setIat(BigDecimal iat) {
    this.iat = iat;
  }


  public AccessIdentity idp(AccessIdentityIdp idp) {
    this.idp = idp;
    return this;
  }

   /**
   * Get idp
   * @return idp
  **/
  @javax.annotation.Nullable
  public AccessIdentityIdp getIdp() {
    return idp;
  }

  public void setIdp(AccessIdentityIdp idp) {
    this.idp = idp;
  }


  public AccessIdentity ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @javax.annotation.Nullable
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }


  public AccessIdentity isGateway(Boolean isGateway) {
    this.isGateway = isGateway;
    return this;
  }

   /**
   * Get isGateway
   * @return isGateway
  **/
  @javax.annotation.Nullable
  public Boolean getIsGateway() {
    return isGateway;
  }

  public void setIsGateway(Boolean isGateway) {
    this.isGateway = isGateway;
  }


  public AccessIdentity isWarp(Boolean isWarp) {
    this.isWarp = isWarp;
    return this;
  }

   /**
   * Get isWarp
   * @return isWarp
  **/
  @javax.annotation.Nullable
  public Boolean getIsWarp() {
    return isWarp;
  }

  public void setIsWarp(Boolean isWarp) {
    this.isWarp = isWarp;
  }


  public AccessIdentity mtlsAuth(AccessIdentityMtlsAuth mtlsAuth) {
    this.mtlsAuth = mtlsAuth;
    return this;
  }

   /**
   * Get mtlsAuth
   * @return mtlsAuth
  **/
  @javax.annotation.Nullable
  public AccessIdentityMtlsAuth getMtlsAuth() {
    return mtlsAuth;
  }

  public void setMtlsAuth(AccessIdentityMtlsAuth mtlsAuth) {
    this.mtlsAuth = mtlsAuth;
  }


  public AccessIdentity serviceTokenId(String serviceTokenId) {
    this.serviceTokenId = serviceTokenId;
    return this;
  }

   /**
   * Get serviceTokenId
   * @return serviceTokenId
  **/
  @javax.annotation.Nullable
  public String getServiceTokenId() {
    return serviceTokenId;
  }

  public void setServiceTokenId(String serviceTokenId) {
    this.serviceTokenId = serviceTokenId;
  }


  public AccessIdentity serviceTokenStatus(Boolean serviceTokenStatus) {
    this.serviceTokenStatus = serviceTokenStatus;
    return this;
  }

   /**
   * Get serviceTokenStatus
   * @return serviceTokenStatus
  **/
  @javax.annotation.Nullable
  public Boolean getServiceTokenStatus() {
    return serviceTokenStatus;
  }

  public void setServiceTokenStatus(Boolean serviceTokenStatus) {
    this.serviceTokenStatus = serviceTokenStatus;
  }


  public AccessIdentity userUuid(String userUuid) {
    this.userUuid = userUuid;
    return this;
  }

   /**
   * Get userUuid
   * @return userUuid
  **/
  @javax.annotation.Nullable
  public String getUserUuid() {
    return userUuid;
  }

  public void setUserUuid(String userUuid) {
    this.userUuid = userUuid;
  }


  public AccessIdentity version(BigDecimal version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  public BigDecimal getVersion() {
    return version;
  }

  public void setVersion(BigDecimal version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessIdentity accessIdentity = (AccessIdentity) o;
    return Objects.equals(this.accountId, accessIdentity.accountId) &&
        Objects.equals(this.authStatus, accessIdentity.authStatus) &&
        Objects.equals(this.commonName, accessIdentity.commonName) &&
        Objects.equals(this.devicePosture, accessIdentity.devicePosture) &&
        Objects.equals(this.deviceId, accessIdentity.deviceId) &&
        Objects.equals(this.deviceSessions, accessIdentity.deviceSessions) &&
        Objects.equals(this.email, accessIdentity.email) &&
        Objects.equals(this.geo, accessIdentity.geo) &&
        Objects.equals(this.iat, accessIdentity.iat) &&
        Objects.equals(this.idp, accessIdentity.idp) &&
        Objects.equals(this.ip, accessIdentity.ip) &&
        Objects.equals(this.isGateway, accessIdentity.isGateway) &&
        Objects.equals(this.isWarp, accessIdentity.isWarp) &&
        Objects.equals(this.mtlsAuth, accessIdentity.mtlsAuth) &&
        Objects.equals(this.serviceTokenId, accessIdentity.serviceTokenId) &&
        Objects.equals(this.serviceTokenStatus, accessIdentity.serviceTokenStatus) &&
        Objects.equals(this.userUuid, accessIdentity.userUuid) &&
        Objects.equals(this.version, accessIdentity.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, authStatus, commonName, devicePosture, deviceId, deviceSessions, email, geo, iat, idp, ip, isGateway, isWarp, mtlsAuth, serviceTokenId, serviceTokenStatus, userUuid, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessIdentity {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    authStatus: ").append(toIndentedString(authStatus)).append("\n");
    sb.append("    commonName: ").append(toIndentedString(commonName)).append("\n");
    sb.append("    devicePosture: ").append(toIndentedString(devicePosture)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    deviceSessions: ").append(toIndentedString(deviceSessions)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    geo: ").append(toIndentedString(geo)).append("\n");
    sb.append("    iat: ").append(toIndentedString(iat)).append("\n");
    sb.append("    idp: ").append(toIndentedString(idp)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    isGateway: ").append(toIndentedString(isGateway)).append("\n");
    sb.append("    isWarp: ").append(toIndentedString(isWarp)).append("\n");
    sb.append("    mtlsAuth: ").append(toIndentedString(mtlsAuth)).append("\n");
    sb.append("    serviceTokenId: ").append(toIndentedString(serviceTokenId)).append("\n");
    sb.append("    serviceTokenStatus: ").append(toIndentedString(serviceTokenStatus)).append("\n");
    sb.append("    userUuid: ").append(toIndentedString(userUuid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_id");
    openapiFields.add("auth_status");
    openapiFields.add("common_name");
    openapiFields.add("devicePosture");
    openapiFields.add("device_id");
    openapiFields.add("device_sessions");
    openapiFields.add("email");
    openapiFields.add("geo");
    openapiFields.add("iat");
    openapiFields.add("idp");
    openapiFields.add("ip");
    openapiFields.add("is_gateway");
    openapiFields.add("is_warp");
    openapiFields.add("mtls_auth");
    openapiFields.add("service_token_id");
    openapiFields.add("service_token_status");
    openapiFields.add("user_uuid");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AccessIdentity
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccessIdentity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccessIdentity is not found in the empty JSON string", AccessIdentity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccessIdentity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccessIdentity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_id") != null && !jsonObj.get("account_id").isJsonNull()) && !jsonObj.get("account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_id").toString()));
      }
      if ((jsonObj.get("auth_status") != null && !jsonObj.get("auth_status").isJsonNull()) && !jsonObj.get("auth_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auth_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auth_status").toString()));
      }
      if ((jsonObj.get("common_name") != null && !jsonObj.get("common_name").isJsonNull()) && !jsonObj.get("common_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `common_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("common_name").toString()));
      }
      if ((jsonObj.get("device_id") != null && !jsonObj.get("device_id").isJsonNull()) && !jsonObj.get("device_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `device_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("device_id").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the optional field `geo`
      if (jsonObj.get("geo") != null && !jsonObj.get("geo").isJsonNull()) {
        AccessGeo.validateJsonElement(jsonObj.get("geo"));
      }
      // validate the optional field `idp`
      if (jsonObj.get("idp") != null && !jsonObj.get("idp").isJsonNull()) {
        AccessIdentityIdp.validateJsonElement(jsonObj.get("idp"));
      }
      if ((jsonObj.get("ip") != null && !jsonObj.get("ip").isJsonNull()) && !jsonObj.get("ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip").toString()));
      }
      // validate the optional field `mtls_auth`
      if (jsonObj.get("mtls_auth") != null && !jsonObj.get("mtls_auth").isJsonNull()) {
        AccessIdentityMtlsAuth.validateJsonElement(jsonObj.get("mtls_auth"));
      }
      if ((jsonObj.get("service_token_id") != null && !jsonObj.get("service_token_id").isJsonNull()) && !jsonObj.get("service_token_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_token_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_token_id").toString()));
      }
      if ((jsonObj.get("user_uuid") != null && !jsonObj.get("user_uuid").isJsonNull()) && !jsonObj.get("user_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_uuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccessIdentity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccessIdentity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccessIdentity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccessIdentity.class));

       return (TypeAdapter<T>) new TypeAdapter<AccessIdentity>() {
           @Override
           public void write(JsonWriter out, AccessIdentity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccessIdentity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AccessIdentity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AccessIdentity
  * @throws IOException if the JSON string is invalid with respect to AccessIdentity
  */
  public static AccessIdentity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccessIdentity.class);
  }

 /**
  * Convert an instance of AccessIdentity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

