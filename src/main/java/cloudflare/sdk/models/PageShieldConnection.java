/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import cloudflare.JSON;

/**
 * PageShieldConnection
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T11:31:20.290775906+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class PageShieldConnection {
  public static final String SERIALIZED_NAME_ADDED_AT = "added_at";
  @SerializedName(SERIALIZED_NAME_ADDED_AT)
  private Object addedAt = null;

  public static final String SERIALIZED_NAME_DOMAIN_REPORTED_MALICIOUS = "domain_reported_malicious";
  @SerializedName(SERIALIZED_NAME_DOMAIN_REPORTED_MALICIOUS)
  private Object domainReportedMalicious = null;

  public static final String SERIALIZED_NAME_FIRST_PAGE_URL = "first_page_url";
  @SerializedName(SERIALIZED_NAME_FIRST_PAGE_URL)
  private Object firstPageUrl = null;

  public static final String SERIALIZED_NAME_FIRST_SEEN_AT = "first_seen_at";
  @SerializedName(SERIALIZED_NAME_FIRST_SEEN_AT)
  private Object firstSeenAt = null;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private Object host = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Object id = null;

  public static final String SERIALIZED_NAME_LAST_SEEN_AT = "last_seen_at";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AT)
  private Object lastSeenAt = null;

  public static final String SERIALIZED_NAME_PAGE_URLS = "page_urls";
  @SerializedName(SERIALIZED_NAME_PAGE_URLS)
  private Object pageUrls = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private Object url = null;

  public static final String SERIALIZED_NAME_URL_CONTAINS_CDN_CGI_PATH = "url_contains_cdn_cgi_path";
  @SerializedName(SERIALIZED_NAME_URL_CONTAINS_CDN_CGI_PATH)
  private Object urlContainsCdnCgiPath = null;

  public PageShieldConnection() {
  }

  public PageShieldConnection addedAt(Object addedAt) {
    this.addedAt = addedAt;
    return this;
  }

   /**
   * Get addedAt
   * @return addedAt
  **/
  @javax.annotation.Nullable
  public Object getAddedAt() {
    return addedAt;
  }

  public void setAddedAt(Object addedAt) {
    this.addedAt = addedAt;
  }


  public PageShieldConnection domainReportedMalicious(Object domainReportedMalicious) {
    this.domainReportedMalicious = domainReportedMalicious;
    return this;
  }

   /**
   * Get domainReportedMalicious
   * @return domainReportedMalicious
  **/
  @javax.annotation.Nullable
  public Object getDomainReportedMalicious() {
    return domainReportedMalicious;
  }

  public void setDomainReportedMalicious(Object domainReportedMalicious) {
    this.domainReportedMalicious = domainReportedMalicious;
  }


  public PageShieldConnection firstPageUrl(Object firstPageUrl) {
    this.firstPageUrl = firstPageUrl;
    return this;
  }

   /**
   * Get firstPageUrl
   * @return firstPageUrl
  **/
  @javax.annotation.Nullable
  public Object getFirstPageUrl() {
    return firstPageUrl;
  }

  public void setFirstPageUrl(Object firstPageUrl) {
    this.firstPageUrl = firstPageUrl;
  }


  public PageShieldConnection firstSeenAt(Object firstSeenAt) {
    this.firstSeenAt = firstSeenAt;
    return this;
  }

   /**
   * Get firstSeenAt
   * @return firstSeenAt
  **/
  @javax.annotation.Nullable
  public Object getFirstSeenAt() {
    return firstSeenAt;
  }

  public void setFirstSeenAt(Object firstSeenAt) {
    this.firstSeenAt = firstSeenAt;
  }


  public PageShieldConnection host(Object host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  public Object getHost() {
    return host;
  }

  public void setHost(Object host) {
    this.host = host;
  }


  public PageShieldConnection id(Object id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public Object getId() {
    return id;
  }

  public void setId(Object id) {
    this.id = id;
  }


  public PageShieldConnection lastSeenAt(Object lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
    return this;
  }

   /**
   * Get lastSeenAt
   * @return lastSeenAt
  **/
  @javax.annotation.Nullable
  public Object getLastSeenAt() {
    return lastSeenAt;
  }

  public void setLastSeenAt(Object lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
  }


  public PageShieldConnection pageUrls(Object pageUrls) {
    this.pageUrls = pageUrls;
    return this;
  }

   /**
   * Get pageUrls
   * @return pageUrls
  **/
  @javax.annotation.Nullable
  public Object getPageUrls() {
    return pageUrls;
  }

  public void setPageUrls(Object pageUrls) {
    this.pageUrls = pageUrls;
  }


  public PageShieldConnection url(Object url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  public Object getUrl() {
    return url;
  }

  public void setUrl(Object url) {
    this.url = url;
  }


  public PageShieldConnection urlContainsCdnCgiPath(Object urlContainsCdnCgiPath) {
    this.urlContainsCdnCgiPath = urlContainsCdnCgiPath;
    return this;
  }

   /**
   * Get urlContainsCdnCgiPath
   * @return urlContainsCdnCgiPath
  **/
  @javax.annotation.Nullable
  public Object getUrlContainsCdnCgiPath() {
    return urlContainsCdnCgiPath;
  }

  public void setUrlContainsCdnCgiPath(Object urlContainsCdnCgiPath) {
    this.urlContainsCdnCgiPath = urlContainsCdnCgiPath;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageShieldConnection pageShieldConnection = (PageShieldConnection) o;
    return Objects.equals(this.addedAt, pageShieldConnection.addedAt) &&
        Objects.equals(this.domainReportedMalicious, pageShieldConnection.domainReportedMalicious) &&
        Objects.equals(this.firstPageUrl, pageShieldConnection.firstPageUrl) &&
        Objects.equals(this.firstSeenAt, pageShieldConnection.firstSeenAt) &&
        Objects.equals(this.host, pageShieldConnection.host) &&
        Objects.equals(this.id, pageShieldConnection.id) &&
        Objects.equals(this.lastSeenAt, pageShieldConnection.lastSeenAt) &&
        Objects.equals(this.pageUrls, pageShieldConnection.pageUrls) &&
        Objects.equals(this.url, pageShieldConnection.url) &&
        Objects.equals(this.urlContainsCdnCgiPath, pageShieldConnection.urlContainsCdnCgiPath);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(addedAt, domainReportedMalicious, firstPageUrl, firstSeenAt, host, id, lastSeenAt, pageUrls, url, urlContainsCdnCgiPath);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageShieldConnection {\n");
    sb.append("    addedAt: ").append(toIndentedString(addedAt)).append("\n");
    sb.append("    domainReportedMalicious: ").append(toIndentedString(domainReportedMalicious)).append("\n");
    sb.append("    firstPageUrl: ").append(toIndentedString(firstPageUrl)).append("\n");
    sb.append("    firstSeenAt: ").append(toIndentedString(firstSeenAt)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastSeenAt: ").append(toIndentedString(lastSeenAt)).append("\n");
    sb.append("    pageUrls: ").append(toIndentedString(pageUrls)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    urlContainsCdnCgiPath: ").append(toIndentedString(urlContainsCdnCgiPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("added_at");
    openapiFields.add("domain_reported_malicious");
    openapiFields.add("first_page_url");
    openapiFields.add("first_seen_at");
    openapiFields.add("host");
    openapiFields.add("id");
    openapiFields.add("last_seen_at");
    openapiFields.add("page_urls");
    openapiFields.add("url");
    openapiFields.add("url_contains_cdn_cgi_path");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PageShieldConnection
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PageShieldConnection.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PageShieldConnection is not found in the empty JSON string", PageShieldConnection.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PageShieldConnection.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PageShieldConnection` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PageShieldConnection.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PageShieldConnection' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PageShieldConnection> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PageShieldConnection.class));

       return (TypeAdapter<T>) new TypeAdapter<PageShieldConnection>() {
           @Override
           public void write(JsonWriter out, PageShieldConnection value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PageShieldConnection read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PageShieldConnection given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PageShieldConnection
  * @throws IOException if the JSON string is invalid with respect to PageShieldConnection
  */
  public static PageShieldConnection fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PageShieldConnection.class);
  }

 /**
  * Convert an instance of PageShieldConnection to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

