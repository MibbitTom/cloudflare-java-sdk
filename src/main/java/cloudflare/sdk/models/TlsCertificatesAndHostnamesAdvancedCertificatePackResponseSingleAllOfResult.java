/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesAdvancedType;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesCertificatePacksComponentsSchemasStatus;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesSchemasCertificateAuthority;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesValidationMethod;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesValidityDays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult
 */
@JsonPropertyOrder({
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_CERTIFICATE_AUTHORITY,
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_CLOUDFLARE_BRANDING,
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_HOSTS,
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_ID,
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_STATUS,
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_TYPE,
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_VALIDATION_METHOD,
  TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.JSON_PROPERTY_VALIDITY_DAYS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-21T10:12:24.693742223+01:00[Europe/London]", comments = "Generator version: 7.5.0")
public class TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult {
  public static final String JSON_PROPERTY_CERTIFICATE_AUTHORITY = "certificate_authority";
  private TlsCertificatesAndHostnamesSchemasCertificateAuthority certificateAuthority;

  public static final String JSON_PROPERTY_CLOUDFLARE_BRANDING = "cloudflare_branding";
  private Boolean cloudflareBranding;

  public static final String JSON_PROPERTY_HOSTS = "hosts";
  private List<String> hosts = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_STATUS = "status";
  private TlsCertificatesAndHostnamesCertificatePacksComponentsSchemasStatus status;

  public static final String JSON_PROPERTY_TYPE = "type";
  private TlsCertificatesAndHostnamesAdvancedType type;

  public static final String JSON_PROPERTY_VALIDATION_METHOD = "validation_method";
  private TlsCertificatesAndHostnamesValidationMethod validationMethod;

  public static final String JSON_PROPERTY_VALIDITY_DAYS = "validity_days";
  private TlsCertificatesAndHostnamesValidityDays validityDays;

  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult() { 
  }

  @JsonCreator
  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult(
    @JsonProperty(JSON_PROPERTY_ID) String id
  ) {
  this();
    this.id = id;
  }

  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult certificateAuthority(TlsCertificatesAndHostnamesSchemasCertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
    return this;
  }

   /**
   * Get certificateAuthority
   * @return certificateAuthority
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CERTIFICATE_AUTHORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TlsCertificatesAndHostnamesSchemasCertificateAuthority getCertificateAuthority() {
    return certificateAuthority;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE_AUTHORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificateAuthority(TlsCertificatesAndHostnamesSchemasCertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
  }


  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult cloudflareBranding(Boolean cloudflareBranding) {
    this.cloudflareBranding = cloudflareBranding;
    return this;
  }

   /**
   * Whether or not to add Cloudflare Branding for the order.  This will add sni.cloudflaressl.com as the Common Name if set true.
   * @return cloudflareBranding
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLOUDFLARE_BRANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCloudflareBranding() {
    return cloudflareBranding;
  }


  @JsonProperty(JSON_PROPERTY_CLOUDFLARE_BRANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudflareBranding(Boolean cloudflareBranding) {
    this.cloudflareBranding = cloudflareBranding;
  }


  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult hosts(List<String> hosts) {
    this.hosts = hosts;
    return this;
  }

  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult addHostsItem(String hostsItem) {
    if (this.hosts == null) {
      this.hosts = new ArrayList<>();
    }
    this.hosts.add(hostsItem);
    return this;
  }

   /**
   * Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.
   * @return hosts
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getHosts() {
    return hosts;
  }


  @JsonProperty(JSON_PROPERTY_HOSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHosts(List<String> hosts) {
    this.hosts = hosts;
  }


   /**
   * Identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult status(TlsCertificatesAndHostnamesCertificatePacksComponentsSchemasStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TlsCertificatesAndHostnamesCertificatePacksComponentsSchemasStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(TlsCertificatesAndHostnamesCertificatePacksComponentsSchemasStatus status) {
    this.status = status;
  }


  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult type(TlsCertificatesAndHostnamesAdvancedType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TlsCertificatesAndHostnamesAdvancedType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TlsCertificatesAndHostnamesAdvancedType type) {
    this.type = type;
  }


  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult validationMethod(TlsCertificatesAndHostnamesValidationMethod validationMethod) {
    this.validationMethod = validationMethod;
    return this;
  }

   /**
   * Get validationMethod
   * @return validationMethod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALIDATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TlsCertificatesAndHostnamesValidationMethod getValidationMethod() {
    return validationMethod;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidationMethod(TlsCertificatesAndHostnamesValidationMethod validationMethod) {
    this.validationMethod = validationMethod;
  }


  public TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult validityDays(TlsCertificatesAndHostnamesValidityDays validityDays) {
    this.validityDays = validityDays;
    return this;
  }

   /**
   * Get validityDays
   * @return validityDays
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALIDITY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TlsCertificatesAndHostnamesValidityDays getValidityDays() {
    return validityDays;
  }


  @JsonProperty(JSON_PROPERTY_VALIDITY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidityDays(TlsCertificatesAndHostnamesValidityDays validityDays) {
    this.validityDays = validityDays;
  }


  /**
   * Return true if this tls_certificates_and_hostnames_advanced_certificate_pack_response_single_allOf_result object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult = (TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult) o;
    return Objects.equals(this.certificateAuthority, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.certificateAuthority) &&
        Objects.equals(this.cloudflareBranding, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.cloudflareBranding) &&
        Objects.equals(this.hosts, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.hosts) &&
        Objects.equals(this.id, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.id) &&
        Objects.equals(this.status, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.status) &&
        Objects.equals(this.type, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.type) &&
        Objects.equals(this.validationMethod, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.validationMethod) &&
        Objects.equals(this.validityDays, tlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult.validityDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateAuthority, cloudflareBranding, hosts, id, status, type, validationMethod, validityDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TlsCertificatesAndHostnamesAdvancedCertificatePackResponseSingleAllOfResult {\n");
    sb.append("    certificateAuthority: ").append(toIndentedString(certificateAuthority)).append("\n");
    sb.append("    cloudflareBranding: ").append(toIndentedString(cloudflareBranding)).append("\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validationMethod: ").append(toIndentedString(validationMethod)).append("\n");
    sb.append("    validityDays: ").append(toIndentedString(validityDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `certificate_authority` to the URL query string
    if (getCertificateAuthority() != null) {
      joiner.add(String.format("%scertificate_authority%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCertificateAuthority()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cloudflare_branding` to the URL query string
    if (getCloudflareBranding() != null) {
      joiner.add(String.format("%scloudflare_branding%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCloudflareBranding()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `hosts` to the URL query string
    if (getHosts() != null) {
      for (int i = 0; i < getHosts().size(); i++) {
        joiner.add(String.format("%shosts%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getHosts().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `validation_method` to the URL query string
    if (getValidationMethod() != null) {
      joiner.add(String.format("%svalidation_method%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getValidationMethod()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `validity_days` to the URL query string
    if (getValidityDays() != null) {
      joiner.add(String.format("%svalidity_days%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getValidityDays()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

