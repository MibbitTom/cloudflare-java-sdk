/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiCallback;
import cloudflare.ApiClient;
import cloudflare.ApiException;
import cloudflare.ApiResponse;
import cloudflare.Configuration;
import cloudflare.Pair;
import cloudflare.ProgressRequestBody;
import cloudflare.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import cloudflare.sdk.models.DevicePostureRulesCreateDevicePostureRule4XXResponse;
import cloudflare.sdk.models.DevicePostureRulesCreateDevicePostureRuleRequest;
import cloudflare.sdk.models.DevicePostureRulesDeleteDevicePostureRule4XXResponse;
import cloudflare.sdk.models.DevicePostureRulesListDevicePostureRules4XXResponse;
import cloudflare.sdk.models.TeamsDevicesIdResponse;
import cloudflare.sdk.models.TeamsDevicesResponseCollection;
import cloudflare.sdk.models.TeamsDevicesSingleResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DevicePostureRulesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DevicePostureRulesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DevicePostureRulesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for devicePostureRulesCreateDevicePostureRule
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesCreateDevicePostureRuleCall(Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = devicePostureRulesCreateDevicePostureRuleRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/devices/posture"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call devicePostureRulesCreateDevicePostureRuleValidateBeforeCall(Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling devicePostureRulesCreateDevicePostureRule(Async)");
        }

        // verify the required parameter 'devicePostureRulesCreateDevicePostureRuleRequest' is set
        if (devicePostureRulesCreateDevicePostureRuleRequest == null) {
            throw new ApiException("Missing the required parameter 'devicePostureRulesCreateDevicePostureRuleRequest' when calling devicePostureRulesCreateDevicePostureRule(Async)");
        }

        return devicePostureRulesCreateDevicePostureRuleCall(accountId, devicePostureRulesCreateDevicePostureRuleRequest, _callback);

    }

    /**
     * Create a device posture rule
     * Creates a new device posture rule.
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @return TeamsDevicesSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public TeamsDevicesSingleResponse devicePostureRulesCreateDevicePostureRule(Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest) throws ApiException {
        ApiResponse<TeamsDevicesSingleResponse> localVarResp = devicePostureRulesCreateDevicePostureRuleWithHttpInfo(accountId, devicePostureRulesCreateDevicePostureRuleRequest);
        return localVarResp.getData();
    }

    /**
     * Create a device posture rule
     * Creates a new device posture rule.
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @return ApiResponse&lt;TeamsDevicesSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TeamsDevicesSingleResponse> devicePostureRulesCreateDevicePostureRuleWithHttpInfo(Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest) throws ApiException {
        okhttp3.Call localVarCall = devicePostureRulesCreateDevicePostureRuleValidateBeforeCall(accountId, devicePostureRulesCreateDevicePostureRuleRequest, null);
        Type localVarReturnType = new TypeToken<TeamsDevicesSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a device posture rule (asynchronously)
     * Creates a new device posture rule.
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesCreateDevicePostureRuleAsync(Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest, final ApiCallback<TeamsDevicesSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = devicePostureRulesCreateDevicePostureRuleValidateBeforeCall(accountId, devicePostureRulesCreateDevicePostureRuleRequest, _callback);
        Type localVarReturnType = new TypeToken<TeamsDevicesSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for devicePostureRulesDeleteDevicePostureRule
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesDeleteDevicePostureRuleCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/devices/posture/{rule_id}"
            .replace("{" + "rule_id" + "}", localVarApiClient.escapeString(ruleId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call devicePostureRulesDeleteDevicePostureRuleValidateBeforeCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ruleId' is set
        if (ruleId == null) {
            throw new ApiException("Missing the required parameter 'ruleId' when calling devicePostureRulesDeleteDevicePostureRule(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling devicePostureRulesDeleteDevicePostureRule(Async)");
        }

        return devicePostureRulesDeleteDevicePostureRuleCall(ruleId, accountId, _callback);

    }

    /**
     * Delete a device posture rule
     * Deletes a device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return TeamsDevicesIdResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public TeamsDevicesIdResponse devicePostureRulesDeleteDevicePostureRule(String ruleId, Object accountId) throws ApiException {
        ApiResponse<TeamsDevicesIdResponse> localVarResp = devicePostureRulesDeleteDevicePostureRuleWithHttpInfo(ruleId, accountId);
        return localVarResp.getData();
    }

    /**
     * Delete a device posture rule
     * Deletes a device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;TeamsDevicesIdResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TeamsDevicesIdResponse> devicePostureRulesDeleteDevicePostureRuleWithHttpInfo(String ruleId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = devicePostureRulesDeleteDevicePostureRuleValidateBeforeCall(ruleId, accountId, null);
        Type localVarReturnType = new TypeToken<TeamsDevicesIdResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete a device posture rule (asynchronously)
     * Deletes a device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesDeleteDevicePostureRuleAsync(String ruleId, Object accountId, final ApiCallback<TeamsDevicesIdResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = devicePostureRulesDeleteDevicePostureRuleValidateBeforeCall(ruleId, accountId, _callback);
        Type localVarReturnType = new TypeToken<TeamsDevicesIdResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for devicePostureRulesDevicePostureRulesDetails
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device posture rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device posture rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesDevicePostureRulesDetailsCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/devices/posture/{rule_id}"
            .replace("{" + "rule_id" + "}", localVarApiClient.escapeString(ruleId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call devicePostureRulesDevicePostureRulesDetailsValidateBeforeCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ruleId' is set
        if (ruleId == null) {
            throw new ApiException("Missing the required parameter 'ruleId' when calling devicePostureRulesDevicePostureRulesDetails(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling devicePostureRulesDevicePostureRulesDetails(Async)");
        }

        return devicePostureRulesDevicePostureRulesDetailsCall(ruleId, accountId, _callback);

    }

    /**
     * Get device posture rule details
     * Fetches a single device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return TeamsDevicesSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device posture rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device posture rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public TeamsDevicesSingleResponse devicePostureRulesDevicePostureRulesDetails(String ruleId, Object accountId) throws ApiException {
        ApiResponse<TeamsDevicesSingleResponse> localVarResp = devicePostureRulesDevicePostureRulesDetailsWithHttpInfo(ruleId, accountId);
        return localVarResp.getData();
    }

    /**
     * Get device posture rule details
     * Fetches a single device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;TeamsDevicesSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device posture rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device posture rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TeamsDevicesSingleResponse> devicePostureRulesDevicePostureRulesDetailsWithHttpInfo(String ruleId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = devicePostureRulesDevicePostureRulesDetailsValidateBeforeCall(ruleId, accountId, null);
        Type localVarReturnType = new TypeToken<TeamsDevicesSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get device posture rule details (asynchronously)
     * Fetches a single device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device posture rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device posture rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesDevicePostureRulesDetailsAsync(String ruleId, Object accountId, final ApiCallback<TeamsDevicesSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = devicePostureRulesDevicePostureRulesDetailsValidateBeforeCall(ruleId, accountId, _callback);
        Type localVarReturnType = new TypeToken<TeamsDevicesSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for devicePostureRulesListDevicePostureRules
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List device posture rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List device posture rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesListDevicePostureRulesCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/devices/posture"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call devicePostureRulesListDevicePostureRulesValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling devicePostureRulesListDevicePostureRules(Async)");
        }

        return devicePostureRulesListDevicePostureRulesCall(accountId, _callback);

    }

    /**
     * List device posture rules
     * Fetches device posture rules for a Zero Trust account.
     * @param accountId  (required)
     * @return TeamsDevicesResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List device posture rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List device posture rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public TeamsDevicesResponseCollection devicePostureRulesListDevicePostureRules(Object accountId) throws ApiException {
        ApiResponse<TeamsDevicesResponseCollection> localVarResp = devicePostureRulesListDevicePostureRulesWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * List device posture rules
     * Fetches device posture rules for a Zero Trust account.
     * @param accountId  (required)
     * @return ApiResponse&lt;TeamsDevicesResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List device posture rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List device posture rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TeamsDevicesResponseCollection> devicePostureRulesListDevicePostureRulesWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = devicePostureRulesListDevicePostureRulesValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<TeamsDevicesResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List device posture rules (asynchronously)
     * Fetches device posture rules for a Zero Trust account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List device posture rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List device posture rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesListDevicePostureRulesAsync(Object accountId, final ApiCallback<TeamsDevicesResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = devicePostureRulesListDevicePostureRulesValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<TeamsDevicesResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for devicePostureRulesUpdateDevicePostureRule
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesUpdateDevicePostureRuleCall(String ruleId, Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = devicePostureRulesCreateDevicePostureRuleRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/devices/posture/{rule_id}"
            .replace("{" + "rule_id" + "}", localVarApiClient.escapeString(ruleId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call devicePostureRulesUpdateDevicePostureRuleValidateBeforeCall(String ruleId, Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ruleId' is set
        if (ruleId == null) {
            throw new ApiException("Missing the required parameter 'ruleId' when calling devicePostureRulesUpdateDevicePostureRule(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling devicePostureRulesUpdateDevicePostureRule(Async)");
        }

        // verify the required parameter 'devicePostureRulesCreateDevicePostureRuleRequest' is set
        if (devicePostureRulesCreateDevicePostureRuleRequest == null) {
            throw new ApiException("Missing the required parameter 'devicePostureRulesCreateDevicePostureRuleRequest' when calling devicePostureRulesUpdateDevicePostureRule(Async)");
        }

        return devicePostureRulesUpdateDevicePostureRuleCall(ruleId, accountId, devicePostureRulesCreateDevicePostureRuleRequest, _callback);

    }

    /**
     * Update a device posture rule
     * Updates a device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @return TeamsDevicesSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public TeamsDevicesSingleResponse devicePostureRulesUpdateDevicePostureRule(String ruleId, Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest) throws ApiException {
        ApiResponse<TeamsDevicesSingleResponse> localVarResp = devicePostureRulesUpdateDevicePostureRuleWithHttpInfo(ruleId, accountId, devicePostureRulesCreateDevicePostureRuleRequest);
        return localVarResp.getData();
    }

    /**
     * Update a device posture rule
     * Updates a device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @return ApiResponse&lt;TeamsDevicesSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TeamsDevicesSingleResponse> devicePostureRulesUpdateDevicePostureRuleWithHttpInfo(String ruleId, Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest) throws ApiException {
        okhttp3.Call localVarCall = devicePostureRulesUpdateDevicePostureRuleValidateBeforeCall(ruleId, accountId, devicePostureRulesCreateDevicePostureRuleRequest, null);
        Type localVarReturnType = new TypeToken<TeamsDevicesSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update a device posture rule (asynchronously)
     * Updates a device posture rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param devicePostureRulesCreateDevicePostureRuleRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a device posture rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a device posture rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call devicePostureRulesUpdateDevicePostureRuleAsync(String ruleId, Object accountId, DevicePostureRulesCreateDevicePostureRuleRequest devicePostureRulesCreateDevicePostureRuleRequest, final ApiCallback<TeamsDevicesSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = devicePostureRulesUpdateDevicePostureRuleValidateBeforeCall(ruleId, accountId, devicePostureRulesCreateDevicePostureRuleRequest, _callback);
        Type localVarReturnType = new TypeToken<TeamsDevicesSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
