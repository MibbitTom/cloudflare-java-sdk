/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiCallback;
import cloudflare.ApiClient;
import cloudflare.ApiException;
import cloudflare.ApiResponse;
import cloudflare.Configuration;
import cloudflare.Pair;
import cloudflare.ProgressRequestBody;
import cloudflare.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import cloudflare.sdk.models.ApiShieldConfiguration;
import cloudflare.sdk.models.ApiShieldDefaultResponse;
import cloudflare.sdk.models.ApiShieldSettingsRetrieveInformationAboutSpecificConfigurationProperties4XXResponse;
import cloudflare.sdk.models.ApiShieldSettingsSetConfigurationProperties4XXResponse;
import cloudflare.sdk.models.ApiShieldSingleResponse;
import java.util.Set;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ApiShieldSettingsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ApiShieldSettingsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ApiShieldSettingsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for apiShieldSettingsRetrieveInformationAboutSpecificConfigurationProperties
     * @param zoneId  (required)
     * @param properties  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about specific configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about specific configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesCall(String zoneId, Set<String> properties, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/zones/{zone_id}/api_gateway/configuration"
            .replace("{" + "zone_id" + "}", localVarApiClient.escapeString(zoneId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (properties != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "properties", properties));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesValidateBeforeCall(String zoneId, Set<String> properties, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneId' is set
        if (zoneId == null) {
            throw new ApiException("Missing the required parameter 'zoneId' when calling apiShieldSettingsRetrieveInformationAboutSpecificConfigurationProperties(Async)");
        }

        return apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesCall(zoneId, properties, _callback);

    }

    /**
     * Retrieve information about specific configuration properties
     * 
     * @param zoneId  (required)
     * @param properties  (optional)
     * @return ApiShieldSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about specific configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about specific configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiShieldSingleResponse apiShieldSettingsRetrieveInformationAboutSpecificConfigurationProperties(String zoneId, Set<String> properties) throws ApiException {
        ApiResponse<ApiShieldSingleResponse> localVarResp = apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesWithHttpInfo(zoneId, properties);
        return localVarResp.getData();
    }

    /**
     * Retrieve information about specific configuration properties
     * 
     * @param zoneId  (required)
     * @param properties  (optional)
     * @return ApiResponse&lt;ApiShieldSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about specific configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about specific configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiShieldSingleResponse> apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesWithHttpInfo(String zoneId, Set<String> properties) throws ApiException {
        okhttp3.Call localVarCall = apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesValidateBeforeCall(zoneId, properties, null);
        Type localVarReturnType = new TypeToken<ApiShieldSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve information about specific configuration properties (asynchronously)
     * 
     * @param zoneId  (required)
     * @param properties  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Retrieve information about specific configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Retrieve information about specific configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesAsync(String zoneId, Set<String> properties, final ApiCallback<ApiShieldSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiShieldSettingsRetrieveInformationAboutSpecificConfigurationPropertiesValidateBeforeCall(zoneId, properties, _callback);
        Type localVarReturnType = new TypeToken<ApiShieldSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiShieldSettingsSetConfigurationProperties
     * @param zoneId  (required)
     * @param apiShieldConfiguration  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Set configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Set configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldSettingsSetConfigurationPropertiesCall(String zoneId, ApiShieldConfiguration apiShieldConfiguration, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = apiShieldConfiguration;

        // create path and map variables
        String localVarPath = "/zones/{zone_id}/api_gateway/configuration"
            .replace("{" + "zone_id" + "}", localVarApiClient.escapeString(zoneId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_token", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiShieldSettingsSetConfigurationPropertiesValidateBeforeCall(String zoneId, ApiShieldConfiguration apiShieldConfiguration, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'zoneId' is set
        if (zoneId == null) {
            throw new ApiException("Missing the required parameter 'zoneId' when calling apiShieldSettingsSetConfigurationProperties(Async)");
        }

        // verify the required parameter 'apiShieldConfiguration' is set
        if (apiShieldConfiguration == null) {
            throw new ApiException("Missing the required parameter 'apiShieldConfiguration' when calling apiShieldSettingsSetConfigurationProperties(Async)");
        }

        return apiShieldSettingsSetConfigurationPropertiesCall(zoneId, apiShieldConfiguration, _callback);

    }

    /**
     * Set configuration properties
     * 
     * @param zoneId  (required)
     * @param apiShieldConfiguration  (required)
     * @return ApiShieldDefaultResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Set configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Set configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiShieldDefaultResponse apiShieldSettingsSetConfigurationProperties(String zoneId, ApiShieldConfiguration apiShieldConfiguration) throws ApiException {
        ApiResponse<ApiShieldDefaultResponse> localVarResp = apiShieldSettingsSetConfigurationPropertiesWithHttpInfo(zoneId, apiShieldConfiguration);
        return localVarResp.getData();
    }

    /**
     * Set configuration properties
     * 
     * @param zoneId  (required)
     * @param apiShieldConfiguration  (required)
     * @return ApiResponse&lt;ApiShieldDefaultResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Set configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Set configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiShieldDefaultResponse> apiShieldSettingsSetConfigurationPropertiesWithHttpInfo(String zoneId, ApiShieldConfiguration apiShieldConfiguration) throws ApiException {
        okhttp3.Call localVarCall = apiShieldSettingsSetConfigurationPropertiesValidateBeforeCall(zoneId, apiShieldConfiguration, null);
        Type localVarReturnType = new TypeToken<ApiShieldDefaultResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Set configuration properties (asynchronously)
     * 
     * @param zoneId  (required)
     * @param apiShieldConfiguration  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Set configuration properties response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Set configuration properties response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiShieldSettingsSetConfigurationPropertiesAsync(String zoneId, ApiShieldConfiguration apiShieldConfiguration, final ApiCallback<ApiShieldDefaultResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiShieldSettingsSetConfigurationPropertiesValidateBeforeCall(zoneId, apiShieldConfiguration, _callback);
        Type localVarReturnType = new TypeToken<ApiShieldDefaultResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
