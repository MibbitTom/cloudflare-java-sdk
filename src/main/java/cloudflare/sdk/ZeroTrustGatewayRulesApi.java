/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiCallback;
import cloudflare.ApiClient;
import cloudflare.ApiException;
import cloudflare.ApiResponse;
import cloudflare.Configuration;
import cloudflare.Pair;
import cloudflare.ProgressRequestBody;
import cloudflare.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import cloudflare.sdk.models.ZeroTrustGatewayComponentsSchemasResponseCollection;
import cloudflare.sdk.models.ZeroTrustGatewayComponentsSchemasSingleResponse;
import cloudflare.sdk.models.ZeroTrustGatewayEmptyResponse;
import cloudflare.sdk.models.ZeroTrustGatewayRulesCreateZeroTrustGatewayRule4XXResponse;
import cloudflare.sdk.models.ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest;
import cloudflare.sdk.models.ZeroTrustGatewayRulesListZeroTrustGatewayRules4XXResponse;
import cloudflare.sdk.models.ZeroTrustListsDeleteZeroTrustList4XXResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZeroTrustGatewayRulesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ZeroTrustGatewayRulesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ZeroTrustGatewayRulesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for zeroTrustGatewayRulesCreateZeroTrustGatewayRule
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesCreateZeroTrustGatewayRuleCall(Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/rules"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayRulesCreateZeroTrustGatewayRuleValidateBeforeCall(Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayRulesCreateZeroTrustGatewayRule(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest' is set
        if (zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest' when calling zeroTrustGatewayRulesCreateZeroTrustGatewayRule(Async)");
        }

        return zeroTrustGatewayRulesCreateZeroTrustGatewayRuleCall(accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, _callback);

    }

    /**
     * Create a Zero Trust Gateway rule
     * Creates a new Zero Trust Gateway rule.
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @return ZeroTrustGatewayComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayComponentsSchemasSingleResponse zeroTrustGatewayRulesCreateZeroTrustGatewayRule(Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewayComponentsSchemasSingleResponse> localVarResp = zeroTrustGatewayRulesCreateZeroTrustGatewayRuleWithHttpInfo(accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest);
        return localVarResp.getData();
    }

    /**
     * Create a Zero Trust Gateway rule
     * Creates a new Zero Trust Gateway rule.
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayComponentsSchemasSingleResponse> zeroTrustGatewayRulesCreateZeroTrustGatewayRuleWithHttpInfo(Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayRulesCreateZeroTrustGatewayRuleValidateBeforeCall(accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a Zero Trust Gateway rule (asynchronously)
     * Creates a new Zero Trust Gateway rule.
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesCreateZeroTrustGatewayRuleAsync(Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, final ApiCallback<ZeroTrustGatewayComponentsSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayRulesCreateZeroTrustGatewayRuleValidateBeforeCall(accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayRulesDeleteZeroTrustGatewayRule
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/rules/{rule_id}"
            .replace("{" + "rule_id" + "}", localVarApiClient.escapeString(ruleId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleValidateBeforeCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ruleId' is set
        if (ruleId == null) {
            throw new ApiException("Missing the required parameter 'ruleId' when calling zeroTrustGatewayRulesDeleteZeroTrustGatewayRule(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayRulesDeleteZeroTrustGatewayRule(Async)");
        }

        return zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleCall(ruleId, accountId, _callback);

    }

    /**
     * Delete a Zero Trust Gateway rule
     * Deletes a Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewayEmptyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayEmptyResponse zeroTrustGatewayRulesDeleteZeroTrustGatewayRule(String ruleId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayEmptyResponse> localVarResp = zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleWithHttpInfo(ruleId, accountId);
        return localVarResp.getData();
    }

    /**
     * Delete a Zero Trust Gateway rule
     * Deletes a Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayEmptyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayEmptyResponse> zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleWithHttpInfo(String ruleId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleValidateBeforeCall(ruleId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete a Zero Trust Gateway rule (asynchronously)
     * Deletes a Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Delete a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleAsync(String ruleId, Object accountId, final ApiCallback<ZeroTrustGatewayEmptyResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayRulesDeleteZeroTrustGatewayRuleValidateBeforeCall(ruleId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayEmptyResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayRulesListZeroTrustGatewayRules
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesListZeroTrustGatewayRulesCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/rules"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayRulesListZeroTrustGatewayRulesValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayRulesListZeroTrustGatewayRules(Async)");
        }

        return zeroTrustGatewayRulesListZeroTrustGatewayRulesCall(accountId, _callback);

    }

    /**
     * List Zero Trust Gateway rules
     * Fetches the Zero Trust Gateway rules for an account.
     * @param accountId  (required)
     * @return ZeroTrustGatewayComponentsSchemasResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayComponentsSchemasResponseCollection zeroTrustGatewayRulesListZeroTrustGatewayRules(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayComponentsSchemasResponseCollection> localVarResp = zeroTrustGatewayRulesListZeroTrustGatewayRulesWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * List Zero Trust Gateway rules
     * Fetches the Zero Trust Gateway rules for an account.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayComponentsSchemasResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayComponentsSchemasResponseCollection> zeroTrustGatewayRulesListZeroTrustGatewayRulesWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayRulesListZeroTrustGatewayRulesValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Zero Trust Gateway rules (asynchronously)
     * Fetches the Zero Trust Gateway rules for an account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Zero Trust Gateway rules response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List Zero Trust Gateway rules response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesListZeroTrustGatewayRulesAsync(Object accountId, final ApiCallback<ZeroTrustGatewayComponentsSchemasResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayRulesListZeroTrustGatewayRulesValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayRulesUpdateZeroTrustGatewayRule
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleCall(String ruleId, Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/rules/{rule_id}"
            .replace("{" + "rule_id" + "}", localVarApiClient.escapeString(ruleId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleValidateBeforeCall(String ruleId, Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ruleId' is set
        if (ruleId == null) {
            throw new ApiException("Missing the required parameter 'ruleId' when calling zeroTrustGatewayRulesUpdateZeroTrustGatewayRule(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayRulesUpdateZeroTrustGatewayRule(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest' is set
        if (zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest' when calling zeroTrustGatewayRulesUpdateZeroTrustGatewayRule(Async)");
        }

        return zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleCall(ruleId, accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, _callback);

    }

    /**
     * Update a Zero Trust Gateway rule
     * Updates a configured Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @return ZeroTrustGatewayComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayComponentsSchemasSingleResponse zeroTrustGatewayRulesUpdateZeroTrustGatewayRule(String ruleId, Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest) throws ApiException {
        ApiResponse<ZeroTrustGatewayComponentsSchemasSingleResponse> localVarResp = zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleWithHttpInfo(ruleId, accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest);
        return localVarResp.getData();
    }

    /**
     * Update a Zero Trust Gateway rule
     * Updates a configured Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayComponentsSchemasSingleResponse> zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleWithHttpInfo(String ruleId, Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleValidateBeforeCall(ruleId, accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update a Zero Trust Gateway rule (asynchronously)
     * Updates a configured Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a Zero Trust Gateway rule response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a Zero Trust Gateway rule response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleAsync(String ruleId, Object accountId, ZeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, final ApiCallback<ZeroTrustGatewayComponentsSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayRulesUpdateZeroTrustGatewayRuleValidateBeforeCall(ruleId, accountId, zeroTrustGatewayRulesCreateZeroTrustGatewayRuleRequest, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustGatewayRulesZeroTrustGatewayRuleDetails
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/rules/{rule_id}"
            .replace("{" + "rule_id" + "}", localVarApiClient.escapeString(ruleId.toString()))
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsValidateBeforeCall(String ruleId, Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ruleId' is set
        if (ruleId == null) {
            throw new ApiException("Missing the required parameter 'ruleId' when calling zeroTrustGatewayRulesZeroTrustGatewayRuleDetails(Async)");
        }

        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustGatewayRulesZeroTrustGatewayRuleDetails(Async)");
        }

        return zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsCall(ruleId, accountId, _callback);

    }

    /**
     * Get Zero Trust Gateway rule details
     * Fetches a single Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return ZeroTrustGatewayComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayComponentsSchemasSingleResponse zeroTrustGatewayRulesZeroTrustGatewayRuleDetails(String ruleId, Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayComponentsSchemasSingleResponse> localVarResp = zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsWithHttpInfo(ruleId, accountId);
        return localVarResp.getData();
    }

    /**
     * Get Zero Trust Gateway rule details
     * Fetches a single Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayComponentsSchemasSingleResponse> zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsWithHttpInfo(String ruleId, Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsValidateBeforeCall(ruleId, accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Zero Trust Gateway rule details (asynchronously)
     * Fetches a single Zero Trust Gateway rule.
     * @param ruleId  (required)
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust Gateway rule details response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust Gateway rule details response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsAsync(String ruleId, Object accountId, final ApiCallback<ZeroTrustGatewayComponentsSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustGatewayRulesZeroTrustGatewayRuleDetailsValidateBeforeCall(ruleId, accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayComponentsSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
