/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiCallback;
import cloudflare.ApiClient;
import cloudflare.ApiException;
import cloudflare.ApiResponse;
import cloudflare.Configuration;
import cloudflare.Pair;
import cloudflare.ProgressRequestBody;
import cloudflare.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import cloudflare.sdk.models.TeamsDevicesZeroTrustAccountDeviceSettings;
import cloudflare.sdk.models.TeamsDevicesZeroTrustAccountDeviceSettingsResponse;
import cloudflare.sdk.models.ZeroTrustAccountsGetDeviceSettingsForZeroTrustAccount4XXResponse;
import cloudflare.sdk.models.ZeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccount4XXResponse;
import cloudflare.sdk.models.ZeroTrustAccountsGetZeroTrustAccountConfiguration4XXResponse;
import cloudflare.sdk.models.ZeroTrustAccountsGetZeroTrustAccountInformation4XXResponse;
import cloudflare.sdk.models.ZeroTrustGatewayGatewayAccount;
import cloudflare.sdk.models.ZeroTrustGatewayGatewayAccountConfig;
import cloudflare.sdk.models.ZeroTrustGatewayGatewayAccountLoggingSettings;
import cloudflare.sdk.models.ZeroTrustGatewayGatewayAccountLoggingSettingsResponse;
import cloudflare.sdk.models.ZeroTrustGatewayGatewayAccountSettings;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZeroTrustAccountsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ZeroTrustAccountsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ZeroTrustAccountsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for zeroTrustAccountsCreateZeroTrustAccount
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsCreateZeroTrustAccountCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsCreateZeroTrustAccountValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsCreateZeroTrustAccount(Async)");
        }

        return zeroTrustAccountsCreateZeroTrustAccountCall(accountId, _callback);

    }

    /**
     * Create Zero Trust account
     * Creates a Zero Trust account with an existing Cloudflare account.
     * @param accountId  (required)
     * @return ZeroTrustGatewayGatewayAccount
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayGatewayAccount zeroTrustAccountsCreateZeroTrustAccount(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayGatewayAccount> localVarResp = zeroTrustAccountsCreateZeroTrustAccountWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * Create Zero Trust account
     * Creates a Zero Trust account with an existing Cloudflare account.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayGatewayAccount&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayGatewayAccount> zeroTrustAccountsCreateZeroTrustAccountWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsCreateZeroTrustAccountValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccount>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Zero Trust account (asynchronously)
     * Creates a Zero Trust account with an existing Cloudflare account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Create Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsCreateZeroTrustAccountAsync(Object accountId, final ApiCallback<ZeroTrustGatewayGatewayAccount> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsCreateZeroTrustAccountValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccount>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsGetDeviceSettingsForZeroTrustAccount
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/devices/settings"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsGetDeviceSettingsForZeroTrustAccount(Async)");
        }

        return zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountCall(accountId, _callback);

    }

    /**
     * Get device settings for a Zero Trust account
     * Describes the current device settings for a Zero Trust account.
     * @param accountId  (required)
     * @return TeamsDevicesZeroTrustAccountDeviceSettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public TeamsDevicesZeroTrustAccountDeviceSettingsResponse zeroTrustAccountsGetDeviceSettingsForZeroTrustAccount(Object accountId) throws ApiException {
        ApiResponse<TeamsDevicesZeroTrustAccountDeviceSettingsResponse> localVarResp = zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * Get device settings for a Zero Trust account
     * Describes the current device settings for a Zero Trust account.
     * @param accountId  (required)
     * @return ApiResponse&lt;TeamsDevicesZeroTrustAccountDeviceSettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TeamsDevicesZeroTrustAccountDeviceSettingsResponse> zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<TeamsDevicesZeroTrustAccountDeviceSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get device settings for a Zero Trust account (asynchronously)
     * Describes the current device settings for a Zero Trust account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountAsync(Object accountId, final ApiCallback<TeamsDevicesZeroTrustAccountDeviceSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsGetDeviceSettingsForZeroTrustAccountValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<TeamsDevicesZeroTrustAccountDeviceSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccount
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/logging"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccount(Async)");
        }

        return zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountCall(accountId, _callback);

    }

    /**
     * Get logging settings for the Zero Trust account
     * Fetches the current logging settings for Zero Trust account.
     * @param accountId  (required)
     * @return ZeroTrustGatewayGatewayAccountLoggingSettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayGatewayAccountLoggingSettingsResponse zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccount(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse> localVarResp = zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * Get logging settings for the Zero Trust account
     * Fetches the current logging settings for Zero Trust account.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayGatewayAccountLoggingSettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse> zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get logging settings for the Zero Trust account (asynchronously)
     * Fetches the current logging settings for Zero Trust account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountAsync(Object accountId, final ApiCallback<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsGetLoggingSettingsForTheZeroTrustAccountValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsGetZeroTrustAccountConfiguration
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetZeroTrustAccountConfigurationCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/configuration"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsGetZeroTrustAccountConfigurationValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsGetZeroTrustAccountConfiguration(Async)");
        }

        return zeroTrustAccountsGetZeroTrustAccountConfigurationCall(accountId, _callback);

    }

    /**
     * Get Zero Trust account configuration
     * Fetches the current Zero Trust account configuration.
     * @param accountId  (required)
     * @return ZeroTrustGatewayGatewayAccountConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayGatewayAccountConfig zeroTrustAccountsGetZeroTrustAccountConfiguration(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayGatewayAccountConfig> localVarResp = zeroTrustAccountsGetZeroTrustAccountConfigurationWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * Get Zero Trust account configuration
     * Fetches the current Zero Trust account configuration.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayGatewayAccountConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayGatewayAccountConfig> zeroTrustAccountsGetZeroTrustAccountConfigurationWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsGetZeroTrustAccountConfigurationValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Zero Trust account configuration (asynchronously)
     * Fetches the current Zero Trust account configuration.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetZeroTrustAccountConfigurationAsync(Object accountId, final ApiCallback<ZeroTrustGatewayGatewayAccountConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsGetZeroTrustAccountConfigurationValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsGetZeroTrustAccountInformation
     * @param accountId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account information response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account information response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetZeroTrustAccountInformationCall(Object accountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsGetZeroTrustAccountInformationValidateBeforeCall(Object accountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsGetZeroTrustAccountInformation(Async)");
        }

        return zeroTrustAccountsGetZeroTrustAccountInformationCall(accountId, _callback);

    }

    /**
     * Get Zero Trust account information
     * Gets information about the current Zero Trust account.
     * @param accountId  (required)
     * @return ZeroTrustGatewayGatewayAccount
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account information response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account information response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayGatewayAccount zeroTrustAccountsGetZeroTrustAccountInformation(Object accountId) throws ApiException {
        ApiResponse<ZeroTrustGatewayGatewayAccount> localVarResp = zeroTrustAccountsGetZeroTrustAccountInformationWithHttpInfo(accountId);
        return localVarResp.getData();
    }

    /**
     * Get Zero Trust account information
     * Gets information about the current Zero Trust account.
     * @param accountId  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayGatewayAccount&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account information response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account information response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayGatewayAccount> zeroTrustAccountsGetZeroTrustAccountInformationWithHttpInfo(Object accountId) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsGetZeroTrustAccountInformationValidateBeforeCall(accountId, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccount>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Zero Trust account information (asynchronously)
     * Gets information about the current Zero Trust account.
     * @param accountId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get Zero Trust account information response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get Zero Trust account information response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsGetZeroTrustAccountInformationAsync(Object accountId, final ApiCallback<ZeroTrustGatewayGatewayAccount> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsGetZeroTrustAccountInformationValidateBeforeCall(accountId, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccount>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsPatchZeroTrustAccountConfiguration
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsPatchZeroTrustAccountConfigurationCall(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayGatewayAccountSettings;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/configuration"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsPatchZeroTrustAccountConfigurationValidateBeforeCall(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsPatchZeroTrustAccountConfiguration(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayGatewayAccountSettings' is set
        if (zeroTrustGatewayGatewayAccountSettings == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayGatewayAccountSettings' when calling zeroTrustAccountsPatchZeroTrustAccountConfiguration(Async)");
        }

        return zeroTrustAccountsPatchZeroTrustAccountConfigurationCall(accountId, zeroTrustGatewayGatewayAccountSettings, _callback);

    }

    /**
     * Patch Zero Trust account configuration
     * Patches the current Zero Trust account configuration. This endpoint can update a single subcollection of settings such as &#x60;antivirus&#x60;, &#x60;tls_decrypt&#x60;, &#x60;activity_log&#x60;, &#x60;block_page&#x60;, &#x60;browser_isolation&#x60;, &#x60;fips&#x60;, &#x60;body_scanning&#x60;, or &#x60;custom_certificate&#x60;, without updating the entire configuration object. Returns an error if any collection of settings is not properly configured.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @return ZeroTrustGatewayGatewayAccountConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayGatewayAccountConfig zeroTrustAccountsPatchZeroTrustAccountConfiguration(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings) throws ApiException {
        ApiResponse<ZeroTrustGatewayGatewayAccountConfig> localVarResp = zeroTrustAccountsPatchZeroTrustAccountConfigurationWithHttpInfo(accountId, zeroTrustGatewayGatewayAccountSettings);
        return localVarResp.getData();
    }

    /**
     * Patch Zero Trust account configuration
     * Patches the current Zero Trust account configuration. This endpoint can update a single subcollection of settings such as &#x60;antivirus&#x60;, &#x60;tls_decrypt&#x60;, &#x60;activity_log&#x60;, &#x60;block_page&#x60;, &#x60;browser_isolation&#x60;, &#x60;fips&#x60;, &#x60;body_scanning&#x60;, or &#x60;custom_certificate&#x60;, without updating the entire configuration object. Returns an error if any collection of settings is not properly configured.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayGatewayAccountConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayGatewayAccountConfig> zeroTrustAccountsPatchZeroTrustAccountConfigurationWithHttpInfo(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsPatchZeroTrustAccountConfigurationValidateBeforeCall(accountId, zeroTrustGatewayGatewayAccountSettings, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Patch Zero Trust account configuration (asynchronously)
     * Patches the current Zero Trust account configuration. This endpoint can update a single subcollection of settings such as &#x60;antivirus&#x60;, &#x60;tls_decrypt&#x60;, &#x60;activity_log&#x60;, &#x60;block_page&#x60;, &#x60;browser_isolation&#x60;, &#x60;fips&#x60;, &#x60;body_scanning&#x60;, or &#x60;custom_certificate&#x60;, without updating the entire configuration object. Returns an error if any collection of settings is not properly configured.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsPatchZeroTrustAccountConfigurationAsync(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings, final ApiCallback<ZeroTrustGatewayGatewayAccountConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsPatchZeroTrustAccountConfigurationValidateBeforeCall(accountId, zeroTrustGatewayGatewayAccountSettings, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccount
     * @param accountId  (required)
     * @param teamsDevicesZeroTrustAccountDeviceSettings  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountCall(Object accountId, TeamsDevicesZeroTrustAccountDeviceSettings teamsDevicesZeroTrustAccountDeviceSettings, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = teamsDevicesZeroTrustAccountDeviceSettings;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/devices/settings"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountValidateBeforeCall(Object accountId, TeamsDevicesZeroTrustAccountDeviceSettings teamsDevicesZeroTrustAccountDeviceSettings, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccount(Async)");
        }

        // verify the required parameter 'teamsDevicesZeroTrustAccountDeviceSettings' is set
        if (teamsDevicesZeroTrustAccountDeviceSettings == null) {
            throw new ApiException("Missing the required parameter 'teamsDevicesZeroTrustAccountDeviceSettings' when calling zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccount(Async)");
        }

        return zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountCall(accountId, teamsDevicesZeroTrustAccountDeviceSettings, _callback);

    }

    /**
     * Update device settings for a Zero Trust account
     * Updates the current device settings for a Zero Trust account.
     * @param accountId  (required)
     * @param teamsDevicesZeroTrustAccountDeviceSettings  (required)
     * @return TeamsDevicesZeroTrustAccountDeviceSettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public TeamsDevicesZeroTrustAccountDeviceSettingsResponse zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccount(Object accountId, TeamsDevicesZeroTrustAccountDeviceSettings teamsDevicesZeroTrustAccountDeviceSettings) throws ApiException {
        ApiResponse<TeamsDevicesZeroTrustAccountDeviceSettingsResponse> localVarResp = zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountWithHttpInfo(accountId, teamsDevicesZeroTrustAccountDeviceSettings);
        return localVarResp.getData();
    }

    /**
     * Update device settings for a Zero Trust account
     * Updates the current device settings for a Zero Trust account.
     * @param accountId  (required)
     * @param teamsDevicesZeroTrustAccountDeviceSettings  (required)
     * @return ApiResponse&lt;TeamsDevicesZeroTrustAccountDeviceSettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TeamsDevicesZeroTrustAccountDeviceSettingsResponse> zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountWithHttpInfo(Object accountId, TeamsDevicesZeroTrustAccountDeviceSettings teamsDevicesZeroTrustAccountDeviceSettings) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountValidateBeforeCall(accountId, teamsDevicesZeroTrustAccountDeviceSettings, null);
        Type localVarReturnType = new TypeToken<TeamsDevicesZeroTrustAccountDeviceSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update device settings for a Zero Trust account (asynchronously)
     * Updates the current device settings for a Zero Trust account.
     * @param accountId  (required)
     * @param teamsDevicesZeroTrustAccountDeviceSettings  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update device settings for a Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update device settings for a Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountAsync(Object accountId, TeamsDevicesZeroTrustAccountDeviceSettings teamsDevicesZeroTrustAccountDeviceSettings, final ApiCallback<TeamsDevicesZeroTrustAccountDeviceSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsUpdateDeviceSettingsForTheZeroTrustAccountValidateBeforeCall(accountId, teamsDevicesZeroTrustAccountDeviceSettings, _callback);
        Type localVarReturnType = new TypeToken<TeamsDevicesZeroTrustAccountDeviceSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccount
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountLoggingSettings  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountCall(Object accountId, ZeroTrustGatewayGatewayAccountLoggingSettings zeroTrustGatewayGatewayAccountLoggingSettings, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayGatewayAccountLoggingSettings;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/logging"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountValidateBeforeCall(Object accountId, ZeroTrustGatewayGatewayAccountLoggingSettings zeroTrustGatewayGatewayAccountLoggingSettings, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccount(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayGatewayAccountLoggingSettings' is set
        if (zeroTrustGatewayGatewayAccountLoggingSettings == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayGatewayAccountLoggingSettings' when calling zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccount(Async)");
        }

        return zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountCall(accountId, zeroTrustGatewayGatewayAccountLoggingSettings, _callback);

    }

    /**
     * Update Zero Trust account logging settings
     * Updates logging settings for the current Zero Trust account.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountLoggingSettings  (required)
     * @return ZeroTrustGatewayGatewayAccountLoggingSettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayGatewayAccountLoggingSettingsResponse zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccount(Object accountId, ZeroTrustGatewayGatewayAccountLoggingSettings zeroTrustGatewayGatewayAccountLoggingSettings) throws ApiException {
        ApiResponse<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse> localVarResp = zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountWithHttpInfo(accountId, zeroTrustGatewayGatewayAccountLoggingSettings);
        return localVarResp.getData();
    }

    /**
     * Update Zero Trust account logging settings
     * Updates logging settings for the current Zero Trust account.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountLoggingSettings  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayGatewayAccountLoggingSettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse> zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountWithHttpInfo(Object accountId, ZeroTrustGatewayGatewayAccountLoggingSettings zeroTrustGatewayGatewayAccountLoggingSettings) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountValidateBeforeCall(accountId, zeroTrustGatewayGatewayAccountLoggingSettings, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Zero Trust account logging settings (asynchronously)
     * Updates logging settings for the current Zero Trust account.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountLoggingSettings  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update logging settings for the Zero Trust account response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update logging settings for the Zero Trust account response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountAsync(Object accountId, ZeroTrustGatewayGatewayAccountLoggingSettings zeroTrustGatewayGatewayAccountLoggingSettings, final ApiCallback<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsUpdateLoggingSettingsForTheZeroTrustAccountValidateBeforeCall(accountId, zeroTrustGatewayGatewayAccountLoggingSettings, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountLoggingSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for zeroTrustAccountsUpdateZeroTrustAccountConfiguration
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsUpdateZeroTrustAccountConfigurationCall(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = zeroTrustGatewayGatewayAccountSettings;

        // create path and map variables
        String localVarPath = "/accounts/{account_id}/gateway/configuration"
            .replace("{" + "account_id" + "}", localVarApiClient.escapeString(accountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call zeroTrustAccountsUpdateZeroTrustAccountConfigurationValidateBeforeCall(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling zeroTrustAccountsUpdateZeroTrustAccountConfiguration(Async)");
        }

        // verify the required parameter 'zeroTrustGatewayGatewayAccountSettings' is set
        if (zeroTrustGatewayGatewayAccountSettings == null) {
            throw new ApiException("Missing the required parameter 'zeroTrustGatewayGatewayAccountSettings' when calling zeroTrustAccountsUpdateZeroTrustAccountConfiguration(Async)");
        }

        return zeroTrustAccountsUpdateZeroTrustAccountConfigurationCall(accountId, zeroTrustGatewayGatewayAccountSettings, _callback);

    }

    /**
     * Update Zero Trust account configuration
     * Updates the current Zero Trust account configuration.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @return ZeroTrustGatewayGatewayAccountConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public ZeroTrustGatewayGatewayAccountConfig zeroTrustAccountsUpdateZeroTrustAccountConfiguration(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings) throws ApiException {
        ApiResponse<ZeroTrustGatewayGatewayAccountConfig> localVarResp = zeroTrustAccountsUpdateZeroTrustAccountConfigurationWithHttpInfo(accountId, zeroTrustGatewayGatewayAccountSettings);
        return localVarResp.getData();
    }

    /**
     * Update Zero Trust account configuration
     * Updates the current Zero Trust account configuration.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @return ApiResponse&lt;ZeroTrustGatewayGatewayAccountConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ZeroTrustGatewayGatewayAccountConfig> zeroTrustAccountsUpdateZeroTrustAccountConfigurationWithHttpInfo(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings) throws ApiException {
        okhttp3.Call localVarCall = zeroTrustAccountsUpdateZeroTrustAccountConfigurationValidateBeforeCall(accountId, zeroTrustGatewayGatewayAccountSettings, null);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Zero Trust account configuration (asynchronously)
     * Updates the current Zero Trust account configuration.
     * @param accountId  (required)
     * @param zeroTrustGatewayGatewayAccountSettings  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update Zero Trust account configuration response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update Zero Trust account configuration response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call zeroTrustAccountsUpdateZeroTrustAccountConfigurationAsync(Object accountId, ZeroTrustGatewayGatewayAccountSettings zeroTrustGatewayGatewayAccountSettings, final ApiCallback<ZeroTrustGatewayGatewayAccountConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = zeroTrustAccountsUpdateZeroTrustAccountConfigurationValidateBeforeCall(accountId, zeroTrustGatewayGatewayAccountSettings, _callback);
        Type localVarReturnType = new TypeToken<ZeroTrustGatewayGatewayAccountConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
