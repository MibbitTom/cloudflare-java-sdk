/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiCallback;
import invalidPackageName.ApiClient;
import invalidPackageName.ApiException;
import invalidPackageName.ApiResponse;
import invalidPackageName.Configuration;
import invalidPackageName.Pair;
import invalidPackageName.ProgressRequestBody;
import invalidPackageName.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AccessApiResponseCommonFailure;
import org.openapitools.client.model.AccessComponentsSchemasIdResponse;
import org.openapitools.client.model.AccessCustomPage;
import org.openapitools.client.model.AccessCustomPagesComponentsSchemasResponseCollection;
import org.openapitools.client.model.AccessCustomPagesComponentsSchemasSingleResponse;
import org.openapitools.client.model.AccessSingleResponseWithoutHtml;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AccessCustomPagesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AccessCustomPagesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AccessCustomPagesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for accessCustomPagesCreateACustomPage
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Create a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesCreateACustomPageCall(String identifier, AccessCustomPage accessCustomPage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = accessCustomPage;

        // create path and map variables
        String localVarPath = "/accounts/{identifier}/access/custom_pages"
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call accessCustomPagesCreateACustomPageValidateBeforeCall(String identifier, AccessCustomPage accessCustomPage, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling accessCustomPagesCreateACustomPage(Async)");
        }

        return accessCustomPagesCreateACustomPageCall(identifier, accessCustomPage, _callback);

    }

    /**
     * Create a custom page
     * Create a custom page
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @return AccessSingleResponseWithoutHtml
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Create a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public AccessSingleResponseWithoutHtml accessCustomPagesCreateACustomPage(String identifier, AccessCustomPage accessCustomPage) throws ApiException {
        ApiResponse<AccessSingleResponseWithoutHtml> localVarResp = accessCustomPagesCreateACustomPageWithHttpInfo(identifier, accessCustomPage);
        return localVarResp.getData();
    }

    /**
     * Create a custom page
     * Create a custom page
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @return ApiResponse&lt;AccessSingleResponseWithoutHtml&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Create a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AccessSingleResponseWithoutHtml> accessCustomPagesCreateACustomPageWithHttpInfo(String identifier, AccessCustomPage accessCustomPage) throws ApiException {
        okhttp3.Call localVarCall = accessCustomPagesCreateACustomPageValidateBeforeCall(identifier, accessCustomPage, null);
        Type localVarReturnType = new TypeToken<AccessSingleResponseWithoutHtml>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a custom page (asynchronously)
     * Create a custom page
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Create a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Create a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesCreateACustomPageAsync(String identifier, AccessCustomPage accessCustomPage, final ApiCallback<AccessSingleResponseWithoutHtml> _callback) throws ApiException {

        okhttp3.Call localVarCall = accessCustomPagesCreateACustomPageValidateBeforeCall(identifier, accessCustomPage, _callback);
        Type localVarReturnType = new TypeToken<AccessSingleResponseWithoutHtml>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for accessCustomPagesDeleteACustomPage
     * @param uuid  (required)
     * @param identifier  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Delete a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesDeleteACustomPageCall(String uuid, String identifier, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{identifier}/access/custom_pages/{uuid}"
            .replace("{" + "uuid" + "}", localVarApiClient.escapeString(uuid.toString()))
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call accessCustomPagesDeleteACustomPageValidateBeforeCall(String uuid, String identifier, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'uuid' is set
        if (uuid == null) {
            throw new ApiException("Missing the required parameter 'uuid' when calling accessCustomPagesDeleteACustomPage(Async)");
        }

        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling accessCustomPagesDeleteACustomPage(Async)");
        }

        return accessCustomPagesDeleteACustomPageCall(uuid, identifier, _callback);

    }

    /**
     * Delete a custom page
     * Delete a custom page
     * @param uuid  (required)
     * @param identifier  (required)
     * @return AccessComponentsSchemasIdResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Delete a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public AccessComponentsSchemasIdResponse accessCustomPagesDeleteACustomPage(String uuid, String identifier) throws ApiException {
        ApiResponse<AccessComponentsSchemasIdResponse> localVarResp = accessCustomPagesDeleteACustomPageWithHttpInfo(uuid, identifier);
        return localVarResp.getData();
    }

    /**
     * Delete a custom page
     * Delete a custom page
     * @param uuid  (required)
     * @param identifier  (required)
     * @return ApiResponse&lt;AccessComponentsSchemasIdResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Delete a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AccessComponentsSchemasIdResponse> accessCustomPagesDeleteACustomPageWithHttpInfo(String uuid, String identifier) throws ApiException {
        okhttp3.Call localVarCall = accessCustomPagesDeleteACustomPageValidateBeforeCall(uuid, identifier, null);
        Type localVarReturnType = new TypeToken<AccessComponentsSchemasIdResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete a custom page (asynchronously)
     * Delete a custom page
     * @param uuid  (required)
     * @param identifier  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Delete a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Delete a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesDeleteACustomPageAsync(String uuid, String identifier, final ApiCallback<AccessComponentsSchemasIdResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = accessCustomPagesDeleteACustomPageValidateBeforeCall(uuid, identifier, _callback);
        Type localVarReturnType = new TypeToken<AccessComponentsSchemasIdResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for accessCustomPagesGetACustomPage
     * @param uuid  (required)
     * @param identifier  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesGetACustomPageCall(String uuid, String identifier, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{identifier}/access/custom_pages/{uuid}"
            .replace("{" + "uuid" + "}", localVarApiClient.escapeString(uuid.toString()))
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call accessCustomPagesGetACustomPageValidateBeforeCall(String uuid, String identifier, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'uuid' is set
        if (uuid == null) {
            throw new ApiException("Missing the required parameter 'uuid' when calling accessCustomPagesGetACustomPage(Async)");
        }

        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling accessCustomPagesGetACustomPage(Async)");
        }

        return accessCustomPagesGetACustomPageCall(uuid, identifier, _callback);

    }

    /**
     * Get a custom page
     * Fetches a custom page and also returns its HTML.
     * @param uuid  (required)
     * @param identifier  (required)
     * @return AccessCustomPagesComponentsSchemasSingleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public AccessCustomPagesComponentsSchemasSingleResponse accessCustomPagesGetACustomPage(String uuid, String identifier) throws ApiException {
        ApiResponse<AccessCustomPagesComponentsSchemasSingleResponse> localVarResp = accessCustomPagesGetACustomPageWithHttpInfo(uuid, identifier);
        return localVarResp.getData();
    }

    /**
     * Get a custom page
     * Fetches a custom page and also returns its HTML.
     * @param uuid  (required)
     * @param identifier  (required)
     * @return ApiResponse&lt;AccessCustomPagesComponentsSchemasSingleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AccessCustomPagesComponentsSchemasSingleResponse> accessCustomPagesGetACustomPageWithHttpInfo(String uuid, String identifier) throws ApiException {
        okhttp3.Call localVarCall = accessCustomPagesGetACustomPageValidateBeforeCall(uuid, identifier, null);
        Type localVarReturnType = new TypeToken<AccessCustomPagesComponentsSchemasSingleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a custom page (asynchronously)
     * Fetches a custom page and also returns its HTML.
     * @param uuid  (required)
     * @param identifier  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Get a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesGetACustomPageAsync(String uuid, String identifier, final ApiCallback<AccessCustomPagesComponentsSchemasSingleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = accessCustomPagesGetACustomPageValidateBeforeCall(uuid, identifier, _callback);
        Type localVarReturnType = new TypeToken<AccessCustomPagesComponentsSchemasSingleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for accessCustomPagesListCustomPages
     * @param identifier  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesListCustomPagesCall(String identifier, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/{identifier}/access/custom_pages"
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call accessCustomPagesListCustomPagesValidateBeforeCall(String identifier, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling accessCustomPagesListCustomPages(Async)");
        }

        return accessCustomPagesListCustomPagesCall(identifier, _callback);

    }

    /**
     * List custom pages
     * List custom pages
     * @param identifier  (required)
     * @return AccessCustomPagesComponentsSchemasResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public AccessCustomPagesComponentsSchemasResponseCollection accessCustomPagesListCustomPages(String identifier) throws ApiException {
        ApiResponse<AccessCustomPagesComponentsSchemasResponseCollection> localVarResp = accessCustomPagesListCustomPagesWithHttpInfo(identifier);
        return localVarResp.getData();
    }

    /**
     * List custom pages
     * List custom pages
     * @param identifier  (required)
     * @return ApiResponse&lt;AccessCustomPagesComponentsSchemasResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AccessCustomPagesComponentsSchemasResponseCollection> accessCustomPagesListCustomPagesWithHttpInfo(String identifier) throws ApiException {
        okhttp3.Call localVarCall = accessCustomPagesListCustomPagesValidateBeforeCall(identifier, null);
        Type localVarReturnType = new TypeToken<AccessCustomPagesComponentsSchemasResponseCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List custom pages (asynchronously)
     * List custom pages
     * @param identifier  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List custom pages response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> List custom pages response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesListCustomPagesAsync(String identifier, final ApiCallback<AccessCustomPagesComponentsSchemasResponseCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = accessCustomPagesListCustomPagesValidateBeforeCall(identifier, _callback);
        Type localVarReturnType = new TypeToken<AccessCustomPagesComponentsSchemasResponseCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for accessCustomPagesUpdateACustomPage
     * @param uuid  (required)
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesUpdateACustomPageCall(String uuid, String identifier, AccessCustomPage accessCustomPage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = accessCustomPage;

        // create path and map variables
        String localVarPath = "/accounts/{identifier}/access/custom_pages/{uuid}"
            .replace("{" + "uuid" + "}", localVarApiClient.escapeString(uuid.toString()))
            .replace("{" + "identifier" + "}", localVarApiClient.escapeString(identifier.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "api_email" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call accessCustomPagesUpdateACustomPageValidateBeforeCall(String uuid, String identifier, AccessCustomPage accessCustomPage, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'uuid' is set
        if (uuid == null) {
            throw new ApiException("Missing the required parameter 'uuid' when calling accessCustomPagesUpdateACustomPage(Async)");
        }

        // verify the required parameter 'identifier' is set
        if (identifier == null) {
            throw new ApiException("Missing the required parameter 'identifier' when calling accessCustomPagesUpdateACustomPage(Async)");
        }

        return accessCustomPagesUpdateACustomPageCall(uuid, identifier, accessCustomPage, _callback);

    }

    /**
     * Update a custom page
     * Update a custom page
     * @param uuid  (required)
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @return AccessSingleResponseWithoutHtml
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public AccessSingleResponseWithoutHtml accessCustomPagesUpdateACustomPage(String uuid, String identifier, AccessCustomPage accessCustomPage) throws ApiException {
        ApiResponse<AccessSingleResponseWithoutHtml> localVarResp = accessCustomPagesUpdateACustomPageWithHttpInfo(uuid, identifier, accessCustomPage);
        return localVarResp.getData();
    }

    /**
     * Update a custom page
     * Update a custom page
     * @param uuid  (required)
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @return ApiResponse&lt;AccessSingleResponseWithoutHtml&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AccessSingleResponseWithoutHtml> accessCustomPagesUpdateACustomPageWithHttpInfo(String uuid, String identifier, AccessCustomPage accessCustomPage) throws ApiException {
        okhttp3.Call localVarCall = accessCustomPagesUpdateACustomPageValidateBeforeCall(uuid, identifier, accessCustomPage, null);
        Type localVarReturnType = new TypeToken<AccessSingleResponseWithoutHtml>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update a custom page (asynchronously)
     * Update a custom page
     * @param uuid  (required)
     * @param identifier  (required)
     * @param accessCustomPage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Update a custom page response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Update a custom page response failure </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call accessCustomPagesUpdateACustomPageAsync(String uuid, String identifier, AccessCustomPage accessCustomPage, final ApiCallback<AccessSingleResponseWithoutHtml> _callback) throws ApiException {

        okhttp3.Call localVarCall = accessCustomPagesUpdateACustomPageValidateBeforeCall(uuid, identifier, accessCustomPage, _callback);
        Type localVarReturnType = new TypeToken<AccessSingleResponseWithoutHtml>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
