/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PagesBuildConfig;
import org.openapitools.client.model.PagesDeploymentConfigs;
import org.openapitools.client.model.PagesDeployments;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PagesProjects
 */
public class PagesProjectsTest {
    private final PagesProjects model = new PagesProjects();

    /**
     * Model tests for PagesProjects
     */
    @Test
    public void testPagesProjects() {
        // TODO: test PagesProjects
    }

    /**
     * Test the property 'buildConfig'
     */
    @Test
    public void buildConfigTest() {
        // TODO: test buildConfig
    }

    /**
     * Test the property 'canonicalDeployment'
     */
    @Test
    public void canonicalDeploymentTest() {
        // TODO: test canonicalDeployment
    }

    /**
     * Test the property 'createdOn'
     */
    @Test
    public void createdOnTest() {
        // TODO: test createdOn
    }

    /**
     * Test the property 'deploymentConfigs'
     */
    @Test
    public void deploymentConfigsTest() {
        // TODO: test deploymentConfigs
    }

    /**
     * Test the property 'domains'
     */
    @Test
    public void domainsTest() {
        // TODO: test domains
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'latestDeployment'
     */
    @Test
    public void latestDeploymentTest() {
        // TODO: test latestDeployment
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'productionBranch'
     */
    @Test
    public void productionBranchTest() {
        // TODO: test productionBranch
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'subdomain'
     */
    @Test
    public void subdomainTest() {
        // TODO: test subdomain
    }

}
