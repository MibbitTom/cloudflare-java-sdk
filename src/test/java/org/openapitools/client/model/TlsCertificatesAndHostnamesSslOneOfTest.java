/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TlsCertificatesAndHostnamesCertificateAuthority;
import org.openapitools.client.model.TlsCertificatesAndHostnamesSslOneOfValidationErrorsInner;
import org.openapitools.client.model.TlsCertificatesAndHostnamesSslsettings;
import org.openapitools.client.model.TlsCertificatesAndHostnamesValidationRecord;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TlsCertificatesAndHostnamesSslOneOf
 */
public class TlsCertificatesAndHostnamesSslOneOfTest {
    private final TlsCertificatesAndHostnamesSslOneOf model = new TlsCertificatesAndHostnamesSslOneOf();

    /**
     * Model tests for TlsCertificatesAndHostnamesSslOneOf
     */
    @Test
    public void testTlsCertificatesAndHostnamesSslOneOf() {
        // TODO: test TlsCertificatesAndHostnamesSslOneOf
    }

    /**
     * Test the property 'bundleMethod'
     */
    @Test
    public void bundleMethodTest() {
        // TODO: test bundleMethod
    }

    /**
     * Test the property 'certificateAuthority'
     */
    @Test
    public void certificateAuthorityTest() {
        // TODO: test certificateAuthority
    }

    /**
     * Test the property 'customCertificate'
     */
    @Test
    public void customCertificateTest() {
        // TODO: test customCertificate
    }

    /**
     * Test the property 'customCsrId'
     */
    @Test
    public void customCsrIdTest() {
        // TODO: test customCsrId
    }

    /**
     * Test the property 'customKey'
     */
    @Test
    public void customKeyTest() {
        // TODO: test customKey
    }

    /**
     * Test the property 'expiresOn'
     */
    @Test
    public void expiresOnTest() {
        // TODO: test expiresOn
    }

    /**
     * Test the property 'hosts'
     */
    @Test
    public void hostsTest() {
        // TODO: test hosts
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'issuer'
     */
    @Test
    public void issuerTest() {
        // TODO: test issuer
    }

    /**
     * Test the property 'method'
     */
    @Test
    public void methodTest() {
        // TODO: test method
    }

    /**
     * Test the property 'serialNumber'
     */
    @Test
    public void serialNumberTest() {
        // TODO: test serialNumber
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'signature'
     */
    @Test
    public void signatureTest() {
        // TODO: test signature
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'uploadedOn'
     */
    @Test
    public void uploadedOnTest() {
        // TODO: test uploadedOn
    }

    /**
     * Test the property 'validationErrors'
     */
    @Test
    public void validationErrorsTest() {
        // TODO: test validationErrors
    }

    /**
     * Test the property 'validationRecords'
     */
    @Test
    public void validationRecordsTest() {
        // TODO: test validationRecords
    }

    /**
     * Test the property 'wildcard'
     */
    @Test
    public void wildcardTest() {
        // TODO: test wildcard
    }

}
