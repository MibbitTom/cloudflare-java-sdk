/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ZonesZoneAccount;
import org.openapitools.client.model.ZonesZoneMeta;
import org.openapitools.client.model.ZonesZoneOwner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ZonesZone
 */
public class ZonesZoneTest {
    private final ZonesZone model = new ZonesZone();

    /**
     * Model tests for ZonesZone
     */
    @Test
    public void testZonesZone() {
        // TODO: test ZonesZone
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'activatedOn'
     */
    @Test
    public void activatedOnTest() {
        // TODO: test activatedOn
    }

    /**
     * Test the property 'createdOn'
     */
    @Test
    public void createdOnTest() {
        // TODO: test createdOn
    }

    /**
     * Test the property 'developmentMode'
     */
    @Test
    public void developmentModeTest() {
        // TODO: test developmentMode
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'modifiedOn'
     */
    @Test
    public void modifiedOnTest() {
        // TODO: test modifiedOn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'originalDnshost'
     */
    @Test
    public void originalDnshostTest() {
        // TODO: test originalDnshost
    }

    /**
     * Test the property 'originalNameServers'
     */
    @Test
    public void originalNameServersTest() {
        // TODO: test originalNameServers
    }

    /**
     * Test the property 'originalRegistrar'
     */
    @Test
    public void originalRegistrarTest() {
        // TODO: test originalRegistrar
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'vanityNameServers'
     */
    @Test
    public void vanityNameServersTest() {
        // TODO: test vanityNameServers
    }

}
