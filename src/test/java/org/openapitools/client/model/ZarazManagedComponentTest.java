/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ZarazBaseMcAllOfActions;
import org.openapitools.client.model.ZarazBaseMcAllOfSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ZarazManagedComponent
 */
public class ZarazManagedComponentTest {
    private final ZarazManagedComponent model = new ZarazManagedComponent();

    /**
     * Model tests for ZarazManagedComponent
     */
    @Test
    public void testZarazManagedComponent() {
        // TODO: test ZarazManagedComponent
    }

    /**
     * Test the property 'blockingTriggers'
     */
    @Test
    public void blockingTriggersTest() {
        // TODO: test blockingTriggers
    }

    /**
     * Test the property 'defaultFields'
     */
    @Test
    public void defaultFieldsTest() {
        // TODO: test defaultFields
    }

    /**
     * Test the property 'defaultPurpose'
     */
    @Test
    public void defaultPurposeTest() {
        // TODO: test defaultPurpose
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'vendorName'
     */
    @Test
    public void vendorNameTest() {
        // TODO: test vendorName
    }

    /**
     * Test the property 'vendorPolicyUrl'
     */
    @Test
    public void vendorPolicyUrlTest() {
        // TODO: test vendorPolicyUrl
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'component'
     */
    @Test
    public void componentTest() {
        // TODO: test component
    }

    /**
     * Test the property 'neoEvents'
     */
    @Test
    public void neoEventsTest() {
        // TODO: test neoEvents
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
