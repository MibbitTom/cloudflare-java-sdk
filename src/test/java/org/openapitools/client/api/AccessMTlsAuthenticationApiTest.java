/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessApiResponseCommonFailure;
import org.openapitools.client.model.AccessCertificatesComponentsSchemasResponseCollection;
import org.openapitools.client.model.AccessCertificatesComponentsSchemasSingleResponse;
import org.openapitools.client.model.AccessComponentsSchemasIdResponse;
import org.openapitools.client.model.AccessMtlsAuthenticationAddAnMtlsCertificateRequest;
import org.openapitools.client.model.AccessMtlsAuthenticationUpdateAnMtlsCertificateRequest;
import org.openapitools.client.model.AccessMtlsAuthenticationUpdateAnMtlsCertificateSettingsRequest;
import org.openapitools.client.model.AccessResponseCollectionHostnames;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccessMTlsAuthenticationApi
 */
@Disabled
public class AccessMTlsAuthenticationApiTest {

    private final AccessMTlsAuthenticationApi api = new AccessMTlsAuthenticationApi();

    /**
     * Add an mTLS certificate
     *
     * Adds a new mTLS root certificate to Access.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessMtlsAuthenticationAddAnMtlsCertificateTest() throws ApiException {
        String identifier = null;
        AccessMtlsAuthenticationAddAnMtlsCertificateRequest accessMtlsAuthenticationAddAnMtlsCertificateRequest = null;
        AccessCertificatesComponentsSchemasSingleResponse response = api.accessMtlsAuthenticationAddAnMtlsCertificate(identifier, accessMtlsAuthenticationAddAnMtlsCertificateRequest);
        // TODO: test validations
    }

    /**
     * Delete an mTLS certificate
     *
     * Deletes an mTLS certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessMtlsAuthenticationDeleteAnMtlsCertificateTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessComponentsSchemasIdResponse response = api.accessMtlsAuthenticationDeleteAnMtlsCertificate(uuid, identifier);
        // TODO: test validations
    }

    /**
     * Get an mTLS certificate
     *
     * Fetches a single mTLS certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessMtlsAuthenticationGetAnMtlsCertificateTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessCertificatesComponentsSchemasSingleResponse response = api.accessMtlsAuthenticationGetAnMtlsCertificate(uuid, identifier);
        // TODO: test validations
    }

    /**
     * List mTLS certificates
     *
     * Lists all mTLS root certificates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessMtlsAuthenticationListMtlsCertificatesTest() throws ApiException {
        String identifier = null;
        AccessCertificatesComponentsSchemasResponseCollection response = api.accessMtlsAuthenticationListMtlsCertificates(identifier);
        // TODO: test validations
    }

    /**
     * List all mTLS hostname settings
     *
     * List all mTLS hostname settings for this account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessMtlsAuthenticationListMtlsCertificatesHostnameSettingsTest() throws ApiException {
        String identifier = null;
        AccessResponseCollectionHostnames response = api.accessMtlsAuthenticationListMtlsCertificatesHostnameSettings(identifier);
        // TODO: test validations
    }

    /**
     * Update an mTLS certificate
     *
     * Updates a configured mTLS certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessMtlsAuthenticationUpdateAnMtlsCertificateTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessMtlsAuthenticationUpdateAnMtlsCertificateRequest accessMtlsAuthenticationUpdateAnMtlsCertificateRequest = null;
        AccessCertificatesComponentsSchemasSingleResponse response = api.accessMtlsAuthenticationUpdateAnMtlsCertificate(uuid, identifier, accessMtlsAuthenticationUpdateAnMtlsCertificateRequest);
        // TODO: test validations
    }

    /**
     * Update an mTLS certificate&#39;s hostname settings
     *
     * Updates an mTLS certificate&#39;s hostname settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessMtlsAuthenticationUpdateAnMtlsCertificateSettingsTest() throws ApiException {
        String identifier = null;
        AccessMtlsAuthenticationUpdateAnMtlsCertificateSettingsRequest accessMtlsAuthenticationUpdateAnMtlsCertificateSettingsRequest = null;
        AccessResponseCollectionHostnames response = api.accessMtlsAuthenticationUpdateAnMtlsCertificateSettings(identifier, accessMtlsAuthenticationUpdateAnMtlsCertificateSettingsRequest);
        // TODO: test validations
    }

}
