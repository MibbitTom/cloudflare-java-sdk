/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DevicePostureIntegrationsCreateDevicePostureIntegration4XXResponse;
import org.openapitools.client.model.DevicePostureIntegrationsCreateDevicePostureIntegrationRequest;
import org.openapitools.client.model.DevicePostureIntegrationsDeleteDevicePostureIntegration4XXResponse;
import org.openapitools.client.model.DevicePostureIntegrationsListDevicePostureIntegrations4XXResponse;
import org.openapitools.client.model.DevicePostureIntegrationsUpdateDevicePostureIntegrationRequest;
import org.openapitools.client.model.TeamsDevicesSchemasIdResponse;
import org.openapitools.client.model.TeamsDevicesSchemasResponseCollection;
import org.openapitools.client.model.TeamsDevicesSchemasSingleResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DevicePostureIntegrationsApi
 */
@Disabled
public class DevicePostureIntegrationsApiTest {

    private final DevicePostureIntegrationsApi api = new DevicePostureIntegrationsApi();

    /**
     * Create a device posture integration
     *
     * Create a new device posture integration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicePostureIntegrationsCreateDevicePostureIntegrationTest() throws ApiException {
        Object accountId = null;
        DevicePostureIntegrationsCreateDevicePostureIntegrationRequest devicePostureIntegrationsCreateDevicePostureIntegrationRequest = null;
        TeamsDevicesSchemasSingleResponse response = api.devicePostureIntegrationsCreateDevicePostureIntegration(accountId, devicePostureIntegrationsCreateDevicePostureIntegrationRequest);
        // TODO: test validations
    }

    /**
     * Delete a device posture integration
     *
     * Delete a configured device posture integration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicePostureIntegrationsDeleteDevicePostureIntegrationTest() throws ApiException {
        String integrationId = null;
        Object accountId = null;
        TeamsDevicesSchemasIdResponse response = api.devicePostureIntegrationsDeleteDevicePostureIntegration(integrationId, accountId);
        // TODO: test validations
    }

    /**
     * Get device posture integration details
     *
     * Fetches details for a single device posture integration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicePostureIntegrationsDevicePostureIntegrationDetailsTest() throws ApiException {
        String integrationId = null;
        Object accountId = null;
        TeamsDevicesSchemasSingleResponse response = api.devicePostureIntegrationsDevicePostureIntegrationDetails(integrationId, accountId);
        // TODO: test validations
    }

    /**
     * List your device posture integrations
     *
     * Fetches the list of device posture integrations for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicePostureIntegrationsListDevicePostureIntegrationsTest() throws ApiException {
        Object accountId = null;
        TeamsDevicesSchemasResponseCollection response = api.devicePostureIntegrationsListDevicePostureIntegrations(accountId);
        // TODO: test validations
    }

    /**
     * Update a device posture integration
     *
     * Updates a configured device posture integration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void devicePostureIntegrationsUpdateDevicePostureIntegrationTest() throws ApiException {
        String integrationId = null;
        Object accountId = null;
        DevicePostureIntegrationsUpdateDevicePostureIntegrationRequest devicePostureIntegrationsUpdateDevicePostureIntegrationRequest = null;
        TeamsDevicesSchemasSingleResponse response = api.devicePostureIntegrationsUpdateDevicePostureIntegration(integrationId, accountId, devicePostureIntegrationsUpdateDevicePostureIntegrationRequest);
        // TODO: test validations
    }

}
