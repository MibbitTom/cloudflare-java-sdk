/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudforceOneApiResponseCommon;
import org.openapitools.client.model.CloudforceOneApiResponseCommonFailure;
import org.openapitools.client.model.CloudforceOnePriorityEdit;
import org.openapitools.client.model.CloudforceOnePriorityList;
import org.openapitools.client.model.CloudforceOnePriorityList200Response;
import org.openapitools.client.model.CloudforceOnePriorityNew200Response;
import org.openapitools.client.model.CloudforceOnePriorityQuota200Response;
import org.openapitools.client.model.CloudforceOneRequestNew200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PriorityIntelligenceRequirementsPirApi
 */
@Disabled
public class PriorityIntelligenceRequirementsPirApiTest {

    private final PriorityIntelligenceRequirementsPirApi api = new PriorityIntelligenceRequirementsPirApi();

    /**
     * Delete a Priority Intelligence Report
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOnePriorityDeleteTest() throws ApiException {
        String accountIdentifier = null;
        String priorityIdentifer = null;
        CloudforceOneApiResponseCommon response = api.cloudforceOnePriorityDelete(accountIdentifier, priorityIdentifer);
        // TODO: test validations
    }

    /**
     * Get a Priority Intelligence Requirement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOnePriorityGetTest() throws ApiException {
        String accountIdentifier = null;
        String priorityIdentifer = null;
        CloudforceOneRequestNew200Response response = api.cloudforceOnePriorityGet(accountIdentifier, priorityIdentifer);
        // TODO: test validations
    }

    /**
     * List Priority Intelligence Requirements
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOnePriorityListTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOnePriorityList cloudforceOnePriorityList = null;
        CloudforceOnePriorityList200Response response = api.cloudforceOnePriorityList(accountIdentifier, cloudforceOnePriorityList);
        // TODO: test validations
    }

    /**
     * Create a New Priority Requirement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOnePriorityNewTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOnePriorityEdit cloudforceOnePriorityEdit = null;
        CloudforceOnePriorityNew200Response response = api.cloudforceOnePriorityNew(accountIdentifier, cloudforceOnePriorityEdit);
        // TODO: test validations
    }

    /**
     * Get Priority Intelligence Requirement Quota
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOnePriorityQuotaTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOnePriorityQuota200Response response = api.cloudforceOnePriorityQuota(accountIdentifier);
        // TODO: test validations
    }

    /**
     * Update a Priority Intelligence Requirement
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOnePriorityUpdateTest() throws ApiException {
        String accountIdentifier = null;
        String priorityIdentifer = null;
        CloudforceOnePriorityEdit cloudforceOnePriorityEdit = null;
        CloudforceOneRequestNew200Response response = api.cloudforceOnePriorityUpdate(accountIdentifier, priorityIdentifer, cloudforceOnePriorityEdit);
        // TODO: test validations
    }

}
