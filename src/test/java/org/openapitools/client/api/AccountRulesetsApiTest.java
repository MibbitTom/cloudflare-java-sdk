/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateAccountRuleset200Response;
import org.openapitools.client.model.CreateAccountRulesetRequest;
import org.openapitools.client.model.CreateAccountRulesetRuleRequest;
import org.openapitools.client.model.ListAccountRulesets200Response;
import org.openapitools.client.model.ListAccountRulesets4XXResponse;
import org.openapitools.client.model.RulesetsRulesetPhase;
import org.openapitools.client.model.UpdateAccountEntrypointRulesetRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountRulesetsApi
 */
@Disabled
public class AccountRulesetsApiTest {

    private final AccountRulesetsApi api = new AccountRulesetsApi();

    /**
     * Create an account ruleset
     *
     * Creates a ruleset at the account level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccountRulesetTest() throws ApiException {
        String accountId = null;
        CreateAccountRulesetRequest createAccountRulesetRequest = null;
        CreateAccountRuleset200Response response = api.createAccountRuleset(accountId, createAccountRulesetRequest);
        // TODO: test validations
    }

    /**
     * Create an account ruleset rule
     *
     * Adds a new rule to an account ruleset. The rule will be added to the end of the existing list of rules in the ruleset by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccountRulesetRuleTest() throws ApiException {
        String rulesetId = null;
        String accountId = null;
        CreateAccountRulesetRuleRequest createAccountRulesetRuleRequest = null;
        CreateAccountRuleset200Response response = api.createAccountRulesetRule(rulesetId, accountId, createAccountRulesetRuleRequest);
        // TODO: test validations
    }

    /**
     * Delete an account ruleset
     *
     * Deletes all versions of an existing account ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountRulesetTest() throws ApiException {
        String rulesetId = null;
        String accountId = null;
        api.deleteAccountRuleset(rulesetId, accountId);
        // TODO: test validations
    }

    /**
     * Delete an account ruleset rule
     *
     * Deletes an existing rule from an account ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountRulesetRuleTest() throws ApiException {
        String ruleId = null;
        String rulesetId = null;
        String accountId = null;
        CreateAccountRuleset200Response response = api.deleteAccountRulesetRule(ruleId, rulesetId, accountId);
        // TODO: test validations
    }

    /**
     * Delete an account ruleset version
     *
     * Deletes an existing version of an account ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountRulesetVersionTest() throws ApiException {
        String rulesetVersion = null;
        String rulesetId = null;
        String accountId = null;
        api.deleteAccountRulesetVersion(rulesetVersion, rulesetId, accountId);
        // TODO: test validations
    }

    /**
     * Get an account entry point ruleset
     *
     * Fetches the latest version of the account entry point ruleset for a given phase.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountEntrypointRulesetTest() throws ApiException {
        RulesetsRulesetPhase rulesetPhase = null;
        String accountId = null;
        CreateAccountRuleset200Response response = api.getAccountEntrypointRuleset(rulesetPhase, accountId);
        // TODO: test validations
    }

    /**
     * Get an account entry point ruleset version
     *
     * Fetches a specific version of an account entry point ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountEntrypointRulesetVersionTest() throws ApiException {
        String rulesetVersion = null;
        RulesetsRulesetPhase rulesetPhase = null;
        String accountId = null;
        CreateAccountRuleset200Response response = api.getAccountEntrypointRulesetVersion(rulesetVersion, rulesetPhase, accountId);
        // TODO: test validations
    }

    /**
     * Get an account ruleset
     *
     * Fetches the latest version of an account ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountRulesetTest() throws ApiException {
        String rulesetId = null;
        String accountId = null;
        CreateAccountRuleset200Response response = api.getAccountRuleset(rulesetId, accountId);
        // TODO: test validations
    }

    /**
     * Get an account ruleset version
     *
     * Fetches a specific version of an account ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountRulesetVersionTest() throws ApiException {
        String rulesetVersion = null;
        String rulesetId = null;
        String accountId = null;
        CreateAccountRuleset200Response response = api.getAccountRulesetVersion(rulesetVersion, rulesetId, accountId);
        // TODO: test validations
    }

    /**
     * List an account entry point ruleset&#39;s versions
     *
     * Fetches the versions of an account entry point ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccountEntrypointRulesetVersionsTest() throws ApiException {
        RulesetsRulesetPhase rulesetPhase = null;
        String accountId = null;
        ListAccountRulesets200Response response = api.listAccountEntrypointRulesetVersions(rulesetPhase, accountId);
        // TODO: test validations
    }

    /**
     * List an account ruleset version&#39;s rules by tag
     *
     * Fetches the rules of a managed account ruleset version for a given tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccountRulesetVersionRulesByTagTest() throws ApiException {
        String ruleTag = null;
        String rulesetVersion = null;
        String rulesetId = null;
        String accountId = null;
        CreateAccountRuleset200Response response = api.listAccountRulesetVersionRulesByTag(ruleTag, rulesetVersion, rulesetId, accountId);
        // TODO: test validations
    }

    /**
     * List an account ruleset&#39;s versions
     *
     * Fetches the versions of an account ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccountRulesetVersionsTest() throws ApiException {
        String rulesetId = null;
        String accountId = null;
        ListAccountRulesets200Response response = api.listAccountRulesetVersions(rulesetId, accountId);
        // TODO: test validations
    }

    /**
     * List account rulesets
     *
     * Fetches all rulesets at the account level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccountRulesetsTest() throws ApiException {
        String accountId = null;
        ListAccountRulesets200Response response = api.listAccountRulesets(accountId);
        // TODO: test validations
    }

    /**
     * Update an account entry point ruleset
     *
     * Updates an account entry point ruleset, creating a new version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountEntrypointRulesetTest() throws ApiException {
        RulesetsRulesetPhase rulesetPhase = null;
        String accountId = null;
        UpdateAccountEntrypointRulesetRequest updateAccountEntrypointRulesetRequest = null;
        CreateAccountRuleset200Response response = api.updateAccountEntrypointRuleset(rulesetPhase, accountId, updateAccountEntrypointRulesetRequest);
        // TODO: test validations
    }

    /**
     * Update an account ruleset
     *
     * Updates an account ruleset, creating a new version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountRulesetTest() throws ApiException {
        String rulesetId = null;
        String accountId = null;
        UpdateAccountEntrypointRulesetRequest updateAccountEntrypointRulesetRequest = null;
        CreateAccountRuleset200Response response = api.updateAccountRuleset(rulesetId, accountId, updateAccountEntrypointRulesetRequest);
        // TODO: test validations
    }

    /**
     * Update an account ruleset rule
     *
     * Updates an existing rule in an account ruleset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountRulesetRuleTest() throws ApiException {
        String ruleId = null;
        String rulesetId = null;
        String accountId = null;
        CreateAccountRulesetRuleRequest createAccountRulesetRuleRequest = null;
        CreateAccountRuleset200Response response = api.updateAccountRulesetRule(ruleId, rulesetId, accountId, createAccountRulesetRuleRequest);
        // TODO: test validations
    }

}
