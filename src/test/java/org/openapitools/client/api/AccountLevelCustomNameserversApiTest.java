/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountLevelCustomNameserversAddAccountCustomNameserver4XXResponse;
import org.openapitools.client.model.AccountLevelCustomNameserversDeleteAccountCustomNameserver4XXResponse;
import org.openapitools.client.model.AccountLevelCustomNameserversGetEligibleZonesForAccountCustomNameservers4XXResponse;
import org.openapitools.client.model.AccountLevelCustomNameserversListAccountCustomNameservers4XXResponse;
import org.openapitools.client.model.DnsCustomNameserversAcnsResponseCollection;
import org.openapitools.client.model.DnsCustomNameserversAcnsResponseSingle;
import org.openapitools.client.model.DnsCustomNameserversAvailabilityResponse;
import org.openapitools.client.model.DnsCustomNameserversCustomNSInput;
import org.openapitools.client.model.DnsCustomNameserversEmptyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountLevelCustomNameserversApi
 */
@Disabled
public class AccountLevelCustomNameserversApiTest {

    private final AccountLevelCustomNameserversApi api = new AccountLevelCustomNameserversApi();

    /**
     * Add Account Custom Nameserver
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountLevelCustomNameserversAddAccountCustomNameserverTest() throws ApiException {
        String accountId = null;
        DnsCustomNameserversCustomNSInput dnsCustomNameserversCustomNSInput = null;
        DnsCustomNameserversAcnsResponseSingle response = api.accountLevelCustomNameserversAddAccountCustomNameserver(accountId, dnsCustomNameserversCustomNSInput);
        // TODO: test validations
    }

    /**
     * Delete Account Custom Nameserver
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountLevelCustomNameserversDeleteAccountCustomNameserverTest() throws ApiException {
        String customNsId = null;
        String accountId = null;
        DnsCustomNameserversEmptyResponse response = api.accountLevelCustomNameserversDeleteAccountCustomNameserver(customNsId, accountId);
        // TODO: test validations
    }

    /**
     * Get Eligible Zones for Account Custom Nameservers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountLevelCustomNameserversGetEligibleZonesForAccountCustomNameserversTest() throws ApiException {
        String accountId = null;
        DnsCustomNameserversAvailabilityResponse response = api.accountLevelCustomNameserversGetEligibleZonesForAccountCustomNameservers(accountId);
        // TODO: test validations
    }

    /**
     * List Account Custom Nameservers
     *
     * List an account&#39;s custom nameservers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountLevelCustomNameserversListAccountCustomNameserversTest() throws ApiException {
        String accountId = null;
        DnsCustomNameserversAcnsResponseCollection response = api.accountLevelCustomNameserversListAccountCustomNameservers(accountId);
        // TODO: test validations
    }

    /**
     * Verify Account Custom Nameserver Glue Records
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountLevelCustomNameserversVerifyAccountCustomNameserverGlueRecordsTest() throws ApiException {
        String accountId = null;
        DnsCustomNameserversAcnsResponseCollection response = api.accountLevelCustomNameserversVerifyAccountCustomNameserverGlueRecords(accountId);
        // TODO: test validations
    }

}
