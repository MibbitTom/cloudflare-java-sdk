/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.WorkerDomainAttachToDomain4XXResponse;
import org.openapitools.client.model.WorkerDomainAttachToDomainRequest;
import org.openapitools.client.model.WorkerDomainListDomains4XXResponse;
import org.openapitools.client.model.WorkersDomainResponseCollection;
import org.openapitools.client.model.WorkersDomainResponseSingle;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkerDomainApi
 */
@Disabled
public class WorkerDomainApiTest {

    private final WorkerDomainApi api = new WorkerDomainApi();

    /**
     * Attach to Domain
     *
     * Attaches a Worker to a zone and hostname.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workerDomainAttachToDomainTest() throws ApiException {
        Object accountId = null;
        WorkerDomainAttachToDomainRequest workerDomainAttachToDomainRequest = null;
        WorkersDomainResponseSingle response = api.workerDomainAttachToDomain(accountId, workerDomainAttachToDomainRequest);
        // TODO: test validations
    }

    /**
     * Detach from Domain
     *
     * Detaches a Worker from a zone and hostname.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workerDomainDetachFromDomainTest() throws ApiException {
        Object domainId = null;
        Object accountId = null;
        api.workerDomainDetachFromDomain(domainId, accountId);
        // TODO: test validations
    }

    /**
     * Get a Domain
     *
     * Gets a Worker domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workerDomainGetADomainTest() throws ApiException {
        Object domainId = null;
        Object accountId = null;
        WorkersDomainResponseSingle response = api.workerDomainGetADomain(domainId, accountId);
        // TODO: test validations
    }

    /**
     * List Domains
     *
     * Lists all Worker Domains for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workerDomainListDomainsTest() throws ApiException {
        Object accountId = null;
        String zoneName = null;
        String service = null;
        Object zoneId = null;
        String hostname = null;
        String environment = null;
        WorkersDomainResponseCollection response = api.workerDomainListDomains(accountId, zoneName, service, zoneId, hostname, environment);
        // TODO: test validations
    }

}
