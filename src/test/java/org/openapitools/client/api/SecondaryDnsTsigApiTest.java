/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SecondaryDnsResponseCollection;
import org.openapitools.client.model.SecondaryDnsSchemasIdResponse;
import org.openapitools.client.model.SecondaryDnsSingleResponse;
import org.openapitools.client.model.SecondaryDnsTsig;
import org.openapitools.client.model.SecondaryDnsTsigCreateTsig4XXResponse;
import org.openapitools.client.model.SecondaryDnsTsigDeleteTsig4XXResponse;
import org.openapitools.client.model.SecondaryDnsTsigListTsiGs4XXResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecondaryDnsTsigApi
 */
@Disabled
public class SecondaryDnsTsigApiTest {

    private final SecondaryDnsTsigApi api = new SecondaryDnsTsigApi();

    /**
     * Create TSIG
     *
     * Create TSIG.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsTsigCreateTsigTest() throws ApiException {
        Object accountId = null;
        SecondaryDnsTsig secondaryDnsTsig = null;
        SecondaryDnsSingleResponse response = api.secondaryDnsTsigCreateTsig(accountId, secondaryDnsTsig);
        // TODO: test validations
    }

    /**
     * Delete TSIG
     *
     * Delete TSIG.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsTsigDeleteTsigTest() throws ApiException {
        Object tsigId = null;
        Object accountId = null;
        SecondaryDnsSchemasIdResponse response = api.secondaryDnsTsigDeleteTsig(tsigId, accountId);
        // TODO: test validations
    }

    /**
     * List TSIGs
     *
     * List TSIGs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsTsigListTsiGsTest() throws ApiException {
        Object accountId = null;
        SecondaryDnsResponseCollection response = api.secondaryDnsTsigListTsiGs(accountId);
        // TODO: test validations
    }

    /**
     * TSIG Details
     *
     * Get TSIG.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsTsigTsigDetailsTest() throws ApiException {
        Object tsigId = null;
        Object accountId = null;
        SecondaryDnsSingleResponse response = api.secondaryDnsTsigTsigDetails(tsigId, accountId);
        // TODO: test validations
    }

    /**
     * Update TSIG
     *
     * Modify TSIG.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsTsigUpdateTsigTest() throws ApiException {
        Object tsigId = null;
        Object accountId = null;
        SecondaryDnsTsig secondaryDnsTsig = null;
        SecondaryDnsSingleResponse response = api.secondaryDnsTsigUpdateTsig(tsigId, accountId, secondaryDnsTsig);
        // TODO: test validations
    }

}
