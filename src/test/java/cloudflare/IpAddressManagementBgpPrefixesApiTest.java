/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.AddressingBgpPrefixUpdateAdvertisement;
import org.openapitools.client.model.AddressingResponseCollectionBgp;
import org.openapitools.client.model.AddressingSingleResponseBgp;
import org.openapitools.client.model.IpAddressManagementPrefixesFetchBgpPrefix4XXResponse;
import org.openapitools.client.model.IpAddressManagementPrefixesListBgpPrefixes4XXResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IpAddressManagementBgpPrefixesApi
 */
@Disabled
public class IpAddressManagementBgpPrefixesApiTest {

    private final IpAddressManagementBgpPrefixesApi api = new IpAddressManagementBgpPrefixesApi();

    /**
     * Fetch BGP Prefix
     *
     * Retrieve a single BGP Prefix according to its identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipAddressManagementPrefixesFetchBgpPrefixTest() throws ApiException {
        String accountId = null;
        String prefixId = null;
        String bgpPrefixId = null;
        AddressingSingleResponseBgp response = api.ipAddressManagementPrefixesFetchBgpPrefix(accountId, prefixId, bgpPrefixId);
        // TODO: test validations
    }

    /**
     * List BGP Prefixes
     *
     * List all BGP Prefixes within the specified IP Prefix. BGP Prefixes are used to control which specific subnets are advertised to the Internet. It is possible to advertise subnets more specific than an IP Prefix by creating more specific BGP Prefixes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipAddressManagementPrefixesListBgpPrefixesTest() throws ApiException {
        String accountId = null;
        String prefixId = null;
        AddressingResponseCollectionBgp response = api.ipAddressManagementPrefixesListBgpPrefixes(accountId, prefixId);
        // TODO: test validations
    }

    /**
     * Update BGP Prefix
     *
     * Update the properties of a BGP Prefix, such as the on demand advertisement status (advertised or withdrawn).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipAddressManagementPrefixesUpdateBgpPrefixTest() throws ApiException {
        String accountId = null;
        String prefixId = null;
        String bgpPrefixId = null;
        AddressingBgpPrefixUpdateAdvertisement addressingBgpPrefixUpdateAdvertisement = null;
        AddressingSingleResponseBgp response = api.ipAddressManagementPrefixesUpdateBgpPrefix(accountId, prefixId, bgpPrefixId, addressingBgpPrefixUpdateAdvertisement);
        // TODO: test validations
    }

}
