/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.AccountLevelCustomNameserversUsageForAZoneGetAccountCustomNameserverRelatedZoneMetadata4XXResponse;
import org.openapitools.client.model.AccountLevelCustomNameserversUsageForAZoneSetAccountCustomNameserverRelatedZoneMetadata4XXResponse;
import org.openapitools.client.model.DnsCustomNameserversGetResponse;
import org.openapitools.client.model.DnsCustomNameserversSchemasEmptyResponse;
import org.openapitools.client.model.DnsCustomNameserversZoneMetadata;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountLevelCustomNameserversUsageForAZoneApi
 */
@Disabled
public class AccountLevelCustomNameserversUsageForAZoneApiTest {

    private final AccountLevelCustomNameserversUsageForAZoneApi api = new AccountLevelCustomNameserversUsageForAZoneApi();

    /**
     * Get Account Custom Nameserver Related Zone Metadata
     *
     * Get metadata for account-level custom nameservers on a zone. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountLevelCustomNameserversUsageForAZoneGetAccountCustomNameserverRelatedZoneMetadataTest() throws ApiException {
        String zoneId = null;
        DnsCustomNameserversGetResponse response = api.accountLevelCustomNameserversUsageForAZoneGetAccountCustomNameserverRelatedZoneMetadata(zoneId);
        // TODO: test validations
    }

    /**
     * Set Account Custom Nameserver Related Zone Metadata
     *
     * Set metadata for account-level custom nameservers on a zone.  If you would like new zones in the account to use account custom nameservers by default, use PUT /accounts/:identifier to set the account setting use_account_custom_ns_by_default to true. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountLevelCustomNameserversUsageForAZoneSetAccountCustomNameserverRelatedZoneMetadataTest() throws ApiException {
        String zoneId = null;
        DnsCustomNameserversZoneMetadata dnsCustomNameserversZoneMetadata = null;
        DnsCustomNameserversSchemasEmptyResponse response = api.accountLevelCustomNameserversUsageForAZoneSetAccountCustomNameserverRelatedZoneMetadata(zoneId, dnsCustomNameserversZoneMetadata);
        // TODO: test validations
    }

}
