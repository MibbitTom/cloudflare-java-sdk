/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.DeviceDexTestDeleteDeviceDexTest4XXResponse;
import org.openapitools.client.model.DeviceDexTestDetails4XXResponse;
import org.openapitools.client.model.TeamsDevicesDeviceDexTestSchemasHttp;
import org.openapitools.client.model.TeamsDevicesDexResponseCollection;
import org.openapitools.client.model.TeamsDevicesDexSingleResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeviceDexTestsApi
 */
@Disabled
public class DeviceDexTestsApiTest {

    private final DeviceDexTestsApi api = new DeviceDexTestsApi();

    /**
     * Create Device DEX test
     *
     * Create a DEX test.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceDexTestCreateDeviceDexTestTest() throws ApiException {
        Object accountId = null;
        TeamsDevicesDeviceDexTestSchemasHttp teamsDevicesDeviceDexTestSchemasHttp = null;
        TeamsDevicesDexSingleResponse response = api.deviceDexTestCreateDeviceDexTest(accountId, teamsDevicesDeviceDexTestSchemasHttp);
        // TODO: test validations
    }

    /**
     * Delete Device DEX test
     *
     * Delete a Device DEX test. Returns the remaining device dex tests for the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceDexTestDeleteDeviceDexTestTest() throws ApiException {
        Object accountId = null;
        String dexTestId = null;
        TeamsDevicesDexResponseCollection response = api.deviceDexTestDeleteDeviceDexTest(accountId, dexTestId);
        // TODO: test validations
    }

    /**
     * List Device DEX tests
     *
     * Fetch all DEX tests.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceDexTestDetailsTest() throws ApiException {
        Object accountId = null;
        TeamsDevicesDexResponseCollection response = api.deviceDexTestDetails(accountId);
        // TODO: test validations
    }

    /**
     * Get Device DEX test
     *
     * Fetch a single DEX test.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceDexTestGetDeviceDexTestTest() throws ApiException {
        Object accountId = null;
        String dexTestId = null;
        TeamsDevicesDexSingleResponse response = api.deviceDexTestGetDeviceDexTest(accountId, dexTestId);
        // TODO: test validations
    }

    /**
     * Update Device DEX test
     *
     * Update a DEX test.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceDexTestUpdateDeviceDexTestTest() throws ApiException {
        Object accountId = null;
        String dexTestId = null;
        TeamsDevicesDeviceDexTestSchemasHttp teamsDevicesDeviceDexTestSchemasHttp = null;
        TeamsDevicesDexSingleResponse response = api.deviceDexTestUpdateDeviceDexTest(accountId, dexTestId, teamsDevicesDeviceDexTestSchemasHttp);
        // TODO: test validations
    }

}
