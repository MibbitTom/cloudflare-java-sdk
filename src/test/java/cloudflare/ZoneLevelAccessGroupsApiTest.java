/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.AccessApiResponseCommonFailure;
import org.openapitools.client.model.AccessGroupsComponentsSchemasResponseCollection;
import org.openapitools.client.model.AccessGroupsComponentsSchemasSingleResponse;
import org.openapitools.client.model.AccessIdResponse;
import org.openapitools.client.model.ZoneLevelAccessGroupsCreateAnAccessGroupRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZoneLevelAccessGroupsApi
 */
@Disabled
public class ZoneLevelAccessGroupsApiTest {

    private final ZoneLevelAccessGroupsApi api = new ZoneLevelAccessGroupsApi();

    /**
     * Create an Access group
     *
     * Creates a new Access group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessGroupsCreateAnAccessGroupTest() throws ApiException {
        String identifier = null;
        ZoneLevelAccessGroupsCreateAnAccessGroupRequest zoneLevelAccessGroupsCreateAnAccessGroupRequest = null;
        AccessGroupsComponentsSchemasSingleResponse response = api.zoneLevelAccessGroupsCreateAnAccessGroup(identifier, zoneLevelAccessGroupsCreateAnAccessGroupRequest);
        // TODO: test validations
    }

    /**
     * Delete an Access group
     *
     * Deletes an Access group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessGroupsDeleteAnAccessGroupTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessIdResponse response = api.zoneLevelAccessGroupsDeleteAnAccessGroup(uuid, identifier);
        // TODO: test validations
    }

    /**
     * Get an Access group
     *
     * Fetches a single Access group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessGroupsGetAnAccessGroupTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessGroupsComponentsSchemasSingleResponse response = api.zoneLevelAccessGroupsGetAnAccessGroup(uuid, identifier);
        // TODO: test validations
    }

    /**
     * List Access groups
     *
     * Lists all Access groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessGroupsListAccessGroupsTest() throws ApiException {
        String identifier = null;
        AccessGroupsComponentsSchemasResponseCollection response = api.zoneLevelAccessGroupsListAccessGroups(identifier);
        // TODO: test validations
    }

    /**
     * Update an Access group
     *
     * Updates a configured Access group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessGroupsUpdateAnAccessGroupTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        ZoneLevelAccessGroupsCreateAnAccessGroupRequest zoneLevelAccessGroupsCreateAnAccessGroupRequest = null;
        AccessGroupsComponentsSchemasSingleResponse response = api.zoneLevelAccessGroupsUpdateAnAccessGroup(uuid, identifier, zoneLevelAccessGroupsCreateAnAccessGroupRequest);
        // TODO: test validations
    }

}
