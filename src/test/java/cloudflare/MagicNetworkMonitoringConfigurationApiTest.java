/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.MagicNetworkMonitoringConfigurationListAccountConfiguration4XXResponse;
import org.openapitools.client.model.MagicVisibilityMnmConfigSingleResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MagicNetworkMonitoringConfigurationApi
 */
@Disabled
public class MagicNetworkMonitoringConfigurationApiTest {

    private final MagicNetworkMonitoringConfigurationApi api = new MagicNetworkMonitoringConfigurationApi();

    /**
     * Create account configuration
     *
     * Create a new network monitoring configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationCreateAccountConfigurationTest() throws ApiException {
        String accountId = null;
        MagicVisibilityMnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationCreateAccountConfiguration(accountId);
        // TODO: test validations
    }

    /**
     * Delete account configuration
     *
     * Delete an existing network monitoring configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationDeleteAccountConfigurationTest() throws ApiException {
        String accountId = null;
        MagicVisibilityMnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationDeleteAccountConfiguration(accountId);
        // TODO: test validations
    }

    /**
     * List account configuration
     *
     * Lists default sampling and router IPs for account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationListAccountConfigurationTest() throws ApiException {
        String accountId = null;
        MagicVisibilityMnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationListAccountConfiguration(accountId);
        // TODO: test validations
    }

    /**
     * List rules and account configuration
     *
     * Lists default sampling, router IPs, and rules for account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationListRulesAndAccountConfigurationTest() throws ApiException {
        String accountId = null;
        MagicVisibilityMnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationListRulesAndAccountConfiguration(accountId);
        // TODO: test validations
    }

    /**
     * Update account configuration fields
     *
     * Update fields in an existing network monitoring configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationUpdateAccountConfigurationFieldsTest() throws ApiException {
        String accountId = null;
        MagicVisibilityMnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationUpdateAccountConfigurationFields(accountId);
        // TODO: test validations
    }

    /**
     * Update an entire account configuration
     *
     * Update an existing network monitoring configuration, requires the entire configuration to be updated at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void magicNetworkMonitoringConfigurationUpdateAnEntireAccountConfigurationTest() throws ApiException {
        String accountId = null;
        MagicVisibilityMnmConfigSingleResponse response = api.magicNetworkMonitoringConfigurationUpdateAnEntireAccountConfiguration(accountId);
        // TODO: test validations
    }

}
