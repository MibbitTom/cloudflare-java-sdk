/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.AaaApiResponseCollection;
import org.openapitools.client.model.AaaIdResponse;
import org.openapitools.client.model.AaaSchemasSingleResponse;
import org.openapitools.client.model.AaaWebhooksComponentsSchemasResponseCollection;
import org.openapitools.client.model.NotificationDestinationsWithPagerDutyConnectPagerDuty4XXResponse;
import org.openapitools.client.model.NotificationDestinationsWithPagerDutyDeletePagerDutyServices4XXResponse;
import org.openapitools.client.model.NotificationWebhooksCreateAWebhookRequest;
import org.openapitools.client.model.NotificationWebhooksGetAWebhook4XXResponse;
import org.openapitools.client.model.NotificationWebhooksListWebhooks4XXResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationWebhooksApi
 */
@Disabled
public class NotificationWebhooksApiTest {

    private final NotificationWebhooksApi api = new NotificationWebhooksApi();

    /**
     * Create a webhook
     *
     * Creates a new webhook destination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationWebhooksCreateAWebhookTest() throws ApiException {
        String accountId = null;
        NotificationWebhooksCreateAWebhookRequest notificationWebhooksCreateAWebhookRequest = null;
        AaaIdResponse response = api.notificationWebhooksCreateAWebhook(accountId, notificationWebhooksCreateAWebhookRequest);
        // TODO: test validations
    }

    /**
     * Delete a webhook
     *
     * Delete a configured webhook destination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationWebhooksDeleteAWebhookTest() throws ApiException {
        String webhookId = null;
        String accountId = null;
        AaaApiResponseCollection response = api.notificationWebhooksDeleteAWebhook(webhookId, accountId);
        // TODO: test validations
    }

    /**
     * Get a webhook
     *
     * Get details for a single webhooks destination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationWebhooksGetAWebhookTest() throws ApiException {
        String accountId = null;
        String webhookId = null;
        AaaSchemasSingleResponse response = api.notificationWebhooksGetAWebhook(accountId, webhookId);
        // TODO: test validations
    }

    /**
     * List webhooks
     *
     * Gets a list of all configured webhook destinations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationWebhooksListWebhooksTest() throws ApiException {
        String accountId = null;
        AaaWebhooksComponentsSchemasResponseCollection response = api.notificationWebhooksListWebhooks(accountId);
        // TODO: test validations
    }

    /**
     * Update a webhook
     *
     * Update a webhook destination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationWebhooksUpdateAWebhookTest() throws ApiException {
        String webhookId = null;
        String accountId = null;
        NotificationWebhooksCreateAWebhookRequest notificationWebhooksCreateAWebhookRequest = null;
        AaaIdResponse response = api.notificationWebhooksUpdateAWebhook(webhookId, accountId, notificationWebhooksCreateAWebhookRequest);
        // TODO: test validations
    }

}
