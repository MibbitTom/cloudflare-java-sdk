/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.AddressingIdResponse;
import org.openapitools.client.model.AddressingSchemasResponseCollection;
import org.openapitools.client.model.AddressingSchemasSingleResponse;
import org.openapitools.client.model.IpAddressManagementPrefixDelegationCreatePrefixDelegation4XXResponse;
import org.openapitools.client.model.IpAddressManagementPrefixDelegationCreatePrefixDelegationRequest;
import org.openapitools.client.model.IpAddressManagementPrefixDelegationDeletePrefixDelegation4XXResponse;
import org.openapitools.client.model.IpAddressManagementPrefixDelegationListPrefixDelegations4XXResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IpAddressManagementPrefixDelegationApi
 */
@Disabled
public class IpAddressManagementPrefixDelegationApiTest {

    private final IpAddressManagementPrefixDelegationApi api = new IpAddressManagementPrefixDelegationApi();

    /**
     * Create Prefix Delegation
     *
     * Create a new account delegation for a given IP prefix.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipAddressManagementPrefixDelegationCreatePrefixDelegationTest() throws ApiException {
        String prefixId = null;
        String accountId = null;
        IpAddressManagementPrefixDelegationCreatePrefixDelegationRequest ipAddressManagementPrefixDelegationCreatePrefixDelegationRequest = null;
        AddressingSchemasSingleResponse response = api.ipAddressManagementPrefixDelegationCreatePrefixDelegation(prefixId, accountId, ipAddressManagementPrefixDelegationCreatePrefixDelegationRequest);
        // TODO: test validations
    }

    /**
     * Delete Prefix Delegation
     *
     * Delete an account delegation for a given IP prefix.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipAddressManagementPrefixDelegationDeletePrefixDelegationTest() throws ApiException {
        String delegationId = null;
        String prefixId = null;
        String accountId = null;
        AddressingIdResponse response = api.ipAddressManagementPrefixDelegationDeletePrefixDelegation(delegationId, prefixId, accountId);
        // TODO: test validations
    }

    /**
     * List Prefix Delegations
     *
     * List all delegations for a given account IP prefix.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipAddressManagementPrefixDelegationListPrefixDelegationsTest() throws ApiException {
        String prefixId = null;
        String accountId = null;
        AddressingSchemasResponseCollection response = api.ipAddressManagementPrefixDelegationListPrefixDelegations(prefixId, accountId);
        // TODO: test validations
    }

}
