/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.CustomSslForAZoneCreateSslConfiguration4XXResponse;
import org.openapitools.client.model.TlsCertificatesAndHostnamesCertificateResponseSingle;
import org.openapitools.client.model.TlsCertificatesAndHostnamesComponentsSchemasCertificateResponseCollection;
import org.openapitools.client.model.TlsCertificatesAndHostnamesEnabledResponse;
import org.openapitools.client.model.ZoneLevelAuthenticatedOriginPullsGetEnablementSettingForZone4XXResponse;
import org.openapitools.client.model.ZoneLevelAuthenticatedOriginPullsListCertificates4XXResponse;
import org.openapitools.client.model.ZoneLevelAuthenticatedOriginPullsSetEnablementForZoneRequest;
import org.openapitools.client.model.ZoneLevelAuthenticatedOriginPullsUploadCertificateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZoneLevelAuthenticatedOriginPullsApi
 */
@Disabled
public class ZoneLevelAuthenticatedOriginPullsApiTest {

    private final ZoneLevelAuthenticatedOriginPullsApi api = new ZoneLevelAuthenticatedOriginPullsApi();

    /**
     * Delete Certificate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAuthenticatedOriginPullsDeleteCertificateTest() throws ApiException {
        String certificateId = null;
        String zoneId = null;
        TlsCertificatesAndHostnamesCertificateResponseSingle response = api.zoneLevelAuthenticatedOriginPullsDeleteCertificate(certificateId, zoneId);
        // TODO: test validations
    }

    /**
     * Get Certificate Details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAuthenticatedOriginPullsGetCertificateDetailsTest() throws ApiException {
        String certificateId = null;
        String zoneId = null;
        TlsCertificatesAndHostnamesCertificateResponseSingle response = api.zoneLevelAuthenticatedOriginPullsGetCertificateDetails(certificateId, zoneId);
        // TODO: test validations
    }

    /**
     * Get Enablement Setting for Zone
     *
     * Get whether zone-level authenticated origin pulls is enabled or not. It is false by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAuthenticatedOriginPullsGetEnablementSettingForZoneTest() throws ApiException {
        String zoneId = null;
        TlsCertificatesAndHostnamesEnabledResponse response = api.zoneLevelAuthenticatedOriginPullsGetEnablementSettingForZone(zoneId);
        // TODO: test validations
    }

    /**
     * List Certificates
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAuthenticatedOriginPullsListCertificatesTest() throws ApiException {
        String zoneId = null;
        TlsCertificatesAndHostnamesComponentsSchemasCertificateResponseCollection response = api.zoneLevelAuthenticatedOriginPullsListCertificates(zoneId);
        // TODO: test validations
    }

    /**
     * Set Enablement for Zone
     *
     * Enable or disable zone-level authenticated origin pulls. &#39;enabled&#39; should be set true either before/after the certificate is uploaded to see the certificate in use.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAuthenticatedOriginPullsSetEnablementForZoneTest() throws ApiException {
        String zoneId = null;
        ZoneLevelAuthenticatedOriginPullsSetEnablementForZoneRequest zoneLevelAuthenticatedOriginPullsSetEnablementForZoneRequest = null;
        TlsCertificatesAndHostnamesEnabledResponse response = api.zoneLevelAuthenticatedOriginPullsSetEnablementForZone(zoneId, zoneLevelAuthenticatedOriginPullsSetEnablementForZoneRequest);
        // TODO: test validations
    }

    /**
     * Upload Certificate
     *
     * Upload your own certificate you want Cloudflare to use for edge-to-origin communication to override the shared certificate. Please note that it is important to keep only one certificate active. Also, make sure to enable zone-level authenticated origin pulls by making a PUT call to settings endpoint to see the uploaded certificate in use.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAuthenticatedOriginPullsUploadCertificateTest() throws ApiException {
        String zoneId = null;
        ZoneLevelAuthenticatedOriginPullsUploadCertificateRequest zoneLevelAuthenticatedOriginPullsUploadCertificateRequest = null;
        TlsCertificatesAndHostnamesCertificateResponseSingle response = api.zoneLevelAuthenticatedOriginPullsUploadCertificate(zoneId, zoneLevelAuthenticatedOriginPullsUploadCertificateRequest);
        // TODO: test validations
    }

}
