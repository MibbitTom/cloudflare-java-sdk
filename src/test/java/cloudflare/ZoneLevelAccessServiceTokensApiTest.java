/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.AccessApiResponseCommonFailure;
import org.openapitools.client.model.AccessComponentsSchemasResponseCollection;
import org.openapitools.client.model.AccessCreateResponse;
import org.openapitools.client.model.AccessServiceTokensComponentsSchemasSingleResponse;
import org.openapitools.client.model.AccessServiceTokensCreateAServiceTokenRequest;
import org.openapitools.client.model.AccessServiceTokensUpdateAServiceTokenRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZoneLevelAccessServiceTokensApi
 */
@Disabled
public class ZoneLevelAccessServiceTokensApiTest {

    private final ZoneLevelAccessServiceTokensApi api = new ZoneLevelAccessServiceTokensApi();

    /**
     * Create a service token
     *
     * Generates a new service token. **Note:** This is the only time you can get the Client Secret. If you lose the Client Secret, you will have to create a new service token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensCreateAServiceTokenTest() throws ApiException {
        String identifier = null;
        AccessServiceTokensCreateAServiceTokenRequest accessServiceTokensCreateAServiceTokenRequest = null;
        AccessCreateResponse response = api.zoneLevelAccessServiceTokensCreateAServiceToken(identifier, accessServiceTokensCreateAServiceTokenRequest);
        // TODO: test validations
    }

    /**
     * Delete a service token
     *
     * Deletes a service token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensDeleteAServiceTokenTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessServiceTokensComponentsSchemasSingleResponse response = api.zoneLevelAccessServiceTokensDeleteAServiceToken(uuid, identifier);
        // TODO: test validations
    }

    /**
     * List service tokens
     *
     * Lists all service tokens.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensListServiceTokensTest() throws ApiException {
        String identifier = null;
        AccessComponentsSchemasResponseCollection response = api.zoneLevelAccessServiceTokensListServiceTokens(identifier);
        // TODO: test validations
    }

    /**
     * Update a service token
     *
     * Updates a configured service token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessServiceTokensUpdateAServiceTokenTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessServiceTokensUpdateAServiceTokenRequest accessServiceTokensUpdateAServiceTokenRequest = null;
        AccessServiceTokensComponentsSchemasSingleResponse response = api.zoneLevelAccessServiceTokensUpdateAServiceToken(uuid, identifier, accessServiceTokensUpdateAServiceTokenRequest);
        // TODO: test validations
    }

}
