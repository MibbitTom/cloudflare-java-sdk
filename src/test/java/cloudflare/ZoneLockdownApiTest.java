/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.FirewallZonelockdownResponseCollection;
import org.openapitools.client.model.FirewallZonelockdownResponseSingle;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ZoneLockdownCreateAZoneLockdownRule4XXResponse;
import org.openapitools.client.model.ZoneLockdownDeleteAZoneLockdownRule200Response;
import org.openapitools.client.model.ZoneLockdownDeleteAZoneLockdownRule4XXResponse;
import org.openapitools.client.model.ZoneLockdownListZoneLockdownRules4XXResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZoneLockdownApi
 */
@Disabled
public class ZoneLockdownApiTest {

    private final ZoneLockdownApi api = new ZoneLockdownApi();

    /**
     * Create a Zone Lockdown rule
     *
     * Creates a new Zone Lockdown rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLockdownCreateAZoneLockdownRuleTest() throws ApiException {
        String zoneIdentifier = null;
        Object body = null;
        FirewallZonelockdownResponseSingle response = api.zoneLockdownCreateAZoneLockdownRule(zoneIdentifier, body);
        // TODO: test validations
    }

    /**
     * Delete a Zone Lockdown rule
     *
     * Deletes an existing Zone Lockdown rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLockdownDeleteAZoneLockdownRuleTest() throws ApiException {
        String id = null;
        String zoneIdentifier = null;
        ZoneLockdownDeleteAZoneLockdownRule200Response response = api.zoneLockdownDeleteAZoneLockdownRule(id, zoneIdentifier);
        // TODO: test validations
    }

    /**
     * Get a Zone Lockdown rule
     *
     * Fetches the details of a Zone Lockdown rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLockdownGetAZoneLockdownRuleTest() throws ApiException {
        String id = null;
        String zoneIdentifier = null;
        FirewallZonelockdownResponseSingle response = api.zoneLockdownGetAZoneLockdownRule(id, zoneIdentifier);
        // TODO: test validations
    }

    /**
     * List Zone Lockdown rules
     *
     * Fetches Zone Lockdown rules. You can filter the results using several optional parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLockdownListZoneLockdownRulesTest() throws ApiException {
        String zoneIdentifier = null;
        BigDecimal page = null;
        String description = null;
        OffsetDateTime modifiedOn = null;
        String ip = null;
        BigDecimal priority = null;
        String uriSearch = null;
        String ipRangeSearch = null;
        BigDecimal perPage = null;
        OffsetDateTime createdOn = null;
        String descriptionSearch = null;
        String ipSearch = null;
        FirewallZonelockdownResponseCollection response = api.zoneLockdownListZoneLockdownRules(zoneIdentifier, page, description, modifiedOn, ip, priority, uriSearch, ipRangeSearch, perPage, createdOn, descriptionSearch, ipSearch);
        // TODO: test validations
    }

    /**
     * Update a Zone Lockdown rule
     *
     * Updates an existing Zone Lockdown rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLockdownUpdateAZoneLockdownRuleTest() throws ApiException {
        String id = null;
        String zoneIdentifier = null;
        Object body = null;
        FirewallZonelockdownResponseSingle response = api.zoneLockdownUpdateAZoneLockdownRule(id, zoneIdentifier, body);
        // TODO: test validations
    }

}
