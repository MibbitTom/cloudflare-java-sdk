/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.RadarGetAnnotationsOutages200Response;
import org.openapitools.client.model.RadarGetAnnotationsOutagesTop200Response;
import org.openapitools.client.model.WorkersAiListFinetunes400Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RadarAnnotationsApi
 */
@Disabled
public class RadarAnnotationsApiTest {

    private final RadarAnnotationsApi api = new RadarAnnotationsApi();

    /**
     * Get latest Internet outages and anomalies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void radarGetAnnotationsOutagesTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String dateRange = null;
        OffsetDateTime dateStart = null;
        OffsetDateTime dateEnd = null;
        Integer asn = null;
        String location = null;
        String format = null;
        RadarGetAnnotationsOutages200Response response = api.radarGetAnnotationsOutages(limit, offset, dateRange, dateStart, dateEnd, asn, location, format);
        // TODO: test validations
    }

    /**
     * Get the number of outages for locations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void radarGetAnnotationsOutagesTopTest() throws ApiException {
        Integer limit = null;
        String dateRange = null;
        OffsetDateTime dateStart = null;
        OffsetDateTime dateEnd = null;
        String format = null;
        RadarGetAnnotationsOutagesTop200Response response = api.radarGetAnnotationsOutagesTop(limit, dateRange, dateStart, dateEnd, format);
        // TODO: test validations
    }

}
