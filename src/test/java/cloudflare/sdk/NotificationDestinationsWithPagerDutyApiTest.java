/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import cloudflare.sdk.models.AaaApiResponseCollection;
import cloudflare.sdk.models.AaaComponentsSchemasResponseCollection;
import cloudflare.sdk.models.AaaIdResponse;
import cloudflare.sdk.models.AaaSensitiveIdResponse;
import cloudflare.sdk.models.NotificationDestinationsWithPagerDutyConnectPagerDuty4XXResponse;
import cloudflare.sdk.models.NotificationDestinationsWithPagerDutyDeletePagerDutyServices4XXResponse;
import cloudflare.sdk.models.NotificationDestinationsWithPagerDutyListPagerDutyServices4XXResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationDestinationsWithPagerDutyApi
 */
@Disabled
public class NotificationDestinationsWithPagerDutyApiTest {

    private final NotificationDestinationsWithPagerDutyApi api = new NotificationDestinationsWithPagerDutyApi();

    /**
     * Create PagerDuty integration token
     *
     * Creates a new token for integrating with PagerDuty.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationDestinationsWithPagerDutyConnectPagerDutyTest() throws ApiException {
        String accountId = null;
        AaaSensitiveIdResponse response = api.notificationDestinationsWithPagerDutyConnectPagerDuty(accountId);
        // TODO: test validations
    }

    /**
     * Connect PagerDuty
     *
     * Links PagerDuty with the account using the integration token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationDestinationsWithPagerDutyConnectPagerDutyTokenTest() throws ApiException {
        String accountId = null;
        String tokenId = null;
        AaaIdResponse response = api.notificationDestinationsWithPagerDutyConnectPagerDutyToken(accountId, tokenId);
        // TODO: test validations
    }

    /**
     * Delete PagerDuty Services
     *
     * Deletes all the PagerDuty Services connected to the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationDestinationsWithPagerDutyDeletePagerDutyServicesTest() throws ApiException {
        String accountId = null;
        AaaApiResponseCollection response = api.notificationDestinationsWithPagerDutyDeletePagerDutyServices(accountId);
        // TODO: test validations
    }

    /**
     * List PagerDuty services
     *
     * Get a list of all configured PagerDuty services.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationDestinationsWithPagerDutyListPagerDutyServicesTest() throws ApiException {
        String accountId = null;
        AaaComponentsSchemasResponseCollection response = api.notificationDestinationsWithPagerDutyListPagerDutyServices(accountId);
        // TODO: test validations
    }

}
