/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import cloudflare.sdk.models.SecondaryDnsDnsSecondarySecondaryZone;
import cloudflare.sdk.models.SecondaryDnsForceResponse;
import cloudflare.sdk.models.SecondaryDnsIdResponse;
import cloudflare.sdk.models.SecondaryDnsSecondaryZoneDeleteSecondaryZoneConfiguration4XXResponse;
import cloudflare.sdk.models.SecondaryDnsSecondaryZoneForceAxfr4XXResponse;
import cloudflare.sdk.models.SecondaryDnsSecondaryZoneSecondaryZoneConfigurationDetails4XXResponse;
import cloudflare.sdk.models.SecondaryDnsSingleResponseIncoming;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecondaryDnsSecondaryZoneApi
 */
@Disabled
public class SecondaryDnsSecondaryZoneApiTest {

    private final SecondaryDnsSecondaryZoneApi api = new SecondaryDnsSecondaryZoneApi();

    /**
     * Create Secondary Zone Configuration
     *
     * Create secondary zone configuration for incoming zone transfers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneCreateSecondaryZoneConfigurationTest() throws ApiException {
        Object zoneId = null;
        SecondaryDnsDnsSecondarySecondaryZone secondaryDnsDnsSecondarySecondaryZone = null;
        SecondaryDnsSingleResponseIncoming response = api.secondaryDnsSecondaryZoneCreateSecondaryZoneConfiguration(zoneId, secondaryDnsDnsSecondarySecondaryZone);
        // TODO: test validations
    }

    /**
     * Delete Secondary Zone Configuration
     *
     * Delete secondary zone configuration for incoming zone transfers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneDeleteSecondaryZoneConfigurationTest() throws ApiException {
        Object zoneId = null;
        SecondaryDnsIdResponse response = api.secondaryDnsSecondaryZoneDeleteSecondaryZoneConfiguration(zoneId);
        // TODO: test validations
    }

    /**
     * Force AXFR
     *
     * Sends AXFR zone transfer request to primary nameserver(s).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneForceAxfrTest() throws ApiException {
        Object zoneId = null;
        SecondaryDnsForceResponse response = api.secondaryDnsSecondaryZoneForceAxfr(zoneId);
        // TODO: test validations
    }

    /**
     * Secondary Zone Configuration Details
     *
     * Get secondary zone configuration for incoming zone transfers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneSecondaryZoneConfigurationDetailsTest() throws ApiException {
        Object zoneId = null;
        SecondaryDnsSingleResponseIncoming response = api.secondaryDnsSecondaryZoneSecondaryZoneConfigurationDetails(zoneId);
        // TODO: test validations
    }

    /**
     * Update Secondary Zone Configuration
     *
     * Update secondary zone configuration for incoming zone transfers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secondaryDnsSecondaryZoneUpdateSecondaryZoneConfigurationTest() throws ApiException {
        Object zoneId = null;
        SecondaryDnsDnsSecondarySecondaryZone secondaryDnsDnsSecondarySecondaryZone = null;
        SecondaryDnsSingleResponseIncoming response = api.secondaryDnsSecondaryZoneUpdateSecondaryZoneConfiguration(zoneId, secondaryDnsDnsSecondarySecondaryZone);
        // TODO: test validations
    }

}
