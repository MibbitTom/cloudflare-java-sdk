/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import cloudflare.sdk.models.WorkersAiPostRunCfBaaiBgeBaseEnV15400Response;
import cloudflare.sdk.models.WorkersAiPostRunCfBytedanceStableDiffusionXlLightning200Response;
import cloudflare.sdk.models.WorkersAiPostRunCfBytedanceStableDiffusionXlLightningRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkersAiTextToImageApi
 */
@Disabled
public class WorkersAiTextToImageApiTest {

    private final WorkersAiTextToImageApi api = new WorkersAiTextToImageApi();

    /**
     * Execute @cf/bytedance/stable-diffusion-xl-lightning model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiPostRunCfBytedanceStableDiffusionXlLightningTest() throws ApiException {
        String accountId = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightningRequest workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightning200Response response = api.workersAiPostRunCfBytedanceStableDiffusionXlLightning(accountId, workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest);
        // TODO: test validations
    }

    /**
     * Execute @cf/lykon/dreamshaper-8-lcm model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiPostRunCfLykonDreamshaper8LcmTest() throws ApiException {
        String accountId = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightningRequest workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightning200Response response = api.workersAiPostRunCfLykonDreamshaper8Lcm(accountId, workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest);
        // TODO: test validations
    }

    /**
     * Execute @cf/runwayml/stable-diffusion-v1-5-img2img model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiPostRunCfRunwaymlStableDiffusionV15Img2imgTest() throws ApiException {
        String accountId = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightningRequest workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightning200Response response = api.workersAiPostRunCfRunwaymlStableDiffusionV15Img2img(accountId, workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest);
        // TODO: test validations
    }

    /**
     * Execute @cf/runwayml/stable-diffusion-v1-5-inpainting model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiPostRunCfRunwaymlStableDiffusionV15InpaintingTest() throws ApiException {
        String accountId = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightningRequest workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightning200Response response = api.workersAiPostRunCfRunwaymlStableDiffusionV15Inpainting(accountId, workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest);
        // TODO: test validations
    }

    /**
     * Execute @cf/stabilityai/stable-diffusion-xl-base-1.0 model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiPostRunCfStabilityaiStableDiffusionXlBase10Test() throws ApiException {
        String accountId = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightningRequest workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest = null;
        WorkersAiPostRunCfBytedanceStableDiffusionXlLightning200Response response = api.workersAiPostRunCfStabilityaiStableDiffusionXlBase10(accountId, workersAiPostRunCfBytedanceStableDiffusionXlLightningRequest);
        // TODO: test validations
    }

}
