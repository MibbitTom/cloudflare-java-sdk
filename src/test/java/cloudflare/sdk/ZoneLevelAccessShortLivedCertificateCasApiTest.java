/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import cloudflare.sdk.models.AccessApiResponseCommonFailure;
import cloudflare.sdk.models.AccessCaComponentsSchemasResponseCollection;
import cloudflare.sdk.models.AccessCaComponentsSchemasSingleResponse;
import cloudflare.sdk.models.AccessSchemasIdResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZoneLevelAccessShortLivedCertificateCasApi
 */
@Disabled
public class ZoneLevelAccessShortLivedCertificateCasApiTest {

    private final ZoneLevelAccessShortLivedCertificateCasApi api = new ZoneLevelAccessShortLivedCertificateCasApi();

    /**
     * Create a short-lived certificate CA
     *
     * Generates a new short-lived certificate CA and public key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessShortLivedCertificateCAsCreateAShortLivedCertificateCaTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessCaComponentsSchemasSingleResponse response = api.zoneLevelAccessShortLivedCertificateCAsCreateAShortLivedCertificateCa(uuid, identifier);
        // TODO: test validations
    }

    /**
     * Delete a short-lived certificate CA
     *
     * Deletes a short-lived certificate CA.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessShortLivedCertificateCAsDeleteAShortLivedCertificateCaTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessSchemasIdResponse response = api.zoneLevelAccessShortLivedCertificateCAsDeleteAShortLivedCertificateCa(uuid, identifier);
        // TODO: test validations
    }

    /**
     * Get a short-lived certificate CA
     *
     * Fetches a short-lived certificate CA and its public key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessShortLivedCertificateCAsGetAShortLivedCertificateCaTest() throws ApiException {
        String uuid = null;
        String identifier = null;
        AccessCaComponentsSchemasSingleResponse response = api.zoneLevelAccessShortLivedCertificateCAsGetAShortLivedCertificateCa(uuid, identifier);
        // TODO: test validations
    }

    /**
     * List short-lived certificate CAs
     *
     * Lists short-lived certificate CAs and their public keys.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelAccessShortLivedCertificateCAsListShortLivedCertificateCAsTest() throws ApiException {
        String identifier = null;
        AccessCaComponentsSchemasResponseCollection response = api.zoneLevelAccessShortLivedCertificateCAsListShortLivedCertificateCAs(identifier);
        // TODO: test validations
    }

}
