/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import cloudflare.sdk.models.AccessApiResponseCommonFailure;
import cloudflare.sdk.models.AccessEmptyResponse;
import cloudflare.sdk.models.AccessOrganizationsComponentsSchemasSingleResponse;
import cloudflare.sdk.models.ZeroTrustOrganizationRevokeAllAccessTokensForAUserRequest;
import cloudflare.sdk.models.ZoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationRequest;
import cloudflare.sdk.models.ZoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZoneLevelZeroTrustOrganizationApi
 */
@Disabled
public class ZoneLevelZeroTrustOrganizationApiTest {

    private final ZoneLevelZeroTrustOrganizationApi api = new ZoneLevelZeroTrustOrganizationApi();

    /**
     * Create your Zero Trust organization
     *
     * Sets up a Zero Trust organization for your account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationTest() throws ApiException {
        Object identifier = null;
        ZoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationRequest zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationRequest = null;
        AccessOrganizationsComponentsSchemasSingleResponse response = api.zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganization(identifier, zoneLevelZeroTrustOrganizationCreateYourZeroTrustOrganizationRequest);
        // TODO: test validations
    }

    /**
     * Get your Zero Trust organization
     *
     * Returns the configuration for your Zero Trust organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganizationTest() throws ApiException {
        Object identifier = null;
        AccessOrganizationsComponentsSchemasSingleResponse response = api.zoneLevelZeroTrustOrganizationGetYourZeroTrustOrganization(identifier);
        // TODO: test validations
    }

    /**
     * Revoke all Access tokens for a user
     *
     * Revokes a user&#39;s access across all applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUserTest() throws ApiException {
        Object identifier = null;
        ZeroTrustOrganizationRevokeAllAccessTokensForAUserRequest zeroTrustOrganizationRevokeAllAccessTokensForAUserRequest = null;
        AccessEmptyResponse response = api.zoneLevelZeroTrustOrganizationRevokeAllAccessTokensForAUser(identifier, zeroTrustOrganizationRevokeAllAccessTokensForAUserRequest);
        // TODO: test validations
    }

    /**
     * Update your Zero Trust organization
     *
     * Updates the configuration for your Zero Trust organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationTest() throws ApiException {
        Object identifier = null;
        ZoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationRequest zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationRequest = null;
        AccessOrganizationsComponentsSchemasSingleResponse response = api.zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganization(identifier, zoneLevelZeroTrustOrganizationUpdateYourZeroTrustOrganizationRequest);
        // TODO: test validations
    }

}
