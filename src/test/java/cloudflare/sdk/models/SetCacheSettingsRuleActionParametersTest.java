/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import cloudflare.sdk.models.BrowserTTL;
import cloudflare.sdk.models.CacheKey;
import cloudflare.sdk.models.CacheReserve;
import cloudflare.sdk.models.EdgeTTL;
import cloudflare.sdk.models.ServeStale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SetCacheSettingsRuleActionParameters
 */
public class SetCacheSettingsRuleActionParametersTest {
    private final SetCacheSettingsRuleActionParameters model = new SetCacheSettingsRuleActionParameters();

    /**
     * Model tests for SetCacheSettingsRuleActionParameters
     */
    @Test
    public void testSetCacheSettingsRuleActionParameters() {
        // TODO: test SetCacheSettingsRuleActionParameters
    }

    /**
     * Test the property 'additionalCacheablePorts'
     */
    @Test
    public void additionalCacheablePortsTest() {
        // TODO: test additionalCacheablePorts
    }

    /**
     * Test the property 'browserTtl'
     */
    @Test
    public void browserTtlTest() {
        // TODO: test browserTtl
    }

    /**
     * Test the property 'cache'
     */
    @Test
    public void cacheTest() {
        // TODO: test cache
    }

    /**
     * Test the property 'cacheKey'
     */
    @Test
    public void cacheKeyTest() {
        // TODO: test cacheKey
    }

    /**
     * Test the property 'cacheReserve'
     */
    @Test
    public void cacheReserveTest() {
        // TODO: test cacheReserve
    }

    /**
     * Test the property 'edgeTtl'
     */
    @Test
    public void edgeTtlTest() {
        // TODO: test edgeTtl
    }

    /**
     * Test the property 'originCacheControl'
     */
    @Test
    public void originCacheControlTest() {
        // TODO: test originCacheControl
    }

    /**
     * Test the property 'originErrorPagePassthru'
     */
    @Test
    public void originErrorPagePassthruTest() {
        // TODO: test originErrorPagePassthru
    }

    /**
     * Test the property 'readTimeout'
     */
    @Test
    public void readTimeoutTest() {
        // TODO: test readTimeout
    }

    /**
     * Test the property 'respectStrongEtags'
     */
    @Test
    public void respectStrongEtagsTest() {
        // TODO: test respectStrongEtags
    }

    /**
     * Test the property 'serveStale'
     */
    @Test
    public void serveStaleTest() {
        // TODO: test serveStale
    }

}
