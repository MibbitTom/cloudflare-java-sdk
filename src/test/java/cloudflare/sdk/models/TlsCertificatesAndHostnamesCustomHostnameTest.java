/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import cloudflare.sdk.models.TlsCertificatesAndHostnamesComponentsSchemasStatus;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesCustomMetadata;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesOwnershipVerification;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesOwnershipVerificationHttp;
import cloudflare.sdk.models.TlsCertificatesAndHostnamesSsl;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TlsCertificatesAndHostnamesCustomHostname
 */
class TlsCertificatesAndHostnamesCustomHostnameTest {
    private final TlsCertificatesAndHostnamesCustomHostname model = new TlsCertificatesAndHostnamesCustomHostname();

    /**
     * Model tests for TlsCertificatesAndHostnamesCustomHostname
     */
    @Test
    void testTlsCertificatesAndHostnamesCustomHostname() {
        // TODO: test TlsCertificatesAndHostnamesCustomHostname
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'customMetadata'
     */
    @Test
    void customMetadataTest() {
        // TODO: test customMetadata
    }

    /**
     * Test the property 'customOriginServer'
     */
    @Test
    void customOriginServerTest() {
        // TODO: test customOriginServer
    }

    /**
     * Test the property 'customOriginSni'
     */
    @Test
    void customOriginSniTest() {
        // TODO: test customOriginSni
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'ownershipVerification'
     */
    @Test
    void ownershipVerificationTest() {
        // TODO: test ownershipVerification
    }

    /**
     * Test the property 'ownershipVerificationHttp'
     */
    @Test
    void ownershipVerificationHttpTest() {
        // TODO: test ownershipVerificationHttp
    }

    /**
     * Test the property 'ssl'
     */
    @Test
    void sslTest() {
        // TODO: test ssl
    }

    /**
     * Test the property 'status'
     */
    @Test
    void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'verificationErrors'
     */
    @Test
    void verificationErrorsTest() {
        // TODO: test verificationErrors
    }

}
