/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WaitingroomEventDetailsResult
 */
public class WaitingroomEventDetailsResultTest {
    private final WaitingroomEventDetailsResult model = new WaitingroomEventDetailsResult();

    /**
     * Model tests for WaitingroomEventDetailsResult
     */
    @Test
    public void testWaitingroomEventDetailsResult() {
        // TODO: test WaitingroomEventDetailsResult
    }

    /**
     * Test the property 'createdOn'
     */
    @Test
    public void createdOnTest() {
        // TODO: test createdOn
    }

    /**
     * Test the property 'customPageHtml'
     */
    @Test
    public void customPageHtmlTest() {
        // TODO: test customPageHtml
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'disableSessionRenewal'
     */
    @Test
    public void disableSessionRenewalTest() {
        // TODO: test disableSessionRenewal
    }

    /**
     * Test the property 'eventEndTime'
     */
    @Test
    public void eventEndTimeTest() {
        // TODO: test eventEndTime
    }

    /**
     * Test the property 'eventStartTime'
     */
    @Test
    public void eventStartTimeTest() {
        // TODO: test eventStartTime
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'modifiedOn'
     */
    @Test
    public void modifiedOnTest() {
        // TODO: test modifiedOn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'newUsersPerMinute'
     */
    @Test
    public void newUsersPerMinuteTest() {
        // TODO: test newUsersPerMinute
    }

    /**
     * Test the property 'prequeueStartTime'
     */
    @Test
    public void prequeueStartTimeTest() {
        // TODO: test prequeueStartTime
    }

    /**
     * Test the property 'queueingMethod'
     */
    @Test
    public void queueingMethodTest() {
        // TODO: test queueingMethod
    }

    /**
     * Test the property 'sessionDuration'
     */
    @Test
    public void sessionDurationTest() {
        // TODO: test sessionDuration
    }

    /**
     * Test the property 'shuffleAtEventStart'
     */
    @Test
    public void shuffleAtEventStartTest() {
        // TODO: test shuffleAtEventStart
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'totalActiveUsers'
     */
    @Test
    public void totalActiveUsersTest() {
        // TODO: test totalActiveUsers
    }

}
