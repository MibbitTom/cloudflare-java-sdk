/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import cloudflare.sdk.models.ZarazZarazConfigBaseSettingsContextEnricher;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ZarazZarazConfigBaseSettings
 */
public class ZarazZarazConfigBaseSettingsTest {
    private final ZarazZarazConfigBaseSettings model = new ZarazZarazConfigBaseSettings();

    /**
     * Model tests for ZarazZarazConfigBaseSettings
     */
    @Test
    public void testZarazZarazConfigBaseSettings() {
        // TODO: test ZarazZarazConfigBaseSettings
    }

    /**
     * Test the property 'autoInjectScript'
     */
    @Test
    public void autoInjectScriptTest() {
        // TODO: test autoInjectScript
    }

    /**
     * Test the property 'contextEnricher'
     */
    @Test
    public void contextEnricherTest() {
        // TODO: test contextEnricher
    }

    /**
     * Test the property 'cookieDomain'
     */
    @Test
    public void cookieDomainTest() {
        // TODO: test cookieDomain
    }

    /**
     * Test the property 'ecommerce'
     */
    @Test
    public void ecommerceTest() {
        // TODO: test ecommerce
    }

    /**
     * Test the property 'eventsApiPath'
     */
    @Test
    public void eventsApiPathTest() {
        // TODO: test eventsApiPath
    }

    /**
     * Test the property 'hideExternalReferer'
     */
    @Test
    public void hideExternalRefererTest() {
        // TODO: test hideExternalReferer
    }

    /**
     * Test the property 'hideIPAddress'
     */
    @Test
    public void hideIPAddressTest() {
        // TODO: test hideIPAddress
    }

    /**
     * Test the property 'hideQueryParams'
     */
    @Test
    public void hideQueryParamsTest() {
        // TODO: test hideQueryParams
    }

    /**
     * Test the property 'hideUserAgent'
     */
    @Test
    public void hideUserAgentTest() {
        // TODO: test hideUserAgent
    }

    /**
     * Test the property 'initPath'
     */
    @Test
    public void initPathTest() {
        // TODO: test initPath
    }

    /**
     * Test the property 'injectIframes'
     */
    @Test
    public void injectIframesTest() {
        // TODO: test injectIframes
    }

    /**
     * Test the property 'mcRootPath'
     */
    @Test
    public void mcRootPathTest() {
        // TODO: test mcRootPath
    }

    /**
     * Test the property 'scriptPath'
     */
    @Test
    public void scriptPathTest() {
        // TODO: test scriptPath
    }

    /**
     * Test the property 'trackPath'
     */
    @Test
    public void trackPathTest() {
        // TODO: test trackPath
    }

}
