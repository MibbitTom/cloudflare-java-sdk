/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UrlscannerGetScan200ResponseResultScanPerformanceInner
 */
public class UrlscannerGetScan200ResponseResultScanPerformanceInnerTest {
    private final UrlscannerGetScan200ResponseResultScanPerformanceInner model = new UrlscannerGetScan200ResponseResultScanPerformanceInner();

    /**
     * Model tests for UrlscannerGetScan200ResponseResultScanPerformanceInner
     */
    @Test
    public void testUrlscannerGetScan200ResponseResultScanPerformanceInner() {
        // TODO: test UrlscannerGetScan200ResponseResultScanPerformanceInner
    }

    /**
     * Test the property 'connectEnd'
     */
    @Test
    public void connectEndTest() {
        // TODO: test connectEnd
    }

    /**
     * Test the property 'connectStart'
     */
    @Test
    public void connectStartTest() {
        // TODO: test connectStart
    }

    /**
     * Test the property 'decodedBodySize'
     */
    @Test
    public void decodedBodySizeTest() {
        // TODO: test decodedBodySize
    }

    /**
     * Test the property 'domComplete'
     */
    @Test
    public void domCompleteTest() {
        // TODO: test domComplete
    }

    /**
     * Test the property 'domContentLoadedEventEnd'
     */
    @Test
    public void domContentLoadedEventEndTest() {
        // TODO: test domContentLoadedEventEnd
    }

    /**
     * Test the property 'domContentLoadedEventStart'
     */
    @Test
    public void domContentLoadedEventStartTest() {
        // TODO: test domContentLoadedEventStart
    }

    /**
     * Test the property 'domInteractive'
     */
    @Test
    public void domInteractiveTest() {
        // TODO: test domInteractive
    }

    /**
     * Test the property 'domainLookupEnd'
     */
    @Test
    public void domainLookupEndTest() {
        // TODO: test domainLookupEnd
    }

    /**
     * Test the property 'domainLookupStart'
     */
    @Test
    public void domainLookupStartTest() {
        // TODO: test domainLookupStart
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'encodedBodySize'
     */
    @Test
    public void encodedBodySizeTest() {
        // TODO: test encodedBodySize
    }

    /**
     * Test the property 'entryType'
     */
    @Test
    public void entryTypeTest() {
        // TODO: test entryType
    }

    /**
     * Test the property 'fetchStart'
     */
    @Test
    public void fetchStartTest() {
        // TODO: test fetchStart
    }

    /**
     * Test the property 'initiatorType'
     */
    @Test
    public void initiatorTypeTest() {
        // TODO: test initiatorType
    }

    /**
     * Test the property 'loadEventEnd'
     */
    @Test
    public void loadEventEndTest() {
        // TODO: test loadEventEnd
    }

    /**
     * Test the property 'loadEventStart'
     */
    @Test
    public void loadEventStartTest() {
        // TODO: test loadEventStart
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nextHopProtocol'
     */
    @Test
    public void nextHopProtocolTest() {
        // TODO: test nextHopProtocol
    }

    /**
     * Test the property 'redirectCount'
     */
    @Test
    public void redirectCountTest() {
        // TODO: test redirectCount
    }

    /**
     * Test the property 'redirectEnd'
     */
    @Test
    public void redirectEndTest() {
        // TODO: test redirectEnd
    }

    /**
     * Test the property 'redirectStart'
     */
    @Test
    public void redirectStartTest() {
        // TODO: test redirectStart
    }

    /**
     * Test the property 'requestStart'
     */
    @Test
    public void requestStartTest() {
        // TODO: test requestStart
    }

    /**
     * Test the property 'responseEnd'
     */
    @Test
    public void responseEndTest() {
        // TODO: test responseEnd
    }

    /**
     * Test the property 'responseStart'
     */
    @Test
    public void responseStartTest() {
        // TODO: test responseStart
    }

    /**
     * Test the property 'secureConnectionStart'
     */
    @Test
    public void secureConnectionStartTest() {
        // TODO: test secureConnectionStart
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'transferSize'
     */
    @Test
    public void transferSizeTest() {
        // TODO: test transferSize
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'unloadEventEnd'
     */
    @Test
    public void unloadEventEndTest() {
        // TODO: test unloadEventEnd
    }

    /**
     * Test the property 'unloadEventStart'
     */
    @Test
    public void unloadEventStartTest() {
        // TODO: test unloadEventStart
    }

    /**
     * Test the property 'workerStart'
     */
    @Test
    public void workerStartTest() {
        // TODO: test workerStart
    }

}
