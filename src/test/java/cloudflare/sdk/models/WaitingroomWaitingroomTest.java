/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import cloudflare.sdk.models.WaitingroomAdditionalRoutesInner;
import cloudflare.sdk.models.WaitingroomCookieAttributes;
import cloudflare.sdk.models.WaitingroomDefaultTemplateLanguage;
import cloudflare.sdk.models.WaitingroomQueueingMethod;
import cloudflare.sdk.models.WaitingroomQueueingStatusCode;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WaitingroomWaitingroom
 */
public class WaitingroomWaitingroomTest {
    private final WaitingroomWaitingroom model = new WaitingroomWaitingroom();

    /**
     * Model tests for WaitingroomWaitingroom
     */
    @Test
    public void testWaitingroomWaitingroom() {
        // TODO: test WaitingroomWaitingroom
    }

    /**
     * Test the property 'additionalRoutes'
     */
    @Test
    public void additionalRoutesTest() {
        // TODO: test additionalRoutes
    }

    /**
     * Test the property 'cookieAttributes'
     */
    @Test
    public void cookieAttributesTest() {
        // TODO: test cookieAttributes
    }

    /**
     * Test the property 'cookieSuffix'
     */
    @Test
    public void cookieSuffixTest() {
        // TODO: test cookieSuffix
    }

    /**
     * Test the property 'createdOn'
     */
    @Test
    public void createdOnTest() {
        // TODO: test createdOn
    }

    /**
     * Test the property 'customPageHtml'
     */
    @Test
    public void customPageHtmlTest() {
        // TODO: test customPageHtml
    }

    /**
     * Test the property 'defaultTemplateLanguage'
     */
    @Test
    public void defaultTemplateLanguageTest() {
        // TODO: test defaultTemplateLanguage
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'disableSessionRenewal'
     */
    @Test
    public void disableSessionRenewalTest() {
        // TODO: test disableSessionRenewal
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'jsonResponseEnabled'
     */
    @Test
    public void jsonResponseEnabledTest() {
        // TODO: test jsonResponseEnabled
    }

    /**
     * Test the property 'modifiedOn'
     */
    @Test
    public void modifiedOnTest() {
        // TODO: test modifiedOn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'newUsersPerMinute'
     */
    @Test
    public void newUsersPerMinuteTest() {
        // TODO: test newUsersPerMinute
    }

    /**
     * Test the property 'nextEventPrequeueStartTime'
     */
    @Test
    public void nextEventPrequeueStartTimeTest() {
        // TODO: test nextEventPrequeueStartTime
    }

    /**
     * Test the property 'nextEventStartTime'
     */
    @Test
    public void nextEventStartTimeTest() {
        // TODO: test nextEventStartTime
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'queueAll'
     */
    @Test
    public void queueAllTest() {
        // TODO: test queueAll
    }

    /**
     * Test the property 'queueingMethod'
     */
    @Test
    public void queueingMethodTest() {
        // TODO: test queueingMethod
    }

    /**
     * Test the property 'queueingStatusCode'
     */
    @Test
    public void queueingStatusCodeTest() {
        // TODO: test queueingStatusCode
    }

    /**
     * Test the property 'sessionDuration'
     */
    @Test
    public void sessionDurationTest() {
        // TODO: test sessionDuration
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'totalActiveUsers'
     */
    @Test
    public void totalActiveUsersTest() {
        // TODO: test totalActiveUsers
    }

}
