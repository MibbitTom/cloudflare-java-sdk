/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RadarGetBgpRoutesStats200ResponseResultStats
 */
public class RadarGetBgpRoutesStats200ResponseResultStatsTest {
    private final RadarGetBgpRoutesStats200ResponseResultStats model = new RadarGetBgpRoutesStats200ResponseResultStats();

    /**
     * Model tests for RadarGetBgpRoutesStats200ResponseResultStats
     */
    @Test
    public void testRadarGetBgpRoutesStats200ResponseResultStats() {
        // TODO: test RadarGetBgpRoutesStats200ResponseResultStats
    }

    /**
     * Test the property 'distinctOrigins'
     */
    @Test
    public void distinctOriginsTest() {
        // TODO: test distinctOrigins
    }

    /**
     * Test the property 'distinctOriginsIpv4'
     */
    @Test
    public void distinctOriginsIpv4Test() {
        // TODO: test distinctOriginsIpv4
    }

    /**
     * Test the property 'distinctOriginsIpv6'
     */
    @Test
    public void distinctOriginsIpv6Test() {
        // TODO: test distinctOriginsIpv6
    }

    /**
     * Test the property 'distinctPrefixes'
     */
    @Test
    public void distinctPrefixesTest() {
        // TODO: test distinctPrefixes
    }

    /**
     * Test the property 'distinctPrefixesIpv4'
     */
    @Test
    public void distinctPrefixesIpv4Test() {
        // TODO: test distinctPrefixesIpv4
    }

    /**
     * Test the property 'distinctPrefixesIpv6'
     */
    @Test
    public void distinctPrefixesIpv6Test() {
        // TODO: test distinctPrefixesIpv6
    }

    /**
     * Test the property 'routesInvalid'
     */
    @Test
    public void routesInvalidTest() {
        // TODO: test routesInvalid
    }

    /**
     * Test the property 'routesInvalidIpv4'
     */
    @Test
    public void routesInvalidIpv4Test() {
        // TODO: test routesInvalidIpv4
    }

    /**
     * Test the property 'routesInvalidIpv6'
     */
    @Test
    public void routesInvalidIpv6Test() {
        // TODO: test routesInvalidIpv6
    }

    /**
     * Test the property 'routesTotal'
     */
    @Test
    public void routesTotalTest() {
        // TODO: test routesTotal
    }

    /**
     * Test the property 'routesTotalIpv4'
     */
    @Test
    public void routesTotalIpv4Test() {
        // TODO: test routesTotalIpv4
    }

    /**
     * Test the property 'routesTotalIpv6'
     */
    @Test
    public void routesTotalIpv6Test() {
        // TODO: test routesTotalIpv6
    }

    /**
     * Test the property 'routesUnknown'
     */
    @Test
    public void routesUnknownTest() {
        // TODO: test routesUnknown
    }

    /**
     * Test the property 'routesUnknownIpv4'
     */
    @Test
    public void routesUnknownIpv4Test() {
        // TODO: test routesUnknownIpv4
    }

    /**
     * Test the property 'routesUnknownIpv6'
     */
    @Test
    public void routesUnknownIpv6Test() {
        // TODO: test routesUnknownIpv6
    }

    /**
     * Test the property 'routesValid'
     */
    @Test
    public void routesValidTest() {
        // TODO: test routesValid
    }

    /**
     * Test the property 'routesValidIpv4'
     */
    @Test
    public void routesValidIpv4Test() {
        // TODO: test routesValidIpv4
    }

    /**
     * Test the property 'routesValidIpv6'
     */
    @Test
    public void routesValidIpv6Test() {
        // TODO: test routesValidIpv6
    }

}
