/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import cloudflare.sdk.models.CloudforceOneApiResponseCommon;
import cloudflare.sdk.models.CloudforceOneApiResponseCommonFailure;
import cloudflare.sdk.models.CloudforceOnePriorityQuota200Response;
import cloudflare.sdk.models.CloudforceOneRequestConstants200Response;
import cloudflare.sdk.models.CloudforceOneRequestEdit;
import cloudflare.sdk.models.CloudforceOneRequestList;
import cloudflare.sdk.models.CloudforceOneRequestList200Response;
import cloudflare.sdk.models.CloudforceOneRequestMessageEdit;
import cloudflare.sdk.models.CloudforceOneRequestMessageList;
import cloudflare.sdk.models.CloudforceOneRequestMessageList200Response;
import cloudflare.sdk.models.CloudforceOneRequestMessageNew200Response;
import cloudflare.sdk.models.CloudforceOneRequestNew200Response;
import cloudflare.sdk.models.CloudforceOneRequestTypes200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RequestForInformationRfiApi
 */
@Disabled
public class RequestForInformationRfiApiTest {

    private final RequestForInformationRfiApi api = new RequestForInformationRfiApi();

    /**
     * Get Request Priority, Status, and TLP constants
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestConstantsTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOneRequestConstants200Response response = api.cloudforceOneRequestConstants(accountIdentifier);
        // TODO: test validations
    }

    /**
     * Delete a Request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestDeleteTest() throws ApiException {
        String accountIdentifier = null;
        String requestIdentifier = null;
        CloudforceOneApiResponseCommon response = api.cloudforceOneRequestDelete(accountIdentifier, requestIdentifier);
        // TODO: test validations
    }

    /**
     * Get a Request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestGetTest() throws ApiException {
        String accountIdentifier = null;
        String requestIdentifier = null;
        CloudforceOneRequestNew200Response response = api.cloudforceOneRequestGet(accountIdentifier, requestIdentifier);
        // TODO: test validations
    }

    /**
     * List Requests
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestListTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOneRequestList cloudforceOneRequestList = null;
        CloudforceOneRequestList200Response response = api.cloudforceOneRequestList(accountIdentifier, cloudforceOneRequestList);
        // TODO: test validations
    }

    /**
     * Delete a Request Message
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestMessageDeleteTest() throws ApiException {
        String accountIdentifier = null;
        String requestIdentifier = null;
        Integer messageIdentifer = null;
        CloudforceOneApiResponseCommon response = api.cloudforceOneRequestMessageDelete(accountIdentifier, requestIdentifier, messageIdentifer);
        // TODO: test validations
    }

    /**
     * List Request Messages
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestMessageListTest() throws ApiException {
        String accountIdentifier = null;
        String requestIdentifier = null;
        CloudforceOneRequestMessageList cloudforceOneRequestMessageList = null;
        CloudforceOneRequestMessageList200Response response = api.cloudforceOneRequestMessageList(accountIdentifier, requestIdentifier, cloudforceOneRequestMessageList);
        // TODO: test validations
    }

    /**
     * Create a New Request Message
     *
     * Creating a request adds the request into the Cloudforce One queue for analysis. In addition to the content, a short title, type, priority, and releasability should be provided. If one is not provided a default will be assigned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestMessageNewTest() throws ApiException {
        String accountIdentifier = null;
        String requestIdentifier = null;
        CloudforceOneRequestMessageEdit cloudforceOneRequestMessageEdit = null;
        CloudforceOneRequestMessageNew200Response response = api.cloudforceOneRequestMessageNew(accountIdentifier, requestIdentifier, cloudforceOneRequestMessageEdit);
        // TODO: test validations
    }

    /**
     * Update a Request Message
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestMessageUpdateTest() throws ApiException {
        String accountIdentifier = null;
        String requestIdentifier = null;
        Integer messageIdentifer = null;
        CloudforceOneRequestEdit cloudforceOneRequestEdit = null;
        CloudforceOneRequestMessageNew200Response response = api.cloudforceOneRequestMessageUpdate(accountIdentifier, requestIdentifier, messageIdentifer, cloudforceOneRequestEdit);
        // TODO: test validations
    }

    /**
     * Create a New Request
     *
     * Creating a request adds the request into the Cloudforce One queue for analysis. In addition to the content, a short title, type, priority, and releasability should be provided. If one is not provided a default will be assigned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestNewTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOneRequestEdit cloudforceOneRequestEdit = null;
        CloudforceOneRequestNew200Response response = api.cloudforceOneRequestNew(accountIdentifier, cloudforceOneRequestEdit);
        // TODO: test validations
    }

    /**
     * Get Request Quota
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestQuotaTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOnePriorityQuota200Response response = api.cloudforceOneRequestQuota(accountIdentifier);
        // TODO: test validations
    }

    /**
     * Get Request Types
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestTypesTest() throws ApiException {
        String accountIdentifier = null;
        CloudforceOneRequestTypes200Response response = api.cloudforceOneRequestTypes(accountIdentifier);
        // TODO: test validations
    }

    /**
     * Update a Request
     *
     * Updating a request alters the request in the Cloudforce One queue. This API may be used to update any attributes of the request after the initial submission. Only fields that you choose to update need to be add to the request body
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudforceOneRequestUpdateTest() throws ApiException {
        String accountIdentifier = null;
        String requestIdentifier = null;
        CloudforceOneRequestEdit cloudforceOneRequestEdit = null;
        CloudforceOneRequestNew200Response response = api.cloudforceOneRequestUpdate(accountIdentifier, requestIdentifier, cloudforceOneRequestEdit);
        // TODO: test validations
    }

}
