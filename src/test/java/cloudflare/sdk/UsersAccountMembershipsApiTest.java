/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import java.math.BigDecimal;
import cloudflare.sdk.models.IamCollectionMembershipResponse;
import cloudflare.sdk.models.IamSingleMembershipResponse;
import cloudflare.sdk.models.UserSAccountMembershipsDeleteMembership200Response;
import cloudflare.sdk.models.UserSAccountMembershipsDeleteMembership4XXResponse;
import cloudflare.sdk.models.UserSAccountMembershipsListMemberships4XXResponse;
import cloudflare.sdk.models.UserSAccountMembershipsMembershipDetails4XXResponse;
import cloudflare.sdk.models.UserSAccountMembershipsUpdateMembershipRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersAccountMembershipsApi
 */
@Disabled
public class UsersAccountMembershipsApiTest {

    private final UsersAccountMembershipsApi api = new UsersAccountMembershipsApi();

    /**
     * Delete Membership
     *
     * Remove the associated member from an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userSAccountMembershipsDeleteMembershipTest() throws ApiException {
        String membershipId = null;
        UserSAccountMembershipsDeleteMembership200Response response = api.userSAccountMembershipsDeleteMembership(membershipId);
        // TODO: test validations
    }

    /**
     * List Memberships
     *
     * List memberships of accounts the user can access.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userSAccountMembershipsListMembershipsTest() throws ApiException {
        String accountName = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String order = null;
        String direction = null;
        String name = null;
        String status = null;
        IamCollectionMembershipResponse response = api.userSAccountMembershipsListMemberships(accountName, page, perPage, order, direction, name, status);
        // TODO: test validations
    }

    /**
     * Membership Details
     *
     * Get a specific membership.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userSAccountMembershipsMembershipDetailsTest() throws ApiException {
        String membershipId = null;
        IamSingleMembershipResponse response = api.userSAccountMembershipsMembershipDetails(membershipId);
        // TODO: test validations
    }

    /**
     * Update Membership
     *
     * Accept or reject this account invitation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userSAccountMembershipsUpdateMembershipTest() throws ApiException {
        String membershipId = null;
        UserSAccountMembershipsUpdateMembershipRequest userSAccountMembershipsUpdateMembershipRequest = null;
        IamSingleMembershipResponse response = api.userSAccountMembershipsUpdateMembership(membershipId, userSAccountMembershipsUpdateMembershipRequest);
        // TODO: test validations
    }

}
