/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare.sdk;

import cloudflare.ApiException;
import java.math.BigDecimal;
import cloudflare.sdk.models.LegacyJhsResponseCollection;
import cloudflare.sdk.models.LegacyJhsResponseSingle;
import cloudflare.sdk.models.LegacyJhsResponseSingleOriginDns;
import cloudflare.sdk.models.SpectrumApplicationsCreateSpectrumApplicationUsingANameForTheOrigin4XXResponse;
import cloudflare.sdk.models.SpectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginRequest;
import cloudflare.sdk.models.SpectrumApplicationsDeleteSpectrumApplication200Response;
import cloudflare.sdk.models.SpectrumApplicationsDeleteSpectrumApplication4XXResponse;
import cloudflare.sdk.models.SpectrumApplicationsGetSpectrumApplicationConfiguration4XXResponse;
import cloudflare.sdk.models.SpectrumApplicationsListSpectrumApplications4XXResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SpectrumApplicationsApi
 */
@Disabled
public class SpectrumApplicationsApiTest {

    private final SpectrumApplicationsApi api = new SpectrumApplicationsApi();

    /**
     * Create Spectrum application using a name for the origin
     *
     * Creates a new Spectrum application from a configuration using a name for the origin.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginTest() throws ApiException {
        String zone = null;
        SpectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginRequest spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginRequest = null;
        LegacyJhsResponseSingleOriginDns response = api.spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOrigin(zone, spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginRequest);
        // TODO: test validations
    }

    /**
     * Delete Spectrum application
     *
     * Deletes a previously existing application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spectrumApplicationsDeleteSpectrumApplicationTest() throws ApiException {
        String appId = null;
        String zone = null;
        SpectrumApplicationsDeleteSpectrumApplication200Response response = api.spectrumApplicationsDeleteSpectrumApplication(appId, zone);
        // TODO: test validations
    }

    /**
     * Get Spectrum application configuration
     *
     * Gets the application configuration of a specific application inside a zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spectrumApplicationsGetSpectrumApplicationConfigurationTest() throws ApiException {
        String appId = null;
        String zone = null;
        LegacyJhsResponseSingle response = api.spectrumApplicationsGetSpectrumApplicationConfiguration(appId, zone);
        // TODO: test validations
    }

    /**
     * List Spectrum applications
     *
     * Retrieves a list of currently existing Spectrum applications inside a zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spectrumApplicationsListSpectrumApplicationsTest() throws ApiException {
        String zone = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String direction = null;
        String order = null;
        LegacyJhsResponseCollection response = api.spectrumApplicationsListSpectrumApplications(zone, page, perPage, direction, order);
        // TODO: test validations
    }

    /**
     * Update Spectrum application configuration using a name for the origin
     *
     * Updates a previously existing application&#39;s configuration that uses a name for the origin.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spectrumApplicationsUpdateSpectrumApplicationConfigurationUsingANameForTheOriginTest() throws ApiException {
        String appId = null;
        String zone = null;
        SpectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginRequest spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginRequest = null;
        LegacyJhsResponseSingleOriginDns response = api.spectrumApplicationsUpdateSpectrumApplicationConfigurationUsingANameForTheOrigin(appId, zone, spectrumApplicationsCreateSpectrumApplicationUsingANameForTheOriginRequest);
        // TODO: test validations
    }

}
