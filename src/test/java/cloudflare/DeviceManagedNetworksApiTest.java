/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.DeviceManagedNetworksCreateDeviceManagedNetwork4XXResponse;
import org.openapitools.client.model.DeviceManagedNetworksCreateDeviceManagedNetworkRequest;
import org.openapitools.client.model.DeviceManagedNetworksListDeviceManagedNetworks4XXResponse;
import org.openapitools.client.model.DeviceManagedNetworksUpdateDeviceManagedNetworkRequest;
import org.openapitools.client.model.TeamsDevicesComponentsSchemasResponseCollection;
import org.openapitools.client.model.TeamsDevicesComponentsSchemasSingleResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeviceManagedNetworksApi
 */
@Disabled
public class DeviceManagedNetworksApiTest {

    private final DeviceManagedNetworksApi api = new DeviceManagedNetworksApi();

    /**
     * Create a device managed network
     *
     * Creates a new device managed network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceManagedNetworksCreateDeviceManagedNetworkTest() throws ApiException {
        Object accountId = null;
        DeviceManagedNetworksCreateDeviceManagedNetworkRequest deviceManagedNetworksCreateDeviceManagedNetworkRequest = null;
        TeamsDevicesComponentsSchemasSingleResponse response = api.deviceManagedNetworksCreateDeviceManagedNetwork(accountId, deviceManagedNetworksCreateDeviceManagedNetworkRequest);
        // TODO: test validations
    }

    /**
     * Delete a device managed network
     *
     * Deletes a device managed network and fetches a list of the remaining device managed networks for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceManagedNetworksDeleteDeviceManagedNetworkTest() throws ApiException {
        String networkId = null;
        Object accountId = null;
        TeamsDevicesComponentsSchemasResponseCollection response = api.deviceManagedNetworksDeleteDeviceManagedNetwork(networkId, accountId);
        // TODO: test validations
    }

    /**
     * Get device managed network details
     *
     * Fetches details for a single managed network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceManagedNetworksDeviceManagedNetworkDetailsTest() throws ApiException {
        String networkId = null;
        Object accountId = null;
        TeamsDevicesComponentsSchemasSingleResponse response = api.deviceManagedNetworksDeviceManagedNetworkDetails(networkId, accountId);
        // TODO: test validations
    }

    /**
     * List your device managed networks
     *
     * Fetches a list of managed networks for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceManagedNetworksListDeviceManagedNetworksTest() throws ApiException {
        Object accountId = null;
        TeamsDevicesComponentsSchemasResponseCollection response = api.deviceManagedNetworksListDeviceManagedNetworks(accountId);
        // TODO: test validations
    }

    /**
     * Update a device managed network
     *
     * Updates a configured device managed network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deviceManagedNetworksUpdateDeviceManagedNetworkTest() throws ApiException {
        String networkId = null;
        Object accountId = null;
        DeviceManagedNetworksUpdateDeviceManagedNetworkRequest deviceManagedNetworksUpdateDeviceManagedNetworkRequest = null;
        TeamsDevicesComponentsSchemasSingleResponse response = api.deviceManagedNetworksUpdateDeviceManagedNetwork(networkId, accountId, deviceManagedNetworksUpdateDeviceManagedNetworkRequest);
        // TODO: test validations
    }

}
