/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.WorkersAiListFinetunes400Response;
import org.openapitools.client.model.WorkersAiPostRunModel200Response;
import org.openapitools.client.model.WorkersAiPostRunModelRequest;
import org.openapitools.client.model.WorkersAiSearchAuthor200Response;
import org.openapitools.client.model.WorkersAiSearchAuthor404Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkersAiApi
 */
@Disabled
public class WorkersAiApiTest {

    private final WorkersAiApi api = new WorkersAiApi();

    /**
     * Execute AI model
     *
     * This endpoint provides users with the capability to run specific AI models on-demand.  By submitting the required input data, users can receive real-time predictions or results generated by the chosen AI model. The endpoint supports various AI model types, ensuring flexibility and adaptability for diverse use cases.  Model specific inputs available in [Cloudflare Docs](https://developers.cloudflare.com/workers-ai/models/).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiPostRunModelTest() throws ApiException {
        String accountId = null;
        String modelName = null;
        WorkersAiPostRunModelRequest workersAiPostRunModelRequest = null;
        WorkersAiPostRunModel200Response response = api.workersAiPostRunModel(accountId, modelName, workersAiPostRunModelRequest);
        // TODO: test validations
    }

    /**
     * Author Search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiSearchAuthorTest() throws ApiException {
        Integer accountId = null;
        WorkersAiSearchAuthor200Response response = api.workersAiSearchAuthor(accountId);
        // TODO: test validations
    }

    /**
     * Model Search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiSearchModelTest() throws ApiException {
        Integer accountId = null;
        Integer perPage = null;
        Integer page = null;
        String task = null;
        String author = null;
        BigDecimal source = null;
        Boolean hideExperimental = null;
        String search = null;
        WorkersAiSearchAuthor200Response response = api.workersAiSearchModel(accountId, perPage, page, task, author, source, hideExperimental, search);
        // TODO: test validations
    }

    /**
     * Task Search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workersAiSearchTaskTest() throws ApiException {
        Integer accountId = null;
        WorkersAiSearchAuthor200Response response = api.workersAiSearchTask(accountId);
        // TODO: test validations
    }

}
