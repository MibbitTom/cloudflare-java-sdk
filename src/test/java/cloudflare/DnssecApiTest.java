/*
 * Cloudflare API
 * To get started using Cloudflare's products and services via the API, refer to [how to interact with Cloudflare](https://developers.cloudflare.com/fundamentals/basic-tasks/interact-with-cloudflare/), which covers using tools like [Terraform](https://developers.cloudflare.com/terraform/#cloudflare-terraform) and the [official SDKs](https://developers.cloudflare.com/fundamentals/api/reference/sdks/) to maintain your Cloudflare resources.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloudflare;

import invalidPackageName.ApiException;
import org.openapitools.client.model.DnssecDeleteDnssecRecords4XXResponse;
import org.openapitools.client.model.DnssecDeleteDnssecResponseSingle;
import org.openapitools.client.model.DnssecDnssecDetails4XXResponse;
import org.openapitools.client.model.DnssecDnssecResponseSingle;
import org.openapitools.client.model.DnssecEditDnssecStatusRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DnssecApi
 */
@Disabled
public class DnssecApiTest {

    private final DnssecApi api = new DnssecApi();

    /**
     * Delete DNSSEC records
     *
     * Delete DNSSEC.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dnssecDeleteDnssecRecordsTest() throws ApiException {
        String zoneId = null;
        DnssecDeleteDnssecResponseSingle response = api.dnssecDeleteDnssecRecords(zoneId);
        // TODO: test validations
    }

    /**
     * DNSSEC Details
     *
     * Details about DNSSEC status and configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dnssecDnssecDetailsTest() throws ApiException {
        String zoneId = null;
        DnssecDnssecResponseSingle response = api.dnssecDnssecDetails(zoneId);
        // TODO: test validations
    }

    /**
     * Edit DNSSEC Status
     *
     * Enable or disable DNSSEC.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dnssecEditDnssecStatusTest() throws ApiException {
        String zoneId = null;
        DnssecEditDnssecStatusRequest dnssecEditDnssecStatusRequest = null;
        DnssecDnssecResponseSingle response = api.dnssecEditDnssecStatus(zoneId, dnssecEditDnssecStatusRequest);
        // TODO: test validations
    }

}
